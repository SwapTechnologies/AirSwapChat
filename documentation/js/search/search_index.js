var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AccountComponent.html",[0,0.292,1,0.87]],["body/components/AccountComponent.html",[0,0.528,1,1.514,2,0.169,3,0.169,4,1.203,5,1.203,6,1.203,7,0.141,8,3.222,9,1.19,10,1.599,11,2.794,12,0.894,13,1.914,14,2.021,15,3.452,16,1.51,17,5.04,18,1.51,19,4.288,20,0.226,21,0.557,22,1.114,23,3.747,24,2.546,25,0.654,26,2.979,27,1.705,28,0.654,29,2.35,30,1.825,31,0.755,32,5.04,33,0.653,34,0.023,35,0.457,36,0.383,37,0.653,38,3.787,39,0.511,40,0.989,41,3.787,42,3.787,43,0.525,44,0.318,45,1.745,46,2.165,47,2.165,48,0.141,49,0.384,50,3.792,51,2.572,52,3.787,53,3.787,54,3.787,55,2.85,56,3.127,57,3.127,58,3.792,59,3.127,60,5.04,61,1.069,62,1.602,63,1.51,64,1.053,65,1.705,66,1.203,67,1.602,68,0.894,69,1.069,70,1.203,71,0.95,72,1.203,73,0.95,74,1.809,75,1.423,76,1.203,77,0.95,78,1.203,79,0.95,80,1.602,81,0.95,82,1.069,83,1.203,84,0.95,85,1.203,86,1.008,87,1.069,88,1.602,89,0.95,90,0.95,91,1.008,92,1.203,93,0.95,94,1.203,95,0.95,96,0.653,97,1.203,98,0.95,99,1.008,100,1.008,101,0.95,102,1.134,103,1.203,104,0.95,105,1.134,106,1.203,107,0.894,108,1.203,109,0.894,110,1.134,111,1.203,112,0.016,113,0.016]],["title/injectables/AirswapdexService.html",[114,0.485,115,1.838]],["body/injectables/AirswapdexService.html",[2,0.085,3,0.085,7,0.071,20,0.425,21,0.338,22,0.95,24,1.237,25,0.397,28,0.249,29,1.189,30,1.227,31,0.662,33,0.818,34,0.024,35,0.556,36,0.496,37,0.818,39,0.539,43,0.353,44,0.161,48,0.071,49,0.195,57,1.896,112,0.01,113,0.01,114,0.533,115,1.619,116,1.631,117,4.347,118,4.749,119,5.512,120,3.056,121,3.056,122,3.056,123,1.917,124,1.917,125,1.25,126,3.756,127,4.111,128,4.555,129,4.625,130,4.174,131,4.555,132,1.09,133,6.053,134,3.808,135,3.808,136,3.995,137,1.917,138,4.475,139,1.096,140,3.056,141,3.81,142,1.917,143,3.81,144,1.917,145,1.917,146,1.984,147,1.917,148,1.917,149,0.721,150,0.847,151,3.808,152,4.305,153,1.884,154,4.555,155,5.989,156,3.699,157,5.825,158,4.305,159,4.69,160,2.38,161,5.06,162,2.6,163,3.056,164,3.271,165,3.056,166,3.808,167,4.305,168,2.299,169,3.056,170,1.917,171,3.056,172,1.917,173,1.189,174,3.056,175,1.917,176,1.917,177,1.442,178,1.747,179,0.541,180,0.883,181,0.827,182,1.917,183,2.299,184,1.917,185,1.917,186,1.442,187,1.631,188,1.015,189,1.631,190,1.917,191,3.81,192,1.917,193,0.915,194,3.242,195,3.242,196,4.04,197,1.917,198,6.741,199,1.917,200,1.917,201,5.947,202,1.917,203,1.917,204,1.917,205,1.917,206,1.917,207,1.917,208,1.917,209,1.917,210,1.917,211,1.917,212,3.056,213,1.747]],["title/components/AnswerOrdersComponent.html",[0,0.292,68,0.819]],["body/components/AnswerOrdersComponent.html",[0,0.401,1,0.484,2,0.086,3,0.086,4,0.614,5,0.614,6,0.614,7,0.072,9,0.726,10,1.081,11,1.889,12,0.456,13,1.761,14,1.845,16,0.921,18,0.921,20,0.115,21,0.34,22,1.183,23,2.708,24,1.551,25,0.399,26,2.153,27,1.232,28,0.399,30,1.232,31,0.784,33,0.918,34,0.024,35,0.442,36,0.422,37,0.918,39,0.625,40,0.996,43,0.541,44,0.162,45,0.89,46,1.104,47,1.104,48,0.072,49,0.196,57,1.198,59,2.708,61,0.545,62,0.977,63,0.921,64,0.642,65,1.232,66,0.614,67,0.977,68,1.031,69,1.503,70,0.614,71,0.484,72,0.614,73,0.484,74,1.307,75,0.868,76,0.614,77,0.484,78,0.614,79,0.484,80,0.977,81,0.484,82,1.081,83,0.614,84,0.484,85,0.614,86,0.514,87,0.545,88,0.977,89,0.484,90,0.484,91,0.514,92,0.614,93,0.484,94,0.614,95,0.484,96,0.333,97,0.614,98,0.484,99,0.514,100,0.514,101,0.484,102,0.578,103,0.614,104,0.484,105,0.578,106,0.614,107,0.456,108,0.614,109,0.456,110,0.578,111,0.614,112,0.01,113,0.01,115,2.69,125,0.877,126,1.198,127,1.311,128,1.453,129,3.285,130,1.311,131,3.82,132,1.094,134,2.881,135,2.881,136,2.881,138,1.453,139,1.104,146,1.232,149,1.199,150,1.128,153,0.818,160,1.563,168,1.453,179,0.868,188,1.023,193,1.147,214,4.949,215,4.081,216,1.453,217,2.605,218,2.615,219,2.615,220,2.795,221,3.714,222,3.714,223,4.319,224,2.708,225,2.69,226,3.073,227,3.073,228,2.615,229,3.073,230,3.073,231,2.615,232,1.931,233,2.298,234,2.504,235,2.191,236,3.073,237,2.615,238,1.931,239,2.615,240,1.931,241,1.931,242,1.931,243,1.931,244,2.313,245,1.931,246,1.931,247,1.931,248,3.714,249,1.931,250,0.818,251,2.313,252,1.931,253,3.15,254,2.615,255,1.931,256,1.931,257,1.931,258,1.931,259,1.931,260,1.931,261,1.931,262,2.964,263,1.931,264,1.931,265,1.311,266,1.104,267,1.311,268,1.198,269,1.023,270,1.311,271,1.311,272,1.198,273,1.198,274,1.104,275,1.023,276,1.198,277,0.456,278,1.019,279,1.453,280,1.453,281,1.453,282,2.313,283,2.313,284,1.453,285,1.453,286,1.453,287,1.643,288,2.881,289,1.643,290,1.453,291,1.643,292,2.881,293,1.643,294,1.453,295,1.643,296,1.643,297,1.643,298,1.643,299,2.313,300,2.881,301,2.313,302,2.313,303,3.285,304,2.313,305,1.643,306,1.643,307,1.643,308,1.643,309,1.643,310,1.643,311,1.453,312,1.643,313,1.643,314,1.643,315,1.643,316,1.643,317,2.313,318,2.313,319,2.313,320,1.643,321,2.027,322,1.643,323,2.313,324,1.643,325,1.643,326,1.643,327,1.643,328,2.376,329,2.881,330,1.453,331,1.643,332,1.643,333,1.643,334,1.643,335,1.643,336,1.643,337,2.087,338,2.313,339,1.643,340,1.643,341,2.615,342,1.453,343,1.643,344,1.643,345,1.643,346,4.007,347,4.365,348,4.365,349,4.159,350,4.365,351,2.313,352,3.82,353,4.159,354,5.527,355,6.065,356,3.073,357,6.238,358,1.613,359,3.073,360,3.073,361,3.073,362,3.073,363,3.073,364,3.073,365,3.073,366,3.073,367,1.643,368,3.073,369,4.365,370,2.313,371,4.694,372,3.073,373,2.615,374,3.714,375,3.073,376,3.714,377,4.365,378,3.073,379,2.615,380,2.313,381,2.615,382,2.615,383,2.313,384,3.073,385,3.073,386,3.073,387,3.073,388,3.073,389,3.073,390,2.313,391,1.643]],["title/components/AppComponent.html",[0,0.292,71,0.87]],["body/components/AppComponent.html",[0,0.545,1,1.047,2,0.186,3,0.186,4,1.327,5,1.327,6,1.327,7,0.155,9,1.268,10,1.677,11,2.93,12,0.986,13,1.93,14,2.04,16,1.609,18,1.609,20,0.249,25,0.697,26,3.093,27,1.77,28,0.771,31,0.713,34,0.023,35,0.45,39,0.545,40,1.054,43,0.387,44,0.351,48,0.155,49,0.424,61,1.179,62,1.707,63,1.609,64,1.122,65,1.77,66,1.327,67,1.707,68,0.986,69,1.179,70,1.327,71,1.572,72,1.327,73,1.047,74,1.878,75,1.517,76,1.327,77,1.047,78,1.327,79,1.047,80,1.707,81,1.047,82,1.179,83,1.327,84,1.047,85,1.327,86,1.111,87,1.179,88,1.707,89,1.047,90,1.047,91,1.111,92,1.327,93,1.047,94,1.327,95,1.047,96,0.719,97,1.327,98,1.047,99,1.111,100,1.111,101,1.047,102,1.25,103,1.327,104,1.047,105,1.25,106,1.327,107,0.986,108,1.327,109,0.986,110,1.25,111,1.327,112,0.017,113,0.017,181,2.318,392,3.552,393,5.372,394,5.372,395,4.175,396,4.175,397,4.175]],["title/modules/AppModule.html",[398,1.838,399,2.356]],["body/modules/AppModule.html",[0,0.515,1,1.368,2,0.102,3,0.102,7,0.085,14,0.648,25,0.298,30,1.46,34,0.024,43,0.665,44,0.193,45,1.058,48,0.085,61,0.648,64,0.48,68,1.341,69,0.994,71,1.564,73,1.424,74,0.688,75,1.354,77,1.424,79,1.424,81,1.424,82,0.994,84,1.424,86,1.559,87,0.648,89,1.424,90,1.368,91,0.611,93,1.368,95,1.424,96,0.827,98,1.424,99,1.512,100,0.611,101,1.368,102,0.688,104,1.424,105,0.688,107,1.288,109,1.288,112,0.011,113,0.011,153,0.611,160,0.822,193,1.549,215,1.425,217,0.93,220,2.383,234,2.551,235,2.232,266,1.313,269,1.217,270,1.559,271,1.559,272,1.425,273,1.425,398,2.267,399,4.948,400,1.559,401,2.655,402,2.994,403,3.386,404,1.954,405,1.954,406,1.954,407,1.954,408,1.954,409,3.386,410,3.386,411,3.386,412,2.741,413,1.969,414,2.741,415,3.927,416,2.741,417,2.957,418,2.994,419,1.954,420,1.728,421,1.728,422,2.296,423,3.519,424,2.648,425,1.313,426,3.519,427,2.296,428,3.519,429,1.728,430,1.728,431,2.994,432,3.519,433,1.954,434,2.296,435,1.954,436,2.296,437,2.296,438,3.519,439,4.986,440,1.728,441,2.296,442,2.994,443,2.296,444,2.296,445,4.081,446,2.994,447,3.22,448,2.296,449,1.954,450,1.954,451,1.954,452,1.954,453,2.296,454,2.296,455,1.728,456,2.994,457,1.559,458,2.994,459,1.559,460,1.954,461,2.296,462,1.559,463,1.728,464,1.728,465,2.296,466,1.728,467,1.728,468,2.296,469,2.296,470,1.954,471,1.954,472,1.954,473,1.954,474,1.728,475,1.425,476,1.728,477,1.133,478,1.559,479,2.296,480,1.217,481,2.296,482,1.954,483,1.954,484,1.954,485,1.217,486,2.296,487,2.296,488,2.39,489,1.559,490,1.954,491,3.519,492,1.728,493,1.728,494,2.296,495,1.728,496,2.296,497,2.296,498,2.296,499,1.728,500,2.296,501,1.728,502,2.296,503,3.519,504,6.238,505,1.954,506,2.296,507,2.296,508,2.296,509,1.954,510,3.519,511,1.217,512,2.296,513,2.296,514,1.728,515,1.954,516,3.641,517,1.954,518,1.954,519,1.954,520,1.954,521,1.954,522,2.994,523,1.954,524,1.954,525,1.954,526,1.954,527,1.954,528,1.954,529,2.648,530,1.954,531,1.954,532,1.954,533,2.648,534,1.954,535,1.954,536,1.954,537,1.954,538,1.954,539,1.954,540,1.954,541,2.296,542,2.296,543,2.296]],["title/directives/AutofocusDirective.html",[64,0.725,107,0.819]],["body/directives/AutofocusDirective.html",[2,0.227,3,0.227,7,0.19,9,1.437,12,1.206,13,1.62,20,0.305,25,0.79,28,0.663,31,0.731,33,0.88,34,0.023,35,0.387,36,0.345,37,0.88,39,0.518,40,1.002,43,0.473,44,0.429,48,0.19,49,0.518,64,1.359,107,1.437,112,0.019,113,0.019,187,4.347,544,4.347,545,6.503,546,6.088,547,6.733,548,4.347,549,5.728,550,5.109,551,6.088,552,5.109,553,5.109]],["title/pipes/CallbackPipe.html",[409,2.152,485,1.838]],["body/pipes/CallbackPipe.html",[2,0.226,3,0.226,7,0.189,9,1.198,12,1.198,25,0.658,31,0.609,33,0.874,34,0.023,35,0.491,36,0.343,37,0.874,39,0.658,40,0.995,43,0.47,44,0.426,48,0.189,49,0.515,112,0.019,113,0.019,151,3.817,153,1.35,250,1.35,409,3.761,485,3.435,554,4.316,555,6.968,556,4.316,557,6.062,558,6.866,559,5.073,560,6.062,561,5.073,562,5.073,563,5.073]],["title/injectables/ColumnSpaceObserverService.html",[114,0.485,412,1.838]],["body/injectables/ColumnSpaceObserverService.html",[2,0.197,3,0.197,7,0.165,20,0.264,21,0.616,22,1.052,28,0.723,31,0.732,33,0.762,34,0.024,35,0.335,36,0.377,37,0.762,39,0.449,43,0.565,44,0.372,48,0.165,49,0.449,112,0.018,113,0.018,114,0.853,132,1.53,149,1.044,150,0.983,173,2.744,180,2.038,181,1.909,278,1.483,321,1.683,412,2.953,414,3.626,429,3.328,430,3.328,475,3.974,564,5.45,565,3.763,566,6.406,567,4.423,568,6.406,569,5.573,570,5.573,571,4.183,572,5.573,573,4.423,574,4.423,575,5.573,576,4.423,577,4.423,578,4.423,579,6.102,580,4.423,581,6.741,582,4.423,583,4.423,584,3.328,585,3.328,586,6.102,587,4.423]],["title/injectables/ConnectWeb3Service.html",[30,0.979,114,0.485]],["body/injectables/ConnectWeb3Service.html",[2,0.121,3,0.121,7,0.101,15,2.988,20,0.163,21,0.443,22,1.197,25,0.519,28,0.519,30,1.13,31,0.827,33,0.818,34,0.024,35,0.359,36,0.417,37,0.818,39,0.699,40,1.18,43,0.371,44,0.229,48,0.101,49,0.277,56,2.943,59,2.484,65,0.77,91,0.725,100,0.725,112,0.015,113,0.013,114,0.731,125,1.231,139,3.528,149,1.234,150,1.161,153,1.601,173,1.691,183,3.57,186,2.051,188,2.513,193,1.566,233,2.512,250,0.725,277,0.644,278,1.391,390,2.051,401,2.484,403,2.484,425,1.558,480,1.444,511,3.479,571,1.691,585,2.051,588,1.851,589,4.447,590,4.447,591,4.447,592,4.447,593,4.447,594,4.447,595,4.447,596,4.447,597,4.447,598,4.447,599,4.003,600,4.447,601,4.447,602,2.051,603,4.003,604,2.726,605,2.726,606,2.726,607,3.406,608,2.726,609,2.726,610,2.726,611,2.726,612,2.726,613,2.726,614,2.726,615,2.726,616,2.726,617,2.726,618,4.115,619,2.726,620,2.726,621,2.726,622,2.726,623,3.406,624,2.726,625,2.726,626,2.319,627,1.851,628,2.051,629,2.319,630,1.851,631,4.036,632,3.243,633,4.447,634,2.319,635,2.319,636,3.406,637,3.406,638,4.036,639,3.012,640,2.319,641,2.319,642,2.319,643,2.319,644,3.406,645,1.444,646,2.319,647,2.319,648,3.406,649,2.319,650,2.319,651,2.319,652,3.406,653,2.319,654,2.319,655,2.319,656,4.036,657,2.319,658,2.319,659,3.406,660,2.319,661,1.558,662,2.319,663,2.319,664,2.319,665,2.319,666,2.319,667,3.406,668,3.406,669,4.036,670,2.319,671,3.406,672,3.406,673,2.319,674,2.319,675,2.319,676,2.319,677,2.319,678,3.406,679,3.012,680,2.319,681,2.319,682,2.051,683,2.319,684,3.406,685,2.319,686,1.851,687,2.051,688,2.319,689,2.319,690,3.55,691,4.952,692,2.319,693,2.051,694,2.319,695,2.319,696,2.319,697,2.319,698,2.319,699,3.406,700,2.319,701,2.319]],["title/injectables/ConnectionService.html",[114,0.485,233,1.497]],["body/injectables/ConnectionService.html",[2,0.202,3,0.202,7,0.169,20,0.271,21,0.626,22,1.23,28,0.801,31,0.814,34,0.023,36,0.306,39,0.46,43,0.524,44,0.381,48,0.169,49,0.46,112,0.018,113,0.018,114,0.863,146,1.598,149,1.526,150,1.436,153,1.805,173,2.813,180,2.089,181,1.956,233,2.443,250,1.206,511,2.999,645,3.686,702,3.857,703,6.463,704,3.205,705,6.463,706,6.463,707,5.66,708,2.292,709,2.999,710,2.792,711,4.534,712,4.534,713,4.534,714,4.534,715,4.534,716,2.236,717,4.534,718,4.534,719,4.534]],["title/components/DialogAddPeerComponent.html",[0,0.292,73,0.87]],["body/components/DialogAddPeerComponent.html",[0,0.506,1,0.836,2,0.148,3,0.148,4,1.06,5,1.06,6,1.06,7,0.124,9,1.091,10,1.498,12,0.787,13,1.891,14,1.994,16,1.384,18,1.384,20,0.199,21,0.511,22,1.139,25,0.6,27,1.617,28,0.6,31,0.781,33,0.575,34,0.023,35,0.434,36,0.387,37,0.575,39,0.581,40,1.18,43,0.491,44,0.28,48,0.124,49,0.338,61,0.941,62,1.469,63,1.384,64,0.966,65,1.617,66,1.06,67,1.469,68,0.787,69,0.941,70,1.06,71,0.836,72,1.06,73,1.436,74,2.003,75,2.043,76,1.06,77,0.836,78,1.06,79,0.836,80,1.469,81,0.836,82,0.941,83,1.06,84,0.836,85,1.06,86,0.887,87,0.941,88,1.469,89,0.836,90,0.836,91,0.887,92,1.06,93,0.836,94,1.06,95,1.159,96,0.797,97,1.06,98,0.836,99,0.887,100,0.887,101,0.836,102,0.999,103,1.06,104,0.836,105,0.999,106,1.06,107,0.787,108,1.06,109,0.787,110,0.999,111,1.06,112,0.015,113,0.015,114,0.646,125,0.851,149,0.787,150,0.741,164,3.478,213,3.72,358,1.978,463,2.509,488,4.487,489,4.487,511,2.449,720,4.487,721,2.837,722,4.622,723,4.622,724,3.733,725,5.728,726,3.89,727,3.89,728,3.89,729,2.264,730,4.227,731,4.622,732,3.334,733,3.334,734,3.334,735,3.334,736,2.264,737,3.334,738,3.334,739,2.069,740,2.264,741,1.645,742,2.264,743,4.622,744,3.334,745,3.334,746,3.334,747,3.334]],["title/components/DialogAddTokenComponent.html",[0,0.292,77,0.87]],["body/components/DialogAddTokenComponent.html",[0,0.438,1,0.585,2,0.104,3,0.104,4,0.742,5,0.742,6,0.742,7,0.087,9,0.842,10,1.221,12,0.551,13,1.812,14,1.903,16,1.068,18,1.068,20,0.139,21,0.394,22,1.199,24,1.751,25,0.463,27,1.366,28,0.463,30,1.366,31,0.799,33,0.614,34,0.024,35,0.416,36,0.408,37,0.614,39,0.613,40,1.185,43,0.529,44,0.196,45,1.076,48,0.087,49,0.237,56,2.212,61,0.659,62,1.133,63,1.068,64,0.745,65,1.366,66,0.742,67,1.133,68,0.551,69,0.659,70,0.742,71,0.585,72,0.742,73,0.585,74,1.845,75,2.036,76,0.742,77,1.213,78,0.742,79,0.585,80,1.133,81,0.585,82,0.659,83,0.742,84,0.585,85,0.742,86,0.621,87,0.659,88,1.133,89,0.585,90,0.585,91,0.621,92,0.742,93,0.585,94,0.742,95,0.585,96,0.402,97,0.742,98,0.585,99,0.621,100,0.621,101,0.585,102,0.699,103,0.742,104,0.585,105,0.699,106,0.742,107,0.551,108,0.742,109,0.551,110,0.699,111,0.742,112,0.011,113,0.011,114,0.499,125,1.207,132,1.307,146,0.659,149,0.842,150,0.792,153,1.607,160,1.549,179,1.903,193,1.068,213,3.14,275,1.237,276,1.449,278,1.151,321,0.889,413,2.175,477,1.152,499,5.043,645,2.564,679,1.757,716,1.152,724,3.234,726,3.286,727,3.286,728,3.286,729,1.586,730,3.731,736,1.586,739,1.449,740,1.586,741,1.152,742,1.586,748,5.043,749,1.987,750,3.565,751,3.565,752,4.839,753,4.674,754,4.117,755,4.839,756,4.839,757,4.839,758,4.839,759,3.641,760,4.839,761,3.033,762,3.267,763,3.565,764,2.335,765,2.335,766,3.565,767,2.335,768,2.335,769,2.335,770,2.335,771,2.335,772,2.335,773,2.335,774,2.335,775,2.335,776,2.335,777,2.335,778,2.335,779,2.335,780,2.335,781,3.033,782,1.987,783,2.682,784,4.324,785,2.335,786,4.324,787,4.839,788,4.839,789,4.839,790,2.335,791,2.335,792,2.335,793,2.335,794,3.565,795,2.335,796,2.335,797,4.117,798,1.987,799,1.757,800,3.033,801,2.335,802,2.335,803,4.324,804,4.674,805,1.987,806,2.335,807,1.987,808,3.679,809,2.335,810,1.987,811,4.324,812,2.335,813,1.987,814,1.076,815,2.335,816,1.987,817,1.076,818,1.987,819,1.987,820,1.987,821,3.033,822,3.565,823,2.682,824,3.565,825,3.033,826,3.565,827,3.565,828,3.565]],["title/components/DialogGetOrderComponent.html",[0,0.292,79,0.87]],["body/components/DialogGetOrderComponent.html",[0,0.447,1,0.615,2,0.109,3,0.109,4,0.779,5,0.779,6,0.779,7,0.091,9,0.873,10,1.258,12,0.579,13,1.824,14,1.917,16,1.108,18,1.108,20,0.146,21,0.409,22,1.205,24,1.804,25,0.48,27,1.401,28,0.48,30,1.401,31,0.819,33,0.965,34,0.024,35,0.463,36,0.447,37,0.965,39,0.685,40,1.098,43,0.567,44,0.206,45,1.13,48,0.091,49,0.249,61,0.692,62,1.175,63,1.108,64,0.773,65,1.401,66,0.779,67,1.175,68,0.579,69,0.692,70,0.779,71,0.615,72,0.779,73,0.615,74,1.868,75,1.044,76,0.779,77,0.615,78,0.779,79,1.244,80,1.175,81,0.615,82,0.692,83,0.779,84,0.615,85,0.779,86,0.652,87,0.692,88,1.175,89,0.615,90,0.615,91,0.652,92,0.779,93,0.615,94,0.779,95,0.615,96,0.423,97,0.779,98,0.615,99,0.652,100,0.652,101,0.615,102,0.734,103,0.779,104,0.615,105,0.734,106,0.779,107,0.579,108,0.779,109,0.579,110,0.734,111,0.779,112,0.012,113,0.012,114,0.517,115,3.079,125,1.271,126,3.473,132,1.244,149,1.052,150,0.99,179,1.401,193,1.486,213,3.2,217,2.009,220,2.678,224,3.078,225,2.966,235,2.416,250,1.32,253,1.521,262,3.369,265,1.665,267,1.665,269,1.299,272,1.521,273,1.521,274,2.546,275,1.299,276,1.521,278,1.185,321,1.408,328,1.521,349,2.783,383,2.783,492,5.158,645,2.36,716,1.209,724,3.304,726,3.369,727,2.512,728,3.369,729,1.665,730,3.801,736,1.665,739,1.521,740,1.665,741,1.209,742,1.665,748,5.158,783,3.352,829,1.845,830,3.147,831,3.147,832,4.221,833,3.733,834,3.733,835,4.221,836,3.79,837,3.147,838,3.699,839,3.147,840,4.961,841,3.147,842,3.147,843,2.452,844,3.147,845,2.452,846,3.699,847,2.452,848,3.147,849,2.452,850,2.452,851,2.452,852,2.452,853,3.699,854,2.452,855,2.452,856,3.147,857,2.452,858,2.452,859,2.452,860,2.452,861,2.086,862,2.086,863,2.086,864,2.086,865,2.452,866,2.086,867,2.452,868,3.699,869,2.452,870,2.452,871,2.295,872,2.086,873,2.086,874,2.086,875,2.452,876,2.452,877,2.452,878,2.452,879,2.452,880,2.452,881,3.147,882,2.452,883,2.086,884,3.699,885,3.699,886,3.699,887,3.699,888,3.699,889,3.699,890,3.147]],["title/components/DialogSendOfflineComponent.html",[0,0.292,81,0.87]],["body/components/DialogSendOfflineComponent.html",[0,0.506,1,0.838,2,0.149,3,0.149,4,1.062,5,1.062,6,1.062,7,0.124,9,1.093,10,1.5,12,0.789,13,1.891,14,1.995,16,1.387,18,1.387,20,0.199,21,0.512,22,1.074,25,0.601,27,1.619,28,0.601,31,0.767,33,0.576,34,0.023,35,0.434,36,0.359,37,0.576,39,0.582,40,1.181,43,0.429,44,0.281,48,0.124,49,0.339,61,0.943,62,1.471,63,1.387,64,0.967,65,1.619,66,1.062,67,1.471,68,0.789,69,0.943,70,1.062,71,0.838,72,1.062,73,0.838,74,2.004,75,1.307,76,1.062,77,0.838,78,1.062,79,0.838,80,1.471,81,1.438,82,2.028,83,1.062,84,0.838,85,1.062,86,0.889,87,0.943,88,1.471,89,0.838,90,0.838,91,0.889,92,1.062,93,0.838,94,1.062,95,0.838,96,1.038,97,1.062,98,0.838,99,0.889,100,0.889,101,0.838,102,1.001,103,1.062,104,0.838,105,1.001,106,1.062,107,0.789,108,1.062,109,0.789,110,1.001,111,1.062,112,0.015,113,0.015,114,0.647,164,3.484,213,3.722,358,1.822,367,2.843,370,3.484,391,2.843,488,4.421,493,4.899,661,2.646,720,4.421,724,3.736,726,3.894,727,3.894,728,3.894,729,2.269,730,4.23,736,2.269,739,2.073,740,2.269,741,1.648,742,2.269,781,3.939,782,2.843,805,3.939,891,2.843,892,5.734,893,4.629,894,4.629,895,3.342,896,3.342,897,3.342,898,3.342,899,3.342,900,3.342,901,3.342,902,3.939,903,3.939,904,4.629,905,4.629,906,4.629,907,4.629,908,4.629,909,4.629,910,4.629,911,4.629,912,4.629,913,3.342]],["title/injectables/Erc20Service.html",[114,0.485,762,1.983]],["body/injectables/Erc20Service.html",[2,0.083,3,0.083,7,0.069,20,0.364,21,0.33,22,0.643,24,1.208,25,0.387,28,0.554,29,1.153,30,1.206,31,0.693,33,0.969,34,0.024,35,0.555,36,0.495,37,0.969,39,0.659,43,0.346,44,0.156,48,0.069,49,0.189,57,1.85,112,0.01,113,0.01,114,0.522,125,1.164,139,3.432,146,1.924,149,0.439,150,0.413,151,4.977,152,5.627,153,1.862,154,5.11,155,5.559,156,3.635,158,5.627,159,5.684,160,2.369,162,4.638,166,3.215,167,3.635,177,1.399,178,1.704,179,0.525,180,0.857,181,0.802,188,1.58,189,1.581,193,0.893,194,1.581,195,1.581,196,1.581,231,2.537,251,2.244,253,2.651,278,0.495,281,1.399,282,2.244,283,2.244,284,1.399,285,1.399,286,1.399,687,2.244,754,2.537,762,1.704,800,4.247,810,1.581,813,1.581,814,2.3,816,2.537,817,2.3,871,1.153,914,1.581,915,4.272,916,4.992,917,3.733,918,3.979,919,2.982,920,1.859,921,2.982,922,5.245,923,1.859,924,2.982,925,1.859,926,2.982,927,1.859,928,2.982,929,1.859,930,2.982,931,1.859,932,2.982,933,1.859,934,2.982,935,1.859,936,1.859,937,5.452,938,6.004,939,5.452,940,2.982,941,4.272,942,4.992,943,2.982,944,4.992,945,2.982,946,4.272,947,2.982,948,2.982,949,2.982,950,2.982,951,2.982,952,2.982,953,2.982,954,2.982,955,2.982,956,2.982,957,1.859,958,1.859,959,1.859,960,1.859,961,1.859,962,4.677,963,1.859,964,4.272,965,1.581,966,1.859,967,1.859,968,2.982,969,1.859,970,2.982,971,1.859,972,1.859,973,1.859,974,1.859,975,1.859,976,1.859,977,1.859]],["title/components/ErrorComponent.html",[0,0.292,84,0.87]],["body/components/ErrorComponent.html",[0,0.545,1,1.044,2,0.185,3,0.185,4,1.323,5,1.323,6,1.323,7,0.155,9,1.266,10,1.674,12,0.983,13,1.93,14,2.039,16,1.606,18,1.606,20,0.248,25,0.696,27,1.768,28,0.77,31,0.644,34,0.023,35,0.449,39,0.422,40,0.817,43,0.386,44,0.35,48,0.155,49,0.422,61,1.175,62,1.704,63,1.606,64,1.12,65,1.768,66,1.323,67,1.704,68,0.983,69,1.175,70,1.323,71,1.044,72,1.323,73,1.044,74,1.876,75,1.514,76,1.323,77,1.044,78,1.323,79,1.044,80,1.704,81,1.044,82,1.175,83,1.323,84,1.57,85,1.323,86,1.108,87,1.175,88,1.704,89,1.044,90,1.044,91,1.108,92,1.323,93,1.044,94,1.323,95,1.044,96,0.717,97,1.323,98,1.044,99,1.108,100,1.108,101,1.044,102,1.247,103,1.323,104,1.044,105,1.247,106,1.323,107,0.983,108,1.323,109,0.983,110,1.247,111,1.323,112,0.017,113,0.017,480,2.841,509,5.329,511,2.841,682,4.034,978,3.541,979,5.362,980,5.362,981,4.163,982,4.163,983,5.362,984,5.362,985,5.362,986,5.362]],["title/directives/FocusDirective.html",[64,0.725,109,0.819]],["body/directives/FocusDirective.html",[2,0.208,3,0.208,7,0.174,9,1.36,10,1.765,12,1.101,13,1.533,20,0.278,21,0.637,22,1.177,25,0.748,27,1.843,28,0.748,31,0.805,33,0.804,34,0.023,35,0.353,36,0.422,37,0.804,39,0.585,40,1.13,43,0.432,44,0.392,48,0.174,49,0.473,63,1.726,64,1.306,109,1.36,110,2.046,112,0.018,113,0.018,114,0.652,154,4.912,250,1.533,278,1.241,548,3.969,549,5.554,987,3.969,988,6.251,989,7.164,990,6.528,991,5.761,992,4.665,993,4.665,994,4.665,995,4.665,996,4.665,997,4.665]],["title/components/GetOrderComponent.html",[0,0.292,89,0.87]],["body/components/GetOrderComponent.html",[0,0.445,1,0.608,2,0.108,3,0.108,4,0.771,5,0.771,6,0.771,7,0.09,9,0.866,10,1.249,11,2.183,12,0.573,13,1.821,14,1.914,16,1.099,18,1.099,20,0.145,21,0.406,22,1.204,24,1.486,25,0.476,26,2.434,27,1.393,28,0.476,29,1.505,30,1.393,31,0.804,33,0.913,34,0.024,35,0.451,36,0.442,37,0.913,39,0.65,40,1.094,43,0.536,44,0.204,45,1.117,48,0.09,49,0.246,61,0.685,62,1.166,63,1.099,64,0.766,65,1.393,66,0.771,67,1.166,68,0.573,69,0.685,70,0.771,71,0.608,72,0.771,73,0.608,74,1.478,75,1.036,76,0.771,77,0.608,78,0.771,79,0.608,80,1.166,81,0.608,82,0.685,83,0.771,84,0.608,85,0.771,86,0.645,87,0.685,88,1.166,89,1.237,90,0.608,91,0.645,92,0.771,93,0.608,94,0.771,95,0.608,96,0.418,97,0.771,98,0.608,99,0.645,100,0.645,101,0.608,102,0.726,103,0.771,104,0.608,105,0.726,106,0.771,107,0.573,108,0.771,109,0.573,110,0.726,111,0.771,112,0.012,113,0.012,115,3.067,125,1.233,126,3.061,127,3.35,130,3.35,132,0.92,149,1.045,150,0.983,179,1.723,193,1.67,217,1.792,224,3.061,225,2.954,228,3.121,235,2.406,244,2.761,250,0.976,253,2.276,262,3.35,265,1.647,267,1.647,269,1.285,274,2.53,275,1.285,276,1.505,278,0.976,279,2.761,280,2.761,288,1.825,292,1.825,299,1.825,300,1.825,301,1.825,302,1.825,303,1.825,304,1.825,317,1.825,318,1.825,319,1.825,321,1.878,328,2.276,329,1.825,337,1.647,342,1.825,346,2.761,349,3.713,352,2.761,353,2.761,358,1.166,371,3.713,374,4.197,376,3.121,379,3.121,380,2.761,381,3.121,382,3.121,383,2.761,457,4.578,632,2.745,645,1.944,690,2.491,716,1.196,783,2.761,829,1.825,830,3.121,831,3.121,832,4.197,833,3.713,834,3.713,835,4.197,836,4.197,837,3.121,839,3.121,841,3.121,842,2.063,844,3.121,848,3.121,856,3.121,861,2.063,862,2.063,863,2.063,864,2.063,866,2.063,871,2.276,872,2.063,873,2.063,874,2.063,881,2.063,883,2.063,890,4.197,998,5.736,999,3.669,1000,2.425,1001,2.425,1002,2.425,1003,2.425,1004,2.425,1005,2.425,1006,2.425,1007,2.425,1008,2.425,1009,2.425,1010,2.425,1011,2.425,1012,3.669,1013,3.669,1014,2.425,1015,2.063,1016,2.425,1017,2.425,1018,2.425,1019,2.425,1020,2.425,1021,2.063,1022,2.063,1023,2.063,1024,2.063,1025,2.063,1026,2.063,1027,2.063,1028,2.063,1029,2.063,1030,2.425,1031,2.425,1032,2.425,1033,4.197,1034,4.934,1035,3.669,1036,3.669,1037,3.669,1038,3.669,1039,3.669,1040,3.669]],["title/injectables/GetOrderService.html",[114,0.485,220,1.598]],["body/injectables/GetOrderService.html",[2,0.169,3,0.169,7,0.141,20,0.226,21,0.557,22,1.169,25,0.654,28,0.654,31,0.776,33,0.869,34,0.024,35,0.381,36,0.425,37,0.869,39,0.613,43,0.559,44,0.318,46,2.165,47,2.165,48,0.141,49,0.384,51,2.572,112,0.016,113,0.016,114,0.792,125,0.928,132,1.264,149,1.337,150,1.259,153,1.341,180,1.745,181,1.634,193,1.977,217,2.041,220,2.322,224,3.747,225,3.001,235,2.606,266,2.165,278,1.341,294,3.792,328,3.515,337,2.572,351,2.85,353,2.85,380,2.85,413,2.461,477,1.868,690,3.422,708,1.534,833,4.732,1015,3.222,1021,3.222,1022,3.222,1023,3.222,1024,3.222,1025,3.222,1026,3.222,1027,3.222,1028,3.222,1029,3.222,1041,5.614,1042,3.222,1043,6.039,1044,6.039,1045,5.04,1046,2.85,1047,5.04,1048,3.787,1049,5.04,1050,3.787,1051,3.787,1052,3.787,1053,3.787,1054,3.787,1055,3.787,1056,3.787,1057,3.787,1058,5.04,1059,3.787,1060,3.787,1061,3.787,1062,2.85,1063,5.04,1064,2.85,1065,3.787,1066,3.787,1067,5.04,1068,5.04,1069,5.04,1070,3.787,1071,3.787,1072,3.787,1073,3.222,1074,3.787,1075,3.787,1076,3.787,1077,3.787]],["title/components/InitialPageComponent.html",[0,0.292,90,0.87]],["body/components/InitialPageComponent.html",[0,0.541,1,1.022,2,0.181,3,0.181,4,1.295,5,1.295,6,1.295,7,0.152,9,1.249,10,1.658,11,2.896,12,0.962,13,1.926,14,2.035,16,1.584,18,1.584,20,0.243,25,0.686,26,3.065,27,1.754,28,0.762,31,0.705,34,0.023,35,0.444,39,0.537,40,1.219,43,0.377,44,0.342,48,0.152,49,0.414,61,1.15,62,1.68,63,1.584,64,1.105,65,1.754,66,1.295,67,1.68,68,0.962,69,1.15,70,1.295,71,1.022,72,1.295,73,1.022,74,1.861,75,1.493,76,1.295,77,1.022,78,1.295,79,1.022,80,1.68,81,1.022,82,1.15,83,1.295,84,1.022,85,1.295,86,1.084,87,1.15,88,1.68,89,1.022,90,1.558,91,1.787,92,1.295,93,1.022,94,1.295,95,1.022,96,0.702,97,1.295,98,1.022,99,1.084,100,1.084,101,1.022,102,1.22,103,1.295,104,1.022,105,1.22,106,1.295,107,0.962,108,1.295,109,0.962,110,1.22,111,1.295,112,0.017,113,0.017,459,4.219,686,3.591,1078,5.286,1079,3.467,1080,5.288,1081,5.288,1082,4.075,1083,4.075,1084,4.075]],["title/interfaces/LoggedInUser.html",[277,0.819,704,1.598]],["body/interfaces/LoggedInUser.html",[2,0.208,3,0.208,7,0.174,20,0.279,21,0.639,34,0.023,35,0.354,36,0.442,48,0.254,96,1.126,112,0.018,113,0.018,125,1.353,132,1.569,146,1.956,179,1.321,250,1.536,277,1.636,358,1.487,704,2.66,708,2.769,709,3.463,710,3.417,814,2.156,817,2.156,1085,2.48,1086,2.02,1087,3.3,1088,2.309,1089,2.675,1090,2.675,1091,2.675,1092,2.156]],["title/components/MainframeComponent.html",[0,0.292,93,0.87]],["body/components/MainframeComponent.html",[0,0.435,1,0.798,2,0.09,3,0.09,4,0.642,5,0.642,6,0.642,7,0.075,9,0.752,10,1.113,11,1.945,12,0.477,13,1.773,14,1.859,15,1.821,16,0.954,18,0.954,20,0.121,21,0.352,22,1.206,23,2.777,24,2.096,25,0.413,26,2.208,27,1.264,28,0.413,30,1.461,31,0.8,33,0.549,34,0.024,35,0.369,36,0.408,37,0.549,39,0.57,40,1.221,43,0.617,44,0.17,45,0.931,46,1.154,47,1.154,48,0.075,49,0.205,50,2.397,51,1.371,55,1.52,56,1.976,58,2.397,59,1.976,61,0.57,62,1.012,63,0.954,64,0.665,65,1.264,66,0.642,67,1.012,68,0.752,69,1.264,70,0.642,71,0.506,72,0.642,73,0.506,74,1.341,75,0.899,76,0.642,77,0.506,78,0.642,79,0.506,80,1.012,81,0.506,82,0.57,83,0.642,84,0.506,85,0.642,86,0.847,87,1.461,88,1.012,89,0.798,90,0.798,91,1.049,92,0.642,93,1.122,94,0.642,95,0.798,96,0.934,97,0.642,98,0.506,99,0.847,100,1.049,101,0.506,102,0.605,103,0.642,104,0.506,105,0.605,106,1.423,107,0.477,108,0.642,109,0.477,110,0.605,111,0.642,112,0.01,113,0.01,125,0.726,132,1.358,149,1.222,150,1.15,153,1.442,160,1.141,179,1.461,193,0.605,215,1.253,217,1.29,220,2.497,225,2.743,233,2.648,234,2.673,235,2.234,266,1.154,268,1.253,269,1.07,270,1.371,271,1.371,272,1.253,273,1.253,278,1.538,321,2.199,352,3.369,358,1.784,371,1.52,373,2.71,412,2.372,413,2.335,414,2.743,416,2.871,417,3.097,424,1.52,425,1.154,442,1.718,451,1.718,452,1.718,455,1.52,456,2.71,457,1.371,458,1.718,459,1.371,460,1.718,462,1.371,463,1.52,466,1.52,473,3.809,474,1.52,475,1.253,476,1.52,477,0.996,478,1.371,480,2.089,482,1.718,483,1.718,484,1.718,505,2.71,511,2.743,661,1.821,799,1.52,819,3.809,821,1.718,823,2.397,903,1.718,1062,1.52,1086,2.102,1093,1.718,1094,3.185,1095,3.185,1096,3.185,1097,3.895,1098,4.477,1099,4.477,1100,4.477,1101,4.477,1102,4.477,1103,4.477,1104,4.477,1105,4.477,1106,4.477,1107,3.185,1108,4.477,1109,4.477,1110,2.019,1111,3.355,1112,3.943,1113,4.477,1114,3.185,1115,3.185,1116,2.019,1117,2.019,1118,2.019,1119,2.019,1120,2.019,1121,3.185,1122,2.019,1123,3.185,1124,2.019,1125,2.019,1126,2.019,1127,2.019,1128,2.019,1129,2.019,1130,2.019,1131,2.019,1132,2.019,1133,2.019,1134,2.019,1135,2.019,1136,2.019,1137,2.019,1138,2.967,1139,2.019,1140,3.185,1141,3.185,1142,3.185,1143,2.019,1144,2.019,1145,2.019,1146,2.019,1147,1.718,1148,2.71,1149,3.185,1150,1.718,1151,2.019,1152,2.019,1153,3.355,1154,2.019,1155,3.355,1156,3.185,1157,2.019,1158,3.943,1159,2.019,1160,2.019,1161,2.019,1162,2.019,1163,2.019,1164,2.019,1165,2.019,1166,2.019,1167,2.019,1168,2.019,1169,2.019,1170,2.019,1171,2.019,1172,2.019,1173,1.718,1174,2.71,1175,3.943,1176,2.019,1177,2.019,1178,3.943,1179,2.019,1180,2.019,1181,2.019,1182,3.943,1183,2.019,1184,2.967,1185,2.019,1186,2.019,1187,3.185,1188,3.185,1189,3.185,1190,2.71,1191,3.185,1192,3.185,1193,3.185,1194,3.185,1195,3.185,1196,3.369,1197,3.185,1198,3.185,1199,3.185,1200,3.185,1201,3.185,1202,3.185,1203,3.185,1204,3.185,1205,3.185,1206,3.185,1207,3.185,1208,3.185,1209,3.185]],["title/interfaces/Message.html",[96,0.598,277,0.819]],["body/interfaces/Message.html",[2,0.211,3,0.211,7,0.176,20,0.283,21,0.643,34,0.023,35,0.358,36,0.425,48,0.255,96,1.209,112,0.019,113,0.019,125,1.348,132,1.689,146,1.852,179,1.336,250,1.547,277,1.64,358,1.504,704,2.181,708,2.548,709,2.508,710,3.237,814,2.181,817,2.181,1085,2.508,1086,2.832,1087,3.85,1088,2.335,1089,2.706,1090,2.706,1091,2.706,1092,2.181]],["title/components/MessageSystemComponent.html",[0,0.292,95,0.87]],["body/components/MessageSystemComponent.html",[0,0.464,1,0.668,2,0.119,3,0.119,4,0.847,5,0.847,6,0.847,7,0.099,9,0.93,10,1.322,11,2.31,12,0.629,13,1.844,14,1.94,16,1.179,18,1.179,20,0.159,21,0.436,22,1.157,23,3.209,24,1.595,25,0.511,26,2.551,27,1.46,28,0.511,29,1.654,30,1.46,31,0.785,33,0.459,34,0.024,35,0.391,36,0.39,37,0.459,39,0.586,40,1.228,43,0.59,44,0.224,45,1.228,46,1.524,47,1.524,48,0.099,49,0.271,50,2.963,51,1.81,55,2.006,61,0.753,62,1.251,63,1.179,64,0.823,65,1.46,66,0.847,67,1.251,68,0.629,69,0.753,70,0.847,71,0.668,72,0.847,73,0.987,74,1.935,75,1.731,76,0.847,77,0.668,78,0.847,79,0.668,80,1.251,81,0.668,82,1.686,83,0.847,84,0.668,85,0.847,86,0.709,87,0.753,88,1.251,89,0.668,90,0.668,91,0.709,92,0.847,93,0.668,94,0.847,95,1.297,96,1.172,97,0.847,98,0.668,99,0.709,100,0.709,101,0.668,102,0.798,103,0.847,104,0.668,105,0.798,106,0.847,107,0.629,108,0.847,109,0.629,110,0.798,111,0.847,112,0.013,113,0.013,125,0.725,146,0.753,149,0.629,150,0.592,193,0.798,225,3.06,235,2.492,266,1.524,269,1.412,278,1.376,290,2.963,321,2.274,358,1.835,413,2.274,414,3.06,462,4.484,471,4.4,472,2.268,477,1.315,478,1.81,489,1.81,490,2.268,716,1.315,720,4.484,724,1.654,739,3.583,741,1.315,798,2.268,834,2.963,1062,2.006,1097,4.345,1210,2.268,1211,3.938,1212,3.938,1213,3.938,1214,5.171,1215,5.171,1216,5.171,1217,5.171,1218,4.682,1219,5.171,1220,4.682,1221,3.938,1222,2.666,1223,2.666,1224,2.666,1225,2.666,1226,2.666,1227,2.666,1228,2.666,1229,2.666,1230,2.666,1231,2.666,1232,2.666,1233,2.666,1234,2.666,1235,2.268,1236,2.666,1237,3.984,1238,2.666,1239,2.666,1240,2.666,1241,2.666,1242,2.666,1243,2.666,1244,2.666,1245,2.666,1246,2.666,1247,2.666,1248,2.666,1249,3.938,1250,2.666,1251,2.666,1252,2.666,1253,2.666,1254,2.666,1255,3.938,1256,3.938,1257,3.938,1258,3.938,1259,3.938,1260,3.938,1261,5.171,1262,5.171,1263,5.171,1264,5.171,1265,5.171]],["title/components/MyAccountComponent.html",[0,0.292,98,0.87]],["body/components/MyAccountComponent.html",[0,0.49,1,0.766,2,0.136,3,0.136,4,0.971,5,0.971,6,0.971,7,0.114,9,1.027,10,1.429,12,0.722,13,1.873,14,1.974,15,2.893,16,1.302,18,1.302,19,3.699,20,0.182,21,0.481,22,1.2,25,0.564,27,1.557,28,0.564,31,0.806,33,0.527,34,0.024,35,0.417,36,0.409,37,0.527,39,0.591,40,1.271,43,0.469,44,0.257,48,0.114,49,0.31,58,3.808,61,0.863,62,1.382,63,1.302,64,0.908,65,1.557,66,0.971,67,1.382,68,0.722,69,0.863,70,0.971,71,0.766,72,0.971,73,0.766,74,1.651,75,1.228,76,0.971,77,0.766,78,0.971,79,0.766,80,1.382,81,0.766,82,0.863,83,0.971,84,0.766,85,0.971,86,0.813,87,0.863,88,1.382,89,0.766,90,0.766,91,0.813,92,0.971,93,0.766,94,0.971,95,0.766,96,0.527,97,0.971,98,1.382,99,0.813,100,1.157,101,0.766,102,0.915,103,0.971,104,0.766,105,0.915,106,0.971,107,0.722,108,0.971,109,0.722,110,0.915,111,0.971,112,0.014,113,0.014,125,1.146,146,1.228,149,1.195,150,1.125,153,1.347,160,1.095,233,2.868,268,1.896,330,3.808,338,2.3,370,2.3,413,2.555,420,3.272,464,5.093,477,1.508,602,2.3,661,3.152,708,1.761,753,5.15,797,2.6,825,2.6,1147,4.306,1150,2.6,1266,5.759,1267,2.6,1268,4.348,1269,6.054,1270,5.513,1271,5.513,1272,5.513,1273,5.513,1274,5.513,1275,5.513,1276,4.348,1277,3.056,1278,3.056,1279,3.056,1280,3.056,1281,3.056,1282,3.056,1283,3.056,1284,3.056,1285,3.056,1286,3.056,1287,5.061,1288,3.056,1289,3.056,1290,4.348,1291,3.056,1292,2.6,1293,3.056,1294,4.348,1295,3.056,1296,3.056,1297,3.056,1298,3.056,1299,3.056,1300,3.056,1301,2.6,1302,4.348,1303,4.348]],["title/modules/NgMaterialModule.html",[398,1.838,411,2.152]],["body/modules/NgMaterialModule.html",[2,0.213,3,0.213,7,0.178,34,0.023,43,0.61,44,0.402,48,0.218,49,0.486,112,0.019,113,0.019,398,2.537,401,2.971,411,3.632,431,4.981,435,4.074,741,2.362,1304,4.788,1305,4.788,1306,5.854,1307,4.074,1308,6.324,1309,6.324,1310,6.324,1311,6.324,1312,6.324,1313,6.324,1314,6.324,1315,6.324,1316,6.324,1317,6.324,1318,6.324,1319,6.324,1320,6.324,1321,6.324,1322,6.324,1323,6.324,1324,6.324,1325,6.324,1326,6.324,1327,6.324]],["title/interfaces/Order.html",[217,1.405,277,0.819]],["body/interfaces/Order.html",[0,0.378,2,0.143,3,0.143,7,0.119,9,0.757,10,1.269,11,2.218,13,0.853,14,0.905,16,0.96,18,0.96,20,0.191,21,0.497,22,1.144,23,1.989,24,1.298,26,1.581,27,0.905,28,0.416,30,1.269,34,0.024,36,0.401,39,0.602,40,0.882,43,0.615,44,0.269,45,1.477,46,1.832,47,1.832,48,0.119,49,0.325,57,1.989,68,0.757,69,1.466,112,0.014,113,0.014,115,2.752,125,1.272,126,3.494,127,3.824,128,4.237,129,2.412,130,3.824,131,2.412,132,0.804,134,3.909,135,3.909,136,3.909,138,4.237,153,1.196,160,1.86,168,2.412,188,1.698,193,1.556,214,2.412,215,1.989,216,2.412,217,2.49,218,2.727,219,2.727,220,2.393,221,2.727,222,2.727,223,2.727,224,1.989,225,1.698,233,2.242,234,2.218,235,1.94,237,2.727,239,2.727,244,2.412,248,2.727,250,0.853,251,2.412,253,3.679,254,2.727,262,3.053,265,2.177,266,1.832,267,2.177,268,1.989,269,1.698,270,2.177,271,2.177,272,1.989,273,1.989,274,1.832,275,1.698,276,1.989,277,1.062,278,1.382,279,2.412,280,2.412,281,2.412,282,3.384,283,3.384,284,2.412,285,2.412,286,2.412,287,2.727,288,3.909,289,2.727,290,2.412,291,2.727,292,3.909,293,2.727,294,2.412,295,2.727,296,2.727,297,2.727,298,2.727,299,3.384,300,3.909,301,3.384,302,3.384,303,4.237,304,3.384,305,2.727,306,2.727,307,2.727,308,2.727,309,2.727,310,2.727,311,2.412,312,2.727,313,2.727,314,2.727,315,2.727,316,2.727,317,3.384,318,3.384,319,3.384,320,2.727,321,1.22,322,2.727,323,3.384,324,2.727,325,2.727,326,2.727,327,2.727,328,3.223,329,3.909,330,2.412,331,2.727,332,2.727,333,2.727,334,2.727,335,2.727,336,2.727,337,3.053,338,3.384,339,2.727,340,2.727,341,3.826,342,2.412,343,2.727,344,2.727,345,2.727,346,2.412]],["title/injectables/OrderRequestsService.html",[114,0.485,234,1.711]],["body/injectables/OrderRequestsService.html",[2,0.178,3,0.178,7,0.148,20,0.238,21,0.577,22,1.002,24,2.354,25,0.677,28,0.677,30,1.74,31,0.74,33,0.899,34,0.024,35,0.395,36,0.393,37,0.899,39,0.529,40,1.024,43,0.608,44,0.335,48,0.148,49,0.405,112,0.017,113,0.017,114,0.813,132,1,149,0.942,150,0.887,153,1.062,173,2.476,177,3.003,178,2.281,180,1.839,181,1.722,193,1.741,217,1.616,234,2.573,278,1.64,323,3.003,351,3.926,413,2.544,416,3.541,708,1.616,716,1.968,762,3.75,807,3.395,808,4.945,818,3.395,871,3.237,918,4.438,965,4.438,1073,3.395,1328,5.442,1329,3.395,1330,6.164,1331,5.217,1332,3.991,1333,5.217,1334,5.217,1335,3.991,1336,5.217,1337,3.991,1338,3.991,1339,3.991,1340,3.395,1341,3.395,1342,3.991,1343,3.991,1344,3.991,1345,3.991,1346,3.991,1347,3.991,1348,3.991,1349,3.991,1350,3.991,1351,3.991,1352,5.217,1353,3.991,1354,5.217,1355,3.991,1356,3.991,1357,3.991,1358,3.991,1359,3.991,1360,3.991,1361,3.991,1362,3.991,1363,3.991,1364,3.991,1365,3.991,1366,3.991]],["title/interfaces/OtherUser.html",[277,0.819,1092,1.598]],["body/interfaces/OtherUser.html",[2,0.211,3,0.211,7,0.176,20,0.283,21,0.643,34,0.023,35,0.358,36,0.425,48,0.255,96,1.131,112,0.019,113,0.019,125,1.351,132,1.577,146,1.961,179,1.336,250,1.547,277,1.64,358,1.504,704,2.181,708,2.776,709,2.508,710,3.426,814,2.181,817,2.181,1085,2.508,1086,2.043,1087,3.323,1088,2.335,1089,2.706,1090,2.706,1091,2.706,1092,2.679]],["title/interfaces/Peer.html",[277,0.819,358,1.102]],["body/interfaces/Peer.html",[2,0.204,3,0.204,7,0.17,20,0.273,21,0.63,34,0.023,35,0.346,36,0.459,48,0.253,96,1.172,112,0.018,113,0.018,125,1.348,132,1.554,146,1.947,179,1.292,250,1.809,277,1.628,358,1.809,704,2.109,708,2.754,709,2.425,710,3.401,814,2.109,817,2.109,1085,2.425,1086,1.975,1087,3.255,1088,2.258,1089,3.707,1090,3.707,1091,3.707,1092,2.109]],["title/pipes/RoundPipe.html",[410,2.152,485,1.838]],["body/pipes/RoundPipe.html",[2,0.232,3,0.232,7,0.194,12,1.23,25,0.676,31,0.625,33,0.898,34,0.023,35,0.466,36,0.352,37,0.898,39,0.625,43,0.483,44,0.438,48,0.194,49,0.529,112,0.02,113,0.02,132,1.789,150,1.158,410,3.821,485,3.263,556,4.433,1367,4.433,1368,6.159,1369,6.159,1370,6.557,1371,5.21,1372,5.21,1373,5.21,1374,5.21]],["title/injectables/RouterWebsocketActivatedService.html",[114,0.485,415,2.152]],["body/injectables/RouterWebsocketActivatedService.html",[2,0.211,3,0.211,7,0.177,9,1.121,20,0.283,21,0.644,22,1.086,25,0.756,28,0.756,31,0.756,33,0.818,34,0.023,35,0.359,36,0.394,37,0.818,39,0.639,43,0.584,44,0.399,48,0.177,49,0.482,112,0.019,113,0.019,114,0.881,153,1.264,160,1.701,180,2.188,181,2.049,233,2.961,250,1.55,268,2.947,278,1.264,415,3.614,439,5.837,440,3.574,480,3.481,602,3.574,1153,4.04,1375,5.589,1376,4.04,1377,7.18,1378,4.749,1379,4.749,1380,4.749,1381,4.749,1382,4.749]],["title/interfaces/StoredMessage.html",[277,0.819,1088,1.711]],["body/interfaces/StoredMessage.html",[2,0.211,3,0.211,7,0.176,20,0.283,21,0.643,34,0.023,35,0.358,36,0.425,48,0.255,96,1.197,112,0.019,113,0.019,125,1.348,132,1.689,146,1.852,179,1.336,250,1.547,277,1.64,358,1.504,704,2.181,708,2.548,709,2.508,710,3.426,814,2.181,817,2.181,1085,2.508,1086,2.043,1087,3.85,1088,2.868,1089,2.706,1090,2.706,1091,2.706,1092,2.181]],["title/interfaces/Token.html",[179,0.979,277,0.819]],["body/interfaces/Token.html",[2,0.208,3,0.208,7,0.174,20,0.279,21,0.639,34,0.023,35,0.495,36,0.442,48,0.254,96,1.126,112,0.018,113,0.018,125,1.35,132,1.683,146,1.956,179,1.63,250,1.536,277,1.636,358,1.487,704,2.156,708,2.535,709,2.48,710,3.224,814,3.012,817,3.012,1085,2.48,1086,2.02,1087,3.3,1088,2.309,1089,2.675,1090,2.675,1091,2.675,1092,2.156]],["title/injectables/TokenService.html",[114,0.485,416,1.838]],["body/injectables/TokenService.html",[2,0.142,3,0.142,7,0.118,20,0.19,21,0.495,22,1.127,25,0.581,28,0.581,31,0.795,33,1.02,34,0.024,35,0.487,36,0.435,37,1.02,39,0.726,43,0.548,44,0.268,48,0.166,49,0.323,112,0.014,113,0.014,114,0.724,125,1.244,132,1.122,139,2.559,146,1.816,149,0.752,150,0.707,153,1.377,160,1.603,178,1.82,179,2.007,180,1.467,181,1.374,193,1.341,250,1.377,278,1.191,321,1.704,413,2.335,416,2.371,645,2.742,716,1.571,761,3.808,762,3.602,799,2.396,804,5.838,1046,2.396,1064,3.368,1340,2.709,1341,2.709,1383,2.396,1384,6.135,1385,5.615,1386,4.742,1387,5.615,1388,4.476,1389,3.368,1390,5.615,1391,4.476,1392,4.476,1393,3.184,1394,4.476,1395,3.184,1396,4.476,1397,3.184,1398,4.476,1399,3.184,1400,3.184,1401,4.476,1402,3.184,1403,3.184,1404,3.184,1405,2.709,1406,5.615,1407,5.916,1408,5.176,1409,4.476,1410,6.135,1411,3.184,1412,4.476,1413,2.709,1414,3.184,1415,3.184,1416,3.184,1417,3.184]],["title/injectables/UserOnlineService.html",[114,0.485,417,1.983]],["body/injectables/UserOnlineService.html",[2,0.19,3,0.19,7,0.159,20,0.255,21,0.603,22,1.152,25,0.708,28,0.779,31,0.802,33,1.035,34,0.024,35,0.455,36,0.442,37,1.035,39,0.663,40,1.07,43,0.505,44,0.359,48,0.159,49,0.434,112,0.017,113,0.017,114,0.84,125,1.23,146,1.539,149,1.287,150,1.211,180,1.969,181,1.844,250,1.683,417,3.117,632,3.383,708,2.208,710,2.69,716,2.108,1086,2.82,1092,2.915,1148,3.635,1418,5.778,1419,3.635,1420,6.325,1421,5.452,1422,5.452,1423,5.452,1424,5.452,1425,5.452,1426,4.273,1427,5.452,1428,4.273,1429,5.452,1430,4.273,1431,5.381,1432,4.273,1433,4.273,1434,4.273,1435,4.639,1436,3.635,1437,4.273,1438,4.273,1439,4.273]],["title/components/VerifyUserComponent.html",[0,0.292,101,0.87]],["body/components/VerifyUserComponent.html",[0,0.521,1,0.91,2,0.162,3,0.162,4,1.154,5,1.154,6,1.154,7,0.135,9,1.157,10,1.566,12,0.857,13,1.906,14,2.012,15,2.801,16,1.467,18,1.467,20,0.217,21,0.542,22,1.101,25,0.636,27,1.676,28,0.636,31,0.744,33,0.626,34,0.023,35,0.449,36,0.331,37,0.626,39,0.497,40,1.088,43,0.454,44,0.305,48,0.135,49,0.368,61,1.025,62,1.557,63,1.467,64,1.024,65,1.676,66,1.154,67,1.557,68,0.857,69,1.025,70,1.154,71,0.91,72,1.154,73,0.91,74,1.778,75,1.383,76,1.154,77,0.91,78,1.154,79,0.91,80,1.557,81,0.91,82,1.566,83,1.154,84,0.91,85,1.154,86,0.966,87,1.025,88,1.557,89,0.91,90,0.91,91,0.966,92,1.154,93,0.91,94,1.154,95,0.91,96,0.626,97,1.154,98,0.91,99,0.966,100,0.966,101,1.488,102,2.015,103,1.154,104,0.91,105,1.087,106,1.154,107,0.857,108,1.154,109,0.857,110,1.087,111,1.154,112,0.016,113,0.016,125,0.902,149,1.157,150,1.089,153,1.304,160,1.3,278,0.966,413,2.431,477,1.791,501,4.806,661,2.075,902,3.089,1046,2.732,1086,2.114,1190,4.168,1235,3.089,1292,3.089,1301,3.089,1440,5.434,1441,3.089,1442,4.899,1443,4.899,1444,6.387,1445,5.937,1446,5.937,1447,4.899,1448,3.631,1449,3.631,1450,3.631,1451,3.631,1452,3.631,1453,3.631,1454,3.631,1455,3.631,1456,3.631,1457,3.631,1458,4.899]],["title/components/WhosOnlineComponent.html",[0,0.292,104,0.87]],["body/components/WhosOnlineComponent.html",[0,0.493,1,0.78,2,0.139,3,0.139,4,0.989,5,0.989,6,0.989,7,0.116,9,1.04,10,1.443,12,0.735,13,1.877,14,1.978,16,1.319,18,1.319,20,0.186,21,0.487,22,1.186,25,0.572,27,1.569,28,0.572,31,0.801,33,0.881,34,0.024,35,0.461,36,0.412,37,0.881,39,0.595,40,1.195,43,0.543,44,0.262,48,0.116,49,0.316,61,0.879,62,1.4,63,1.319,64,0.92,65,1.569,66,0.989,67,1.4,68,0.735,69,0.879,70,0.989,71,0.78,72,0.989,73,0.78,74,1.665,75,1.243,76,0.989,77,0.78,78,0.989,79,0.78,80,1.4,81,0.78,82,0.879,83,0.989,84,0.78,85,0.989,86,0.828,87,0.879,88,1.4,89,0.78,90,0.78,91,0.828,92,0.989,93,0.78,94,0.989,95,0.78,96,1.011,97,0.989,98,0.78,99,0.828,100,0.828,101,0.78,102,0.932,103,0.989,104,1.393,105,1.875,106,1.864,107,0.735,108,0.989,109,0.735,110,0.932,111,0.989,112,0.014,113,0.014,132,1.393,146,1.243,149,1.04,150,0.979,160,1.115,166,2.342,278,0.828,321,1.676,358,0.989,412,3.227,413,2.563,414,2.945,467,5.067,474,2.342,475,1.931,476,2.342,477,1.535,478,2.113,571,1.931,686,2.991,741,1.535,1064,2.342,1086,1.343,1097,3.847,1111,4.99,1173,2.648,1174,2.648,1237,2.648,1413,2.648,1435,3.747,1436,3.747,1459,5.729,1460,2.648,1461,4.404,1462,4.404,1463,5.558,1464,5.558,1465,5.558,1466,5.558,1467,5.558,1468,3.112,1469,3.112,1470,4.404,1471,3.112,1472,3.112,1473,4.404,1474,3.112,1475,3.112,1476,3.112,1477,3.112,1478,3.112,1479,3.112,1480,3.112,1481,4.404,1482,3.112,1483,3.112,1484,3.112,1485,3.112,1486,3.112,1487,5.112,1488,3.112,1489,3.112,1490,3.112,1491,3.112,1492,3.112,1493,4.404,1494,4.404]],["title/interfaces/Window.html",[277,0.819,630,2.356]],["body/interfaces/Window.html",[2,0.145,3,0.145,7,0.122,15,3,20,0.195,21,0.504,22,1.094,28,0.424,30,0.922,31,0.392,34,0.024,36,0.221,39,0.689,40,1.114,43,0.422,44,0.275,48,0.122,49,0.332,56,3.256,59,2.827,65,0.922,91,0.869,100,0.869,112,0.017,113,0.015,114,0.734,125,1.045,139,3.246,153,1.511,183,3.429,186,2.458,188,2.78,193,1.701,233,2.265,250,0.869,277,1.076,278,1.212,390,2.458,401,2.827,403,2.827,425,1.867,480,1.731,511,3.485,571,2.027,585,2.458,588,2.218,589,2.779,590,2.779,591,2.779,592,2.779,593,2.779,594,2.779,595,2.779,596,2.779,597,2.779,598,2.779,600,2.779,601,2.779,607,2.779,618,4.274,623,2.779,626,2.779,627,2.218,628,2.458,629,2.779,630,3.094,631,4.464,632,3.523,633,4.831,634,2.779,635,2.779,636,3.877,637,3.877,638,4.464,639,3.429,640,2.779,641,2.779,642,2.779,643,2.779,644,3.877,645,1.731,646,2.779,647,2.779,648,3.877,649,2.779,650,2.779,651,2.779,652,3.877,653,2.779,654,2.779,655,2.779,656,4.464,657,2.779,658,2.779,659,3.877,660,2.779,661,1.867,662,2.779,663,2.779,664,2.779,665,2.779,666,2.779,667,3.877,668,3.877,669,4.464,670,2.779,671,3.877,672,3.877,673,2.779,674,2.779,675,2.779,676,2.779,677,2.779,678,3.877,679,3.429,680,2.779,681,2.779,682,2.458,683,2.779,684,3.877,685,2.779,686,2.218,687,2.458,688,2.779,689,2.779,690,3.856,691,5.262,692,2.779,693,2.458,694,2.779,695,2.779,696,2.779,697,2.779,698,2.779,699,3.877,700,2.779,701,2.779]],["title/coverage.html",[1495,4.041]],["body/coverage.html",[0,0.583,1,0.765,7,0.114,8,2.598,30,0.862,34,0.024,36,0.206,64,0.908,68,0.721,71,0.765,73,0.765,75,1.556,77,0.765,79,0.765,81,0.765,82,1.227,84,0.765,86,0.812,89,0.765,90,0.765,93,0.765,95,0.765,96,0.526,98,0.765,99,0.812,101,0.765,104,0.765,107,0.721,109,0.721,112,0.014,113,0.014,114,0.946,115,1.618,116,2.598,178,2.484,179,0.862,188,1.618,214,3.269,215,2.696,216,3.269,217,1.236,220,1.407,233,1.318,234,1.506,235,1.318,274,1.745,275,1.618,277,1.503,321,2.802,358,0.97,392,2.598,409,1.894,410,1.894,412,1.618,413,1.162,414,1.618,415,1.894,416,1.618,417,1.745,421,4.147,447,2.297,455,2.297,457,2.073,459,2.073,462,2.073,464,2.297,466,2.297,467,2.297,475,1.894,480,1.618,485,2.302,488,2.95,489,2.073,492,2.297,493,2.297,495,3.269,499,2.297,501,2.297,514,2.297,529,2.297,533,2.297,544,2.598,554,2.598,564,2.598,565,2.598,584,2.297,588,3.742,618,1.894,627,3.435,630,2.073,702,2.598,704,1.407,720,3.435,721,2.598,748,3.269,749,2.598,759,2.297,762,1.745,829,3.269,891,2.598,914,2.598,978,2.598,987,2.598,998,2.598,1041,2.598,1042,2.598,1078,2.598,1079,2.598,1085,3.206,1088,1.506,1092,1.407,1093,2.598,1210,2.598,1266,2.598,1267,2.598,1328,2.598,1329,2.598,1367,2.598,1375,2.598,1376,2.598,1383,3.269,1386,2.297,1389,2.297,1418,2.598,1419,2.598,1440,2.598,1441,2.598,1459,2.598,1460,2.598,1495,2.598,1496,3.053,1497,3.053,1498,3.053,1499,5.823,1500,3.053,1501,6.226,1502,5.327,1503,7.114,1504,4.345,1505,3.053,1506,5.058,1507,3.053,1508,4.345,1509,3.053,1510,4.345,1511,3.053,1512,4.345,1513,4.345,1514,3.053,1515,3.053,1516,4.345,1517,3.053,1518,5.058,1519,3.053,1520,3.053,1521,2.598,1522,2.598,1523,5.509,1524,2.598,1525,2.598,1526,2.598,1527,2.598,1528,4.303,1529,3.053,1530,2.598,1531,3.053,1532,3.053,1533,4.345,1534,3.053,1535,2.598,1536,2.598,1537,3.697,1538,2.598,1539,3.053,1540,3.053]],["title/dependencies.html",[400,2.836,1541,2.889]],["body/dependencies.html",[34,0.024,44,0.418,112,0.019,113,0.019,400,3.374,424,4.505,425,3.423,429,3.739,430,3.739,433,4.227,440,3.739,449,5.094,450,4.227,470,4.227,618,3.083,741,2.451,820,4.227,1138,3.739,1307,4.227,1542,4.969,1543,7.123,1544,4.969,1545,6.671,1546,4.969,1547,5.987,1548,4.969,1549,4.969,1550,4.969,1551,4.969,1552,4.969,1553,4.969,1554,4.969,1555,4.969,1556,4.969,1557,4.969,1558,4.969,1559,4.969,1560,5.987,1561,4.969,1562,4.969,1563,4.969,1564,4.969]],["title/index.html",[20,0.172,1155,2.458,1565,2.889]],["body/index.html",[34,0.021,87,1.582,96,0.966,112,0.021,113,0.021,217,2.269,1184,4.216,1196,4.216,1566,5.603,1567,5.603,1568,5.603,1569,5.603,1570,5.603,1571,5.603]],["title/modules.html",[398,2.517]],["body/modules.html",[34,0.021,112,0.021,113,0.021,398,2.974,399,3.812,411,3.483,425,3.209,639,4.224,1572,5.614,1573,5.614,1574,6.432,1575,5.614]],["title/overview.html",[1576,4.041]],["body/overview.html",[0,0.331,1,1.448,30,1.631,34,0.023,48,0.147,61,1.113,64,0.823,68,1.364,71,1.671,73,1.448,77,1.448,79,1.448,81,1.448,84,1.448,86,1.537,89,1.448,90,1.448,93,1.448,95,1.448,98,1.448,99,1.537,101,1.448,104,1.448,107,1.364,109,1.364,112,0.017,113,0.017,114,0.551,220,2.662,234,2.85,235,2.493,277,0.931,398,2.742,399,5.045,400,2.677,401,2.446,402,3.354,403,2.446,404,3.354,405,3.354,406,3.354,407,3.354,408,3.354,409,3.585,410,3.585,411,3.585,412,3.061,413,2.199,414,3.061,415,3.585,416,3.061,417,3.303,418,4.403,419,3.354,420,2.966,485,2.089,584,4.347,1576,3.354,1577,3.942,1578,3.942,1579,3.942]],["title/miscellaneous/variables.html",[1502,3.143,1580,2.458]],["body/miscellaneous/variables.html",[12,0.639,20,0.161,25,0.351,34,0.024,35,0.484,36,0.448,39,0.563,112,0.013,113,0.013,125,0.959,146,1.87,149,1.632,150,1.536,153,0.72,160,1.691,178,3.319,179,1.567,193,1.798,213,1.547,274,2.7,275,2.502,311,2.996,321,1.982,403,3.232,421,2.036,445,4.939,446,2.302,447,4.177,495,4.368,514,3.554,515,2.302,516,4.018,517,2.302,518,2.302,519,2.302,520,2.302,521,2.302,522,3.387,523,2.302,524,2.302,525,2.302,526,2.302,527,2.302,528,2.302,529,3.919,530,2.302,531,2.302,532,2.302,533,3.919,534,2.302,535,2.302,536,2.302,537,2.302,538,2.302,539,2.302,540,2.302,571,3.602,588,1.837,618,2.93,627,4.268,628,2.036,632,2.47,693,2.996,759,3.554,814,2.896,817,2.896,823,2.996,871,1.679,1033,2.302,1138,2.996,1184,2.996,1196,3.554,1383,2.036,1386,3.554,1389,3.554,1405,4.431,1431,4.431,1502,2.036,1521,2.302,1522,3.387,1523,2.302,1524,4.018,1525,4.018,1526,4.018,1527,4.018,1528,2.302,1530,4.018,1535,2.302,1536,2.302,1537,2.302,1538,4.018,1580,2.302,1581,6.285,1582,3.981,1583,5.209,1584,2.706,1585,2.706,1586,2.706,1587,3.981,1588,3.981,1589,2.706,1590,3.981,1591,2.706,1592,2.706,1593,2.706,1594,2.706,1595,5.209,1596,2.706,1597,3.981,1598,2.706,1599,2.706,1600,2.706,1601,2.706,1602,2.706,1603,2.706,1604,2.706,1605,2.706,1606,2.706,1607,2.706,1608,2.706,1609,3.981,1610,2.706,1611,2.706,1612,2.706,1613,2.706,1614,2.706,1615,3.981,1616,3.981,1617,3.981,1618,3.981,1619,5.805,1620,3.981,1621,3.981,1622,3.981,1623,3.981,1624,3.981,1625,3.981,1626,5.805,1627,5.209,1628,2.706,1629,2.706,1630,2.706,1631,5.209,1632,2.706,1633,2.706,1634,2.706,1635,2.706,1636,2.706,1637,2.706,1638,2.706,1639,2.706,1640,3.981,1641,3.981,1642,3.981,1643,3.981,1644,3.981,1645,3.981,1646,3.981,1647,3.981,1648,3.981,1649,3.981,1650,3.981,1651,3.981,1652,3.981,1653,2.706]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AutofocusDirective.html":{},"pipes/CallbackPipe.html":{},"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectWeb3Service.html":{},"injectables/ConnectionService.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"injectables/Erc20Service.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"components/InitialPageComponent.html":{},"interfaces/LoggedInUser.html":{},"components/MainframeComponent.html":{},"interfaces/Message.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"modules/NgMaterialModule.html":{},"interfaces/Order.html":{},"injectables/OrderRequestsService.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"pipes/RoundPipe.html":{},"injectables/RouterWebsocketActivatedService.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":321,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"injectables/ColumnSpaceObserverService.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"interfaces/Order.html":{},"injectables/TokenService.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.8.26",{"_index":1564,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1503,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1516,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1534,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1513,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1514,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1504,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1515,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1500,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1505,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":1510,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1520,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":1529,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":1532,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1506,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1501,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1533,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1499,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1518,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1512,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1511,"title":{},"body":{"coverage.html":{}}}],["0x",{"_index":311,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{},"miscellaneous/variables.html":{}}}],["0x0000000000000000000000000000000000000000",{"_index":1405,"title":{},"body":{"injectables/TokenService.html":{},"miscellaneous/variables.html":{}}}],["0x08a1d43a218adaf6273f323a1f5a43d930f3d69",{"_index":171,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["0x1d4d691d",{"_index":199,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["0x2c40c44343214a0c81ea8eee6f5ae75138062a0a",{"_index":182,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["0x8fd3121013a07c57f0d69646e86e7a4880b467b7",{"_index":185,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["0xbaed6c1f8cd4a443cc372fd15d770e3764b4b2e7'.tolowercas",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0xcc1cbd4f67cceb7c001bd4adf98451237a193ff8",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0xf2a8c910676db689bfd8a3735126b608bdc0d454'.tolowercas",{"_index":1622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":571,"title":{},"body":{"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectWeb3Service.html":{},"components/WhosOnlineComponent.html":{},"interfaces/Window.html":{},"miscellaneous/variables.html":{}}}],["1)).join('0",{"_index":286,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"injectables/Erc20Service.html":{},"interfaces/Order.html":{}}}],["1.0.0",{"_index":1561,"title":{},"body":{"dependencies.html":{}}}],["1.1",{"_index":977,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["1/37",{"_index":1509,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":871,"title":{},"body":{"components/DialogGetOrderComponent.html":{},"injectables/Erc20Service.html":{},"components/GetOrderComponent.html":{},"injectables/OrderRequestsService.html":{},"miscellaneous/variables.html":{}}}],["10**digit",{"_index":1374,"title":{},"body":{"pipes/RoundPipe.html":{}}}],["100",{"_index":290,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/MessageSystemComponent.html":{},"interfaces/Order.html":{}}}],["1000",{"_index":294,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"injectables/GetOrderService.html":{},"interfaces/Order.html":{}}}],["10e9",{"_index":195,"title":{},"body":{"injectables/AirswapdexService.html":{},"injectables/Erc20Service.html":{}}}],["13",{"_index":1578,"title":{},"body":{"overview.html":{}}}],["130",{"_index":313,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["132",{"_index":316,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["17",{"_index":1577,"title":{},"body":{"overview.html":{}}}],["18",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":584,"title":{},"body":{"injectables/ColumnSpaceObserverService.html":{},"coverage.html":{},"overview.html":{}}}],["2.0.8",{"_index":1559,"title":{},"body":{"dependencies.html":{}}}],["2.5.7",{"_index":1554,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":282,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"injectables/Erc20Service.html":{},"interfaces/Order.html":{}}}],["2000",{"_index":1166,"title":{},"body":{"components/MainframeComponent.html":{}}}],["200000",{"_index":197,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["3",{"_index":585,"title":{},"body":{"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["3.0.0",{"_index":1556,"title":{},"body":{"dependencies.html":{}}}],["3.0.1",{"_index":1557,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":52,"title":{},"body":{"components/AccountComponent.html":{}}}],["4",{"_index":693,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{},"miscellaneous/variables.html":{}}}],["400px",{"_index":1242,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["42",{"_index":694,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["5",{"_index":254,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["5.0.0",{"_index":1547,"title":{},"body":{"dependencies.html":{}}}],["5.0.4",{"_index":1555,"title":{},"body":{"dependencies.html":{}}}],["5000",{"_index":1235,"title":{},"body":{"components/MessageSystemComponent.html":{},"components/VerifyUserComponent.html":{}}}],["6",{"_index":1481,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["6.0.3",{"_index":1543,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1545,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1069,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["60).tostr",{"_index":296,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["60000",{"_index":1413,"title":{},"body":{"injectables/TokenService.html":{},"components/WhosOnlineComponent.html":{}}}],["64",{"_index":201,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["66",{"_index":310,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["732282521654",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":1579,"title":{},"body":{"overview.html":{}}}],["_decimalunit",{"_index":954,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["_extradata",{"_index":947,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["_from",{"_index":941,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["_initialamount",{"_index":952,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["_owner",{"_index":944,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["_spender",{"_index":937,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["_to",{"_index":942,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["_tokennam",{"_index":953,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["_tokensymbol",{"_index":955,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["_valu",{"_index":938,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["_web3",{"_index":589,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["a.address.tolocalelowercas",{"_index":1596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a.name.tolocalelowercas",{"_index":1599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abi",{"_index":915,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["accept",{"_index":375,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["acceptaliaschang",{"_index":1272,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["access",{"_index":1208,"title":{},"body":{"components/MainframeComponent.html":{}}}],["accessor",{"_index":173,"title":{},"body":{"injectables/AirswapdexService.html":{},"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectWeb3Service.html":{},"injectables/ConnectionService.html":{},"injectables/OrderRequestsService.html":{}}}],["account",{"_index":15,"title":{},"body":{"components/AccountComponent.html":{},"injectables/ConnectWeb3Service.html":{},"components/MainframeComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"interfaces/Window.html":{}}}],["account'},{'nam",{"_index":67,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["account.compon",{"_index":465,"title":{},"body":{"modules/AppModule.html":{}}}],["account.component.css",{"_index":17,"title":{},"body":{"components/AccountComponent.html":{}}}],["account.component.html",{"_index":19,"title":{},"body":{"components/AccountComponent.html":{},"components/MyAccountComponent.html":{}}}],["account.component.scss",{"_index":1268,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["account.component.t",{"_index":1267,"title":{},"body":{"components/MyAccountComponent.html":{},"coverage.html":{}}}],["account.component.ts:14",{"_index":1286,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["account.component.ts:15",{"_index":1285,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["account.component.ts:16",{"_index":1282,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["account.component.ts:18",{"_index":1276,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["account.component.ts:21",{"_index":1283,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["account.component.ts:22",{"_index":1284,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["account.component.ts:25",{"_index":1281,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["account.component.ts:28",{"_index":1278,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["account.component.ts:38",{"_index":1277,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["account.component.ts:45",{"_index":1280,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["account.component.ts:49",{"_index":1279,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["account.tolowercas",{"_index":657,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["account/account.compon",{"_index":451,"title":{},"body":{"modules/AppModule.html":{},"components/MainframeComponent.html":{}}}],["account/mi",{"_index":464,"title":{},"body":{"modules/AppModule.html":{},"components/MyAccountComponent.html":{},"coverage.html":{}}}],["accountcompon",{"_index":1,"title":{"components/AccountComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["accountconnect",{"_index":590,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["accountlc",{"_index":656,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["activated.servic",{"_index":481,"title":{},"body":{"modules/AppModule.html":{}}}],["activated.service.t",{"_index":1376,"title":{},"body":{"injectables/RouterWebsocketActivatedService.html":{},"coverage.html":{}}}],["activated.service.ts:13",{"_index":1380,"title":{},"body":{"injectables/RouterWebsocketActivatedService.html":{}}}],["activated.service.ts:16",{"_index":1379,"title":{},"body":{"injectables/RouterWebsocketActivatedService.html":{}}}],["activated.service.ts:9",{"_index":1378,"title":{},"body":{"injectables/RouterWebsocketActivatedService.html":{}}}],["actual_compon",{"_index":111,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["ad",{"_index":827,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["add",{"_index":75,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{}}}],["add&nbsp",{"_index":746,"title":{},"body":{"components/DialogAddPeerComponent.html":{}}}],["addandupdatetokenlist",{"_index":1524,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["addandupdatetokenlists(token",{"_index":1601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addedtoken",{"_index":791,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["addord",{"_index":1331,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["addorder(ord",{"_index":1334,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["addpeerasfriend",{"_index":1214,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["address",{"_index":146,"title":{},"body":{"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"injectables/ConnectionService.html":{},"components/DialogAddTokenComponent.html":{},"injectables/Erc20Service.html":{},"interfaces/LoggedInUser.html":{},"interfaces/Message.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{},"components/WhosOnlineComponent.html":{},"miscellaneous/variables.html":{}}}],["address.tolocalelowercas",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addresslow",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addtoken",{"_index":759,"title":{},"body":{"components/DialogAddTokenComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["addtoken(newtoken",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addtokenbyaddressfromethplor",{"_index":1525,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["addus",{"_index":1421,"title":{},"body":{"injectables/UserOnlineService.html":{}}}],["adduser(us",{"_index":1425,"title":{},"body":{"injectables/UserOnlineService.html":{}}}],["afauth",{"_index":1115,"title":{},"body":{"components/MainframeComponent.html":{}}}],["afterviewinit",{"_index":545,"title":{},"body":{"directives/AutofocusDirective.html":{}}}],["again",{"_index":1301,"title":{},"body":{"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{}}}],["agre",{"_index":1205,"title":{},"body":{"components/MainframeComponent.html":{}}}],["airswap",{"_index":1196,"title":{},"body":{"components/MainframeComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["airswapchat",{"_index":1184,"title":{},"body":{"components/MainframeComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["airswapchat.appspot.com",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["airswapchat.firebaseapp.com",{"_index":1645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["airswapdex",{"_index":184,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["airswapdexabi",{"_index":117,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["airswapdexaddress",{"_index":118,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["airswapdexcontract",{"_index":174,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["airswapdexservic",{"_index":115,"title":{"injectables/AirswapdexService.html":{}},"body":{"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{},"interfaces/Order.html":{},"coverage.html":{}}}],["aizasybv69cbiib",{"_index":1642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alia",{"_index":708,"title":{},"body":{"injectables/ConnectionService.html":{},"injectables/GetOrderService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/Message.html":{},"components/MyAccountComponent.html":{},"injectables/OrderRequestsService.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"injectables/UserOnlineService.html":{}}}],["allow",{"_index":950,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["allowance(this.web3service.connectedaccount",{"_index":966,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["alow",{"_index":1595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alreadi",{"_index":679,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"components/DialogAddTokenComponent.html":{},"interfaces/Window.html":{}}}],["angular",{"_index":450,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/anim",{"_index":1542,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1544,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1307,"title":{},"body":{"modules/NgMaterialModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":1546,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":44,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AutofocusDirective.html":{},"pipes/CallbackPipe.html":{},"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectWeb3Service.html":{},"injectables/ConnectionService.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"injectables/Erc20Service.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"modules/NgMaterialModule.html":{},"interfaces/Order.html":{},"injectables/OrderRequestsService.html":{},"pipes/RoundPipe.html":{},"injectables/RouterWebsocketActivatedService.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"interfaces/Window.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"injectables/ColumnSpaceObserverService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":433,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1549,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":741,"title":{},"body":{"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/MessageSystemComponent.html":{},"modules/NgMaterialModule.html":{},"components/WhosOnlineComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"components/MainframeComponent.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":440,"title":{},"body":{"modules/AppModule.html":{},"injectables/RouterWebsocketActivatedService.html":{},"dependencies.html":{}}}],["angularfire2",{"_index":470,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angularfire2/auth",{"_index":442,"title":{},"body":{"modules/AppModule.html":{},"components/MainframeComponent.html":{}}}],["angularfire2/databas",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"components/MessageSystemComponent.html":{}}}],["angularfireauth",{"_index":473,"title":{},"body":{"modules/AppModule.html":{},"components/MainframeComponent.html":{}}}],["angularfireauthmodul",{"_index":441,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiredatabas",{"_index":471,"title":{},"body":{"modules/AppModule.html":{},"components/MessageSystemComponent.html":{}}}],["angularfiremodul",{"_index":469,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebas",{"_index":541,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfireobject",{"_index":1232,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["anonym",{"_index":167,"title":{},"body":{"injectables/AirswapdexService.html":{},"injectables/Erc20Service.html":{}}}],["answer",{"_index":69,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/Order.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["answerord",{"_index":226,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["answerorder(ord",{"_index":237,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["answerorderscompon",{"_index":68,"title":{"components/AnswerOrdersComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/Order.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["apikey",{"_index":1641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apikey=freekey",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/Order.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["app.compon",{"_index":453,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":393,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":394,"title":{},"body":{"components/AppComponent.html":{}}}],["appautofocu",{"_index":546,"title":{},"body":{"directives/AutofocusDirective.html":{}}}],["appautofocus]'},{'nam",{"_index":108,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["appcompon",{"_index":71,"title":{"components/AppComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":399,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":503,"title":{},"body":{"modules/AppModule.html":{}}}],["approv",{"_index":916,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["approve(contract",{"_index":921,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["approve(spend",{"_index":972,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["approveandcal",{"_index":949,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["approvedamount",{"_index":917,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["approvedamount(contract",{"_index":924,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["approvemethod",{"_index":968,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["approvemethod.estimategas({from",{"_index":973,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["approvemethod.send",{"_index":975,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["array(",{"_index":285,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"injectables/Erc20Service.html":{},"interfaces/Order.html":{}}}],["ask",{"_index":890,"title":{},"body":{"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{}}}],["ast",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth",{"_index":1142,"title":{},"body":{"components/MainframeComponent.html":{}}}],["auth/requir",{"_index":1295,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["auth_typ",{"_index":527,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["authdomain",{"_index":1644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authmethod",{"_index":443,"title":{},"body":{"modules/AppModule.html":{}}}],["authmethods.popup",{"_index":538,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["authprovid",{"_index":444,"title":{},"body":{"modules/AppModule.html":{}}}],["authprovider.facebook",{"_index":515,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["authprovider.github",{"_index":536,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["authprovider.googl",{"_index":530,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["authprovider.password",{"_index":534,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["authprovider.twitt",{"_index":537,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["authproviderwithcustomconfig",{"_index":445,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["authus",{"_index":1104,"title":{},"body":{"components/MainframeComponent.html":{}}}],["autofocusdirect",{"_index":107,"title":{"directives/AutofocusDirective.html":{}},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AutofocusDirective.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["autorenew",{"_index":1494,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["avail",{"_index":639,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{},"modules.html":{}}}],["b",{"_index":1594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b.address.tolocalelowercas",{"_index":1598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b.name.tolocalelowercas",{"_index":1600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["back",{"_index":1299,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["balanc",{"_index":918,"title":{},"body":{"injectables/Erc20Service.html":{},"injectables/OrderRequestsService.html":{}}}],["balance(tokenaddress",{"_index":926,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["balanceof",{"_index":945,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["balanceof(address",{"_index":963,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["bar_chart",{"_index":1193,"title":{},"body":{"components/MainframeComponent.html":{}}}],["base",{"_index":1195,"title":{},"body":{"components/MainframeComponent.html":{}}}],["beta.14",{"_index":1548,"title":{},"body":{"dependencies.html":{}}}],["beta.34",{"_index":1562,"title":{},"body":{"dependencies.html":{}}}],["blow",{"_index":1597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["book",{"_index":1201,"title":{},"body":{"components/MainframeComponent.html":{}}}],["bool",{"_index":162,"title":{},"body":{"injectables/AirswapdexService.html":{},"injectables/Erc20Service.html":{}}}],["boolean",{"_index":250,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"pipes/CallbackPipe.html":{},"injectables/ConnectWeb3Service.html":{},"injectables/ConnectionService.html":{},"components/DialogGetOrderComponent.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"interfaces/LoggedInUser.html":{},"interfaces/Message.html":{},"interfaces/Order.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"injectables/RouterWebsocketActivatedService.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{},"interfaces/Window.html":{}}}],["bootstrap",{"_index":402,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["box",{"_index":1234,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["brows",{"_index":1574,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConnectWeb3Service.html":{},"components/MainframeComponent.html":{},"interfaces/Window.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":427,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":426,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":423,"title":{},"body":{"modules/AppModule.html":{}}}],["built",{"_index":1569,"title":{},"body":{"index.html":{}}}],["button",{"_index":1157,"title":{},"body":{"components/MainframeComponent.html":{}}}],["buttonverb",{"_index":1269,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["buy",{"_index":381,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{}}}],["buy/sel",{"_index":1203,"title":{},"body":{"components/MainframeComponent.html":{}}}],["byte",{"_index":948,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["bytes32",{"_index":157,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["call",{"_index":964,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["callback",{"_index":555,"title":{},"body":{"pipes/CallbackPipe.html":{}}}],["callback(item",{"_index":563,"title":{},"body":{"pipes/CallbackPipe.html":{}}}],["callbackpip",{"_index":409,"title":{"pipes/CallbackPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/CallbackPipe.html":{},"coverage.html":{},"overview.html":{}}}],["callgettokennamebyaddress(intent.takertoken",{"_index":382,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{}}}],["canactiv",{"_index":439,"title":{},"body":{"modules/AppModule.html":{},"injectables/RouterWebsocketActivatedService.html":{}}}],["cancel",{"_index":164,"title":{},"body":{"injectables/AirswapdexService.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogSendOfflineComponent.html":{}}}],["catch",{"_index":811,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["catch((error",{"_index":665,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["catch(error",{"_index":338,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/Order.html":{}}}],["chang",{"_index":1147,"title":{},"body":{"components/MainframeComponent.html":{},"components/MyAccountComponent.html":{}}}],["change.mqalia",{"_index":579,"title":{},"body":{"injectables/ColumnSpaceObserverService.html":{}}}],["changealia",{"_index":1273,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["chat",{"_index":1188,"title":{},"body":{"components/MainframeComponent.html":{}}}],["check",{"_index":56,"title":{},"body":{"components/AccountComponent.html":{},"injectables/ConnectWeb3Service.html":{},"components/DialogAddTokenComponent.html":{},"components/MainframeComponent.html":{},"interfaces/Window.html":{}}}],["checkconnect",{"_index":596,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["checkedtoken",{"_index":752,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["checktoken",{"_index":760,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["class",{"_index":49,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"directives/AutofocusDirective.html":{},"pipes/CallbackPipe.html":{},"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectWeb3Service.html":{},"injectables/ConnectionService.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"injectables/Erc20Service.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"modules/NgMaterialModule.html":{},"interfaces/Order.html":{},"injectables/OrderRequestsService.html":{},"pipes/RoundPipe.html":{},"injectables/RouterWebsocketActivatedService.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"interfaces/Window.html":{}}}],["click",{"_index":1158,"title":{},"body":{"components/MainframeComponent.html":{}}}],["close",{"_index":378,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["cluster_appmodul",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":407,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":406,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":169,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["columnnum",{"_index":572,"title":{},"body":{"injectables/ColumnSpaceObserverService.html":{}}}],["columnspaceobserv",{"_index":1111,"title":{},"body":{"components/MainframeComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["columnspaceobserverservic",{"_index":412,"title":{"injectables/ColumnSpaceObserverService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ColumnSpaceObserverService.html":{},"components/MainframeComponent.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["commonmodul",{"_index":1306,"title":{},"body":{"modules/NgMaterialModule.html":{}}}],["compat",{"_index":820,"title":{},"body":{"components/DialogAddTokenComponent.html":{},"dependencies.html":{}}}],["compon",{"_index":0,"title":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/Order.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":66,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["connect",{"_index":511,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConnectWeb3Service.html":{},"injectables/ConnectionService.html":{},"components/DialogAddPeerComponent.html":{},"components/ErrorComponent.html":{},"components/MainframeComponent.html":{},"interfaces/Window.html":{}}}],["connected_to",{"_index":591,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["connected_to_network",{"_index":592,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["connectedaccount",{"_index":593,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["connection.servic",{"_index":626,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["connectionestablish",{"_index":623,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["connectioniniti",{"_index":1105,"title":{},"body":{"components/MainframeComponent.html":{}}}],["connectionservic",{"_index":233,"title":{"injectables/ConnectionService.html":{}},"body":{"components/AnswerOrdersComponent.html":{},"injectables/ConnectWeb3Service.html":{},"injectables/ConnectionService.html":{},"components/MainframeComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/Order.html":{},"injectables/RouterWebsocketActivatedService.html":{},"interfaces/Window.html":{},"coverage.html":{}}}],["connectionservice.loggedinuser.address",{"_index":1303,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["connectionservice.loggedinuser.alia",{"_index":1302,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["connectlocalnod",{"_index":672,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["connectmetamask",{"_index":667,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["connecttonod",{"_index":597,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["connectweb3.servic",{"_index":177,"title":{},"body":{"injectables/AirswapdexService.html":{},"injectables/Erc20Service.html":{},"injectables/OrderRequestsService.html":{}}}],["connectweb3servic",{"_index":30,"title":{"injectables/ConnectWeb3Service.html":{}},"body":{"components/AccountComponent.html":{},"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"modules/AppModule.html":{},"injectables/ConnectWeb3Service.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"injectables/Erc20Service.html":{},"components/GetOrderComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"interfaces/Order.html":{},"injectables/OrderRequestsService.html":{},"interfaces/Window.html":{},"coverage.html":{},"overview.html":{}}}],["connectwebsocket",{"_index":1106,"title":{},"body":{"components/MainframeComponent.html":{}}}],["console.log('ad",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('connect",{"_index":668,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["console.log('d",{"_index":345,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["console.log('ent",{"_index":1247,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["console.log('error",{"_index":666,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["console.log('fetch",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('i",{"_index":681,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["console.log('initi",{"_index":677,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["console.log('rerout",{"_index":1381,"title":{},"body":{"injectables/RouterWebsocketActivatedService.html":{}}}],["console.log('sign",{"_index":339,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["console.log('thi",{"_index":685,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["const",{"_index":193,"title":{},"body":{"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"modules/AppModule.html":{},"injectables/ConnectWeb3Service.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"injectables/Erc20Service.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"interfaces/Order.html":{},"injectables/OrderRequestsService.html":{},"injectables/TokenService.html":{},"interfaces/Window.html":{},"miscellaneous/variables.html":{}}}],["constant",{"_index":152,"title":{},"body":{"injectables/AirswapdexService.html":{},"injectables/Erc20Service.html":{}}}],["constructor",{"_index":28,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"directives/AutofocusDirective.html":{},"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectWeb3Service.html":{},"injectables/ConnectionService.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"injectables/Erc20Service.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/Order.html":{},"injectables/OrderRequestsService.html":{},"injectables/RouterWebsocketActivatedService.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"interfaces/Window.html":{}}}],["constructor(afauth",{"_index":1110,"title":{},"body":{"components/MainframeComponent.html":{}}}],["constructor(airswapdexservic",{"_index":232,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["constructor(columnspaceobserv",{"_index":1468,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["constructor(connectionservic",{"_index":602,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"components/MyAccountComponent.html":{},"injectables/RouterWebsocketActivatedService.html":{}}}],["constructor(dialogref",{"_index":729,"title":{},"body":{"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{}}}],["constructor(el",{"_index":548,"title":{},"body":{"directives/AutofocusDirective.html":{},"directives/FocusDirective.html":{}}}],["constructor(erc20servic",{"_index":1332,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["constructor(firebaseservic",{"_index":1046,"title":{},"body":{"injectables/GetOrderService.html":{},"injectables/TokenService.html":{},"components/VerifyUserComponent.html":{}}}],["constructor(media",{"_index":567,"title":{},"body":{"injectables/ColumnSpaceObserverService.html":{}}}],["constructor(priv",{"_index":187,"title":{},"body":{"injectables/AirswapdexService.html":{},"directives/AutofocusDirective.html":{}}}],["constructor(web3servic",{"_index":29,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AirswapdexService.html":{},"injectables/Erc20Service.html":{},"components/GetOrderComponent.html":{},"components/MessageSystemComponent.html":{}}}],["contact",{"_index":986,"title":{},"body":{"components/ErrorComponent.html":{}}}],["contain",{"_index":365,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["context",{"_index":1538,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":800,"title":{},"body":{"components/DialogAddTokenComponent.html":{},"injectables/Erc20Service.html":{}}}],["contract.method",{"_index":962,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["contract.methods.decimals().cal",{"_index":959,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["core",{"_index":1552,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":647,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["correctnetwork",{"_index":594,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["count",{"_index":227,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["count(obj",{"_index":239,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["counterparti",{"_index":373,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/MainframeComponent.html":{}}}],["countorderrespons",{"_index":1044,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["coverag",{"_index":1495,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":1189,"title":{},"body":{"components/MainframeComponent.html":{}}}],["credentialhelp",{"_index":446,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["credentialhelper.onetap",{"_index":540,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["current",{"_index":390,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["currenttim",{"_index":1063,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["custom",{"_index":821,"title":{},"body":{"components/DialogAddTokenComponent.html":{},"components/MainframeComponent.html":{}}}],["customconfig",{"_index":516,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["customparamet",{"_index":522,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["customtoken",{"_index":1384,"title":{},"body":{"injectables/TokenService.html":{}}}],["data",{"_index":213,"title":{},"body":{"injectables/AirswapdexService.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"miscellaneous/variables.html":{}}}],["data.makerbalancemakertoken",{"_index":885,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["data.makerdecim",{"_index":886,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["data.makerprops.nam",{"_index":888,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["data.makerprops.symbol",{"_index":887,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["data.takerprops.nam",{"_index":889,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["databas",{"_index":805,"title":{},"body":{"components/DialogAddTokenComponent.html":{},"components/DialogSendOfflineComponent.html":{}}}],["databaseurl",{"_index":1646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datastr",{"_index":198,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["date",{"_index":1263,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["date.now",{"_index":1064,"title":{},"body":{"injectables/GetOrderService.html":{},"injectables/TokenService.html":{},"components/WhosOnlineComponent.html":{}}}],["date.now()).tostr",{"_index":291,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["db",{"_index":1220,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["deal",{"_index":371,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{},"components/MainframeComponent.html":{}}}],["decim",{"_index":817,"title":{},"body":{"components/DialogAddTokenComponent.html":{},"injectables/Erc20Service.html":{},"interfaces/LoggedInUser.html":{},"interfaces/Message.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"miscellaneous/variables.html":{}}}],["decimals(contract",{"_index":928,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["declar",{"_index":401,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConnectWeb3Service.html":{},"modules/NgMaterialModule.html":{},"interfaces/Window.html":{},"overview.html":{}}}],["decor",{"_index":736,"title":{},"body":{"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{}}}],["default",{"_index":149,"title":{},"body":{"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectWeb3Service.html":{},"injectables/ConnectionService.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"injectables/Erc20Service.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"injectables/OrderRequestsService.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":31,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"directives/AutofocusDirective.html":{},"pipes/CallbackPipe.html":{},"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectWeb3Service.html":{},"injectables/ConnectionService.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"injectables/Erc20Service.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"injectables/OrderRequestsService.html":{},"pipes/RoundPipe.html":{},"injectables/RouterWebsocketActivatedService.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"interfaces/Window.html":{}}}],["delet",{"_index":330,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/Order.html":{}}}],["deletem",{"_index":1274,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["depend",{"_index":400,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desirednetwork",{"_index":595,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["devicesizenumb",{"_index":566,"title":{},"body":{"injectables/ColumnSpaceObserverService.html":{}}}],["dialog",{"_index":74,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["dialogaddpeercompon",{"_index":73,"title":{"components/DialogAddPeerComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dialogaddtokencompon",{"_index":77,"title":{"components/DialogAddTokenComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dialoggetordercompon",{"_index":79,"title":{"components/DialogGetOrderComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dialogref",{"_index":724,"title":{},"body":{"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/MessageSystemComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":1243,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["dialogs/dialog",{"_index":491,"title":{},"body":{"modules/AppModule.html":{}}}],["dialogsendofflinecompon",{"_index":81,"title":{"components/DialogSendOfflineComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["differ",{"_index":1065,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["digit",{"_index":1370,"title":{},"body":{"pipes/RoundPipe.html":{}}}],["direct",{"_index":64,"title":{"directives/AutofocusDirective.html":{},"directives/FocusDirective.html":{}},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AutofocusDirective.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives/autofocus.direct",{"_index":497,"title":{},"body":{"modules/AppModule.html":{}}}],["directives/focus.direct",{"_index":498,"title":{},"body":{"modules/AppModule.html":{}}}],["displayedpeopl",{"_index":1463,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["document",{"_index":1496,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["don't",{"_index":367,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/DialogSendOfflineComponent.html":{}}}],["don\\'t",{"_index":391,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/DialogSendOfflineComponent.html":{}}}],["dynam",{"_index":1550,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":283,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"injectables/Erc20Service.html":{},"interfaces/Order.html":{}}}],["el",{"_index":551,"title":{},"body":{"directives/AutofocusDirective.html":{}}}],["element",{"_index":63,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["elementref",{"_index":549,"title":{},"body":{"directives/AutofocusDirective.html":{},"directives/FocusDirective.html":{}}}],["email",{"_index":519,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["emailcustomconfig",{"_index":533,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["enabletrac",{"_index":543,"title":{},"body":{"modules/AppModule.html":{}}}],["enter",{"_index":798,"title":{},"body":{"components/DialogAddTokenComponent.html":{},"components/MessageSystemComponent.html":{}}}],["entri",{"_index":526,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["entrycompon",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["environ",{"_index":495,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environ",{"_index":496,"title":{},"body":{"modules/AppModule.html":{}}}],["erc20",{"_index":819,"title":{},"body":{"components/DialogAddTokenComponent.html":{},"components/MainframeComponent.html":{}}}],["erc20.servic",{"_index":1340,"title":{},"body":{"injectables/OrderRequestsService.html":{},"injectables/TokenService.html":{}}}],["erc20servic",{"_index":762,"title":{"injectables/Erc20Service.html":{}},"body":{"components/DialogAddTokenComponent.html":{},"injectables/Erc20Service.html":{},"injectables/OrderRequestsService.html":{},"injectables/TokenService.html":{},"coverage.html":{}}}],["error",{"_index":509,"title":{},"body":{"modules/AppModule.html":{},"components/ErrorComponent.html":{}}}],["error'},{'nam",{"_index":85,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["error.cod",{"_index":1294,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["error.component.html",{"_index":980,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.scss",{"_index":979,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error/error.compon",{"_index":454,"title":{},"body":{"modules/AppModule.html":{}}}],["errorcompon",{"_index":84,"title":{"components/ErrorComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errormessag",{"_index":753,"title":{},"body":{"components/DialogAddTokenComponent.html":{},"components/MyAccountComponent.html":{}}}],["establish",{"_index":662,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["eth",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ether",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["etheraddress",{"_index":178,"title":{},"body":{"injectables/AirswapdexService.html":{},"injectables/Erc20Service.html":{},"injectables/OrderRequestsService.html":{},"injectables/TokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ethereumtoken",{"_index":1526,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ethereumtokens.push(newtoken",{"_index":1591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ethereumtokens.slice(0",{"_index":1625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ethereumtokenssa",{"_index":1527,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ethereumtokenssa.length",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ethereumtokenssa.push(newtoken",{"_index":1592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ethereumtokenssa.sort((a",{"_index":1593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ethereumtokenssn",{"_index":274,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{},"interfaces/Order.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ethereumtokenssn.length",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ethplor",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event",{"_index":166,"title":{},"body":{"injectables/AirswapdexService.html":{},"injectables/Erc20Service.html":{},"components/WhosOnlineComponent.html":{}}}],["event.pageindex",{"_index":1488,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["everytim",{"_index":1145,"title":{},"body":{"components/MainframeComponent.html":{}}}],["expir",{"_index":131,"title":{},"body":{"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["export",{"_index":48,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AutofocusDirective.html":{},"pipes/CallbackPipe.html":{},"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectWeb3Service.html":{},"injectables/ConnectionService.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"injectables/Erc20Service.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"components/InitialPageComponent.html":{},"interfaces/LoggedInUser.html":{},"components/MainframeComponent.html":{},"interfaces/Message.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"modules/NgMaterialModule.html":{},"interfaces/Order.html":{},"injectables/OrderRequestsService.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"pipes/RoundPipe.html":{},"injectables/RouterWebsocketActivatedService.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"interfaces/Window.html":{},"overview.html":{}}}],["face",{"_index":1187,"title":{},"body":{"components/MainframeComponent.html":{}}}],["facebookcustomconfig",{"_index":514,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fail",{"_index":168,"title":{},"body":{"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["fallback",{"_index":956,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["fals",{"_index":153,"title":{},"body":{"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"modules/AppModule.html":{},"pipes/CallbackPipe.html":{},"injectables/ConnectWeb3Service.html":{},"injectables/ConnectionService.html":{},"components/DialogAddTokenComponent.html":{},"injectables/Erc20Service.html":{},"injectables/GetOrderService.html":{},"components/MainframeComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/Order.html":{},"injectables/OrderRequestsService.html":{},"injectables/RouterWebsocketActivatedService.html":{},"injectables/TokenService.html":{},"components/VerifyUserComponent.html":{},"interfaces/Window.html":{},"miscellaneous/variables.html":{}}}],["fetch(`https://api.ethplorer.io/gettokeninfo",{"_index":1603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AutofocusDirective.html":{},"pipes/CallbackPipe.html":{},"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectWeb3Service.html":{},"injectables/ConnectionService.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"injectables/Erc20Service.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"components/InitialPageComponent.html":{},"interfaces/LoggedInUser.html":{},"components/MainframeComponent.html":{},"interfaces/Message.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"modules/NgMaterialModule.html":{},"interfaces/Order.html":{},"injectables/OrderRequestsService.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"pipes/RoundPipe.html":{},"injectables/RouterWebsocketActivatedService.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"interfaces/Window.html":{},"coverage.html":{}}}],["fill",{"_index":119,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["fill(makeraddress",{"_index":124,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["find",{"_index":87,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"index.html":{}}}],["findintentscompon",{"_index":86,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["findpeer",{"_index":506,"title":{},"body":{"modules/AppModule.html":{}}}],["firebas",{"_index":1138,"title":{},"body":{"components/MainframeComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["firebase.servic",{"_index":1341,"title":{},"body":{"injectables/OrderRequestsService.html":{},"injectables/TokenService.html":{}}}],["firebaseconnect",{"_index":703,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["firebaseservic",{"_index":413,"title":{},"body":{"modules/AppModule.html":{},"components/DialogAddTokenComponent.html":{},"injectables/GetOrderService.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"injectables/OrderRequestsService.html":{},"injectables/TokenService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["firebaseui",{"_index":449,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["firebaseuiauthconfig",{"_index":447,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["firebaseuimodul",{"_index":448,"title":{},"body":{"modules/AppModule.html":{}}}],["flexlayoutmodul",{"_index":428,"title":{},"body":{"modules/AppModule.html":{}}}],["focu",{"_index":110,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["focusdirect",{"_index":109,"title":{"directives/FocusDirective.html":{}},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["follow",{"_index":902,"title":{},"body":{"components/DialogSendOfflineComponent.html":{},"components/VerifyUserComponent.html":{}}}],["forc",{"_index":523,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["formsmodul",{"_index":432,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["foundint",{"_index":832,"title":{},"body":{"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{}}}],["full",{"_index":513,"title":{},"body":{"modules/AppModule.html":{}}}],["fullord",{"_index":334,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["function",{"_index":151,"title":{},"body":{"injectables/AirswapdexService.html":{},"pipes/CallbackPipe.html":{},"injectables/Erc20Service.html":{}}}],["ga",{"_index":196,"title":{},"body":{"injectables/AirswapdexService.html":{},"injectables/Erc20Service.html":{}}}],["gaspric",{"_index":194,"title":{},"body":{"injectables/AirswapdexService.html":{},"injectables/Erc20Service.html":{}}}],["gener",{"_index":643,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["get",{"_index":1565,"title":{"index.html":{}},"body":{}}],["getaccount",{"_index":598,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["getairswapdexcontract",{"_index":175,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["getbal",{"_index":599,"title":{},"body":{"injectables/ConnectWeb3Service.html":{}}}],["getbalance(account",{"_index":607,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["getcolumnnum",{"_index":573,"title":{},"body":{"injectables/ColumnSpaceObserverService.html":{}}}],["getconnect",{"_index":714,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["getconnectionestablish",{"_index":624,"title":{},"body":{"injectables/ConnectWeb3Service.html":{}}}],["getcontract",{"_index":919,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["getcontract(address",{"_index":930,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["getcustomtokenlistfromdb",{"_index":1387,"title":{},"body":{"injectables/TokenService.html":{}}}],["getnetworkid",{"_index":600,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["getopenrequest",{"_index":1337,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["getord",{"_index":836,"title":{},"body":{"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{}}}],["getordercompon",{"_index":89,"title":{"components/GetOrderComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["getorderservic",{"_index":220,"title":{"injectables/GetOrderService.html":{}},"body":{"components/AnswerOrdersComponent.html":{},"modules/AppModule.html":{},"components/DialogGetOrderComponent.html":{},"injectables/GetOrderService.html":{},"components/MainframeComponent.html":{},"interfaces/Order.html":{},"coverage.html":{},"overview.html":{}}}],["gettoken",{"_index":761,"title":{},"body":{"components/DialogAddTokenComponent.html":{},"injectables/TokenService.html":{}}}],["gettoken(address",{"_index":1394,"title":{},"body":{"injectables/TokenService.html":{}}}],["gettoken(token",{"_index":766,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["gettokenandwhetheritsvalid",{"_index":1388,"title":{},"body":{"injectables/TokenService.html":{}}}],["gettokenandwhetheritsvalid(address",{"_index":1396,"title":{},"body":{"injectables/TokenService.html":{}}}],["gettokenbyaddress",{"_index":275,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{},"interfaces/Order.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gettokenbyaddress(this.data.makertoken",{"_index":878,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["gettokenbyaddress(this.data.takertoken",{"_index":880,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["gettokenbyaddress(token",{"_index":783,"title":{},"body":{"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{}}}],["gettokenbyaddress(token).decim",{"_index":872,"title":{},"body":{"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{}}}],["gettokenbyaddress(token).nam",{"_index":870,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["gettokenbyaddress(token).symbol",{"_index":873,"title":{},"body":{"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{}}}],["gettokenbynam",{"_index":1389,"title":{},"body":{"injectables/TokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gettokenbyname(nam",{"_index":1398,"title":{},"body":{"injectables/TokenService.html":{}}}],["gettokendecim",{"_index":837,"title":{},"body":{"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{}}}],["gettokendecimals(order.makertoken",{"_index":1035,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["gettokendecimals(order.takertoken",{"_index":1038,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["gettokendecimals(token",{"_index":844,"title":{},"body":{"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{}}}],["gettokennam",{"_index":838,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["gettokenname(token",{"_index":846,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["gettokensymbol",{"_index":839,"title":{},"body":{"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{}}}],["gettokensymbol(order.makertoken",{"_index":1036,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["gettokensymbol(order.takertoken",{"_index":1039,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["gettokensymbol(token",{"_index":848,"title":{},"body":{"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{}}}],["getvalidatedtoken",{"_index":1390,"title":{},"body":{"injectables/TokenService.html":{}}}],["getweb3",{"_index":619,"title":{},"body":{"injectables/ConnectWeb3Service.html":{}}}],["give",{"_index":383,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{}}}],["global",{"_index":629,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["googlecustomconfig",{"_index":529,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":1575,"title":{},"body":{"modules.html":{}}}],["h",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hammerj",{"_index":1558,"title":{},"body":{"dependencies.html":{}}}],["handshak",{"_index":1160,"title":{},"body":{"components/MainframeComponent.html":{}}}],["hashv",{"_index":297,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["hasunreadmessag",{"_index":1090,"title":{},"body":{"interfaces/LoggedInUser.html":{},"interfaces/Message.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{}}}],["helper_mak",{"_index":1343,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["helper_maker.isvalid",{"_index":1352,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["helper_maker.token",{"_index":1348,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["helper_tak",{"_index":1345,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["helper_taker.isvalid",{"_index":1354,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["helper_taker.token",{"_index":1350,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["hh:mm",{"_index":1264,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["html",{"_index":62,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["https://airswapchat.firebaseio.com",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":690,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"interfaces/Window.html":{}}}],["identifi",{"_index":1497,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":9,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"directives/AutofocusDirective.html":{},"pipes/CallbackPipe.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/Order.html":{},"injectables/RouterWebsocketActivatedService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["import",{"_index":43,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AutofocusDirective.html":{},"pipes/CallbackPipe.html":{},"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectWeb3Service.html":{},"injectables/ConnectionService.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"injectables/Erc20Service.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"modules/NgMaterialModule.html":{},"interfaces/Order.html":{},"injectables/OrderRequestsService.html":{},"pipes/RoundPipe.html":{},"injectables/RouterWebsocketActivatedService.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"interfaces/Window.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AccountComponent.html":{},"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"directives/AutofocusDirective.html":{},"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectWeb3Service.html":{},"injectables/ConnectionService.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"injectables/Erc20Service.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"components/InitialPageComponent.html":{},"interfaces/LoggedInUser.html":{},"components/MainframeComponent.html":{},"interfaces/Message.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/Order.html":{},"injectables/OrderRequestsService.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"injectables/RouterWebsocketActivatedService.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"interfaces/Window.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AutofocusDirective.html":{},"pipes/CallbackPipe.html":{},"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectWeb3Service.html":{},"injectables/ConnectionService.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"injectables/Erc20Service.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"components/InitialPageComponent.html":{},"interfaces/LoggedInUser.html":{},"components/MainframeComponent.html":{},"interfaces/Message.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"modules/NgMaterialModule.html":{},"interfaces/Order.html":{},"injectables/OrderRequestsService.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"pipes/RoundPipe.html":{},"injectables/RouterWebsocketActivatedService.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"interfaces/Window.html":{}}}],["inform",{"_index":912,"title":{},"body":{"components/DialogSendOfflineComponent.html":{}}}],["initi",{"_index":91,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ConnectWeb3Service.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"interfaces/Window.html":{}}}],["initialpagecompon",{"_index":90,"title":{"components/InitialPageComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inject",{"_index":114,"title":{"injectables/AirswapdexService.html":{},"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectWeb3Service.html":{},"injectables/ConnectionService.html":{},"injectables/Erc20Service.html":{},"injectables/GetOrderService.html":{},"injectables/OrderRequestsService.html":{},"injectables/RouterWebsocketActivatedService.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{}},"body":{"injectables/AirswapdexService.html":{},"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectWeb3Service.html":{},"injectables/ConnectionService.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"injectables/Erc20Service.html":{},"directives/FocusDirective.html":{},"injectables/GetOrderService.html":{},"injectables/OrderRequestsService.html":{},"injectables/RouterWebsocketActivatedService.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{},"interfaces/Window.html":{},"coverage.html":{},"overview.html":{}}}],["inject(elementref",{"_index":995,"title":{},"body":{"directives/FocusDirective.html":{}}}],["inject(mat_dialog_data",{"_index":742,"title":{},"body":{"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{}}}],["input",{"_index":154,"title":{},"body":{"injectables/AirswapdexService.html":{},"injectables/Erc20Service.html":{},"directives/FocusDirective.html":{}}}],["intent",{"_index":505,"title":{},"body":{"modules/AppModule.html":{},"components/MainframeComponent.html":{}}}],["intents'},{'nam",{"_index":88,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["intents.compon",{"_index":456,"title":{},"body":{"modules/AppModule.html":{},"components/MainframeComponent.html":{}}}],["intents.component.t",{"_index":1508,"title":{},"body":{"coverage.html":{}}}],["intents/find",{"_index":455,"title":{},"body":{"modules/AppModule.html":{},"components/MainframeComponent.html":{},"coverage.html":{}}}],["intents/set",{"_index":466,"title":{},"body":{"modules/AppModule.html":{},"components/MainframeComponent.html":{},"coverage.html":{}}}],["interfac",{"_index":277,"title":{"interfaces/LoggedInUser.html":{},"interfaces/Message.html":{},"interfaces/Order.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"interfaces/Window.html":{}},"body":{"components/AnswerOrdersComponent.html":{},"injectables/ConnectWeb3Service.html":{},"interfaces/LoggedInUser.html":{},"interfaces/Message.html":{},"interfaces/Order.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"interfaces/Window.html":{},"coverage.html":{},"overview.html":{}}}],["invalid",{"_index":1248,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["isconnect",{"_index":601,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["isonlin",{"_index":1091,"title":{},"body":{"interfaces/LoggedInUser.html":{},"interfaces/Message.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{}}}],["isopen",{"_index":221,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["isuserlist",{"_index":1422,"title":{},"body":{"injectables/UserOnlineService.html":{}}}],["isuserlisted(uid",{"_index":1427,"title":{},"body":{"injectables/UserOnlineService.html":{}}}],["isuserlistedbyaddress",{"_index":1423,"title":{},"body":{"injectables/UserOnlineService.html":{}}}],["isuserlistedbyaddress(address",{"_index":1429,"title":{},"body":{"injectables/UserOnlineService.html":{}}}],["isvalid",{"_index":1410,"title":{},"body":{"injectables/TokenService.html":{}}}],["isvalidtoken",{"_index":1391,"title":{},"body":{"injectables/TokenService.html":{}}}],["isvalidtoken(address",{"_index":1401,"title":{},"body":{"injectables/TokenService.html":{}}}],["item",{"_index":558,"title":{},"body":{"pipes/CallbackPipe.html":{}}}],["items.filter(item",{"_index":562,"title":{},"body":{"pipes/CallbackPipe.html":{}}}],["js",{"_index":1553,"title":{},"body":{"dependencies.html":{}}}],["json.parse(messag",{"_index":1024,"title":{},"body":{"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{}}}],["json.parse(parsedmessage['messag",{"_index":1026,"title":{},"body":{"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{}}}],["knc",{"_index":1624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kovan",{"_index":695,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["kyber",{"_index":1623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["largeapprov",{"_index":970,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["last",{"_index":1297,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["lastupdateofcustomtoken",{"_index":1385,"title":{},"body":{"injectables/TokenService.html":{}}}],["layout",{"_index":430,"title":{},"body":{"modules/AppModule.html":{},"injectables/ColumnSpaceObserverService.html":{},"dependencies.html":{}}}],["legend",{"_index":61,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"overview.html":{}}}],["link",{"_index":1454,"title":{},"body":{"components/VerifyUserComponent.html":{}}}],["list",{"_index":823,"title":{},"body":{"components/DialogAddTokenComponent.html":{},"components/MainframeComponent.html":{},"miscellaneous/variables.html":{}}}],["listen",{"_index":1141,"title":{},"body":{"components/MainframeComponent.html":{}}}],["load",{"_index":1140,"title":{},"body":{"components/MainframeComponent.html":{}}}],["local",{"_index":675,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["localhost:8545",{"_index":673,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["log",{"_index":661,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"components/DialogSendOfflineComponent.html":{},"components/MainframeComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"interfaces/Window.html":{}}}],["loggedinus",{"_index":704,"title":{"interfaces/LoggedInUser.html":{}},"body":{"injectables/ConnectionService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/Message.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"coverage.html":{}}}],["login",{"_index":58,"title":{},"body":{"components/AccountComponent.html":{},"components/MainframeComponent.html":{},"components/MyAccountComponent.html":{}}}],["logo",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logoff",{"_index":1300,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["logout",{"_index":1275,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["long",{"_index":1298,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["lost",{"_index":983,"title":{},"body":{"components/ErrorComponent.html":{}}}],["m",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mail",{"_index":1190,"title":{},"body":{"components/MainframeComponent.html":{},"components/VerifyUserComponent.html":{}}}],["mainfram",{"_index":1094,"title":{},"body":{"components/MainframeComponent.html":{}}}],["mainframe'},{'nam",{"_index":94,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["mainframe.component.html",{"_index":1096,"title":{},"body":{"components/MainframeComponent.html":{}}}],["mainframe.component.scss",{"_index":1095,"title":{},"body":{"components/MainframeComponent.html":{}}}],["mainframe/mainframe.compon",{"_index":461,"title":{},"body":{"modules/AppModule.html":{}}}],["mainframecompon",{"_index":93,"title":{"components/MainframeComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mainnet",{"_index":186,"title":{},"body":{"injectables/AirswapdexService.html":{},"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["make",{"_index":1197,"title":{},"body":{"components/MainframeComponent.html":{}}}],["makeraddress",{"_index":138,"title":{},"body":{"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["makeramount",{"_index":126,"title":{},"body":{"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{},"interfaces/Order.html":{}}}],["makerdecim",{"_index":881,"title":{},"body":{"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{}}}],["makerdecimal)).tostr",{"_index":1016,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["makerhasenough",{"_index":840,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["makerprop",{"_index":877,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["makerprops.decim",{"_index":882,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["makertoken",{"_index":127,"title":{},"body":{"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{},"interfaces/Order.html":{}}}],["mani",{"_index":369,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["mat_dialog_data",{"_index":740,"title":{},"body":{"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{}}}],["matbadgemodul",{"_index":1308,"title":{},"body":{"modules/NgMaterialModule.html":{}}}],["matbottomsheetmodul",{"_index":1309,"title":{},"body":{"modules/NgMaterialModule.html":{}}}],["matbuttonmodul",{"_index":1310,"title":{},"body":{"modules/NgMaterialModule.html":{}}}],["matcardmodul",{"_index":1311,"title":{},"body":{"modules/NgMaterialModule.html":{}}}],["match",{"_index":113,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AutofocusDirective.html":{},"pipes/CallbackPipe.html":{},"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectWeb3Service.html":{},"injectables/ConnectionService.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"injectables/Erc20Service.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"components/InitialPageComponent.html":{},"interfaces/LoggedInUser.html":{},"components/MainframeComponent.html":{},"interfaces/Message.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"modules/NgMaterialModule.html":{},"interfaces/Order.html":{},"injectables/OrderRequestsService.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"pipes/RoundPipe.html":{},"injectables/RouterWebsocketActivatedService.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matcheckboxmodul",{"_index":1312,"title":{},"body":{"modules/NgMaterialModule.html":{}}}],["matdialog",{"_index":739,"title":{},"body":{"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/MessageSystemComponent.html":{}}}],["matdialogmodul",{"_index":1313,"title":{},"body":{"modules/NgMaterialModule.html":{}}}],["matdialogref",{"_index":730,"title":{},"body":{"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{}}}],["material.modul",{"_index":436,"title":{},"body":{"modules/AppModule.html":{}}}],["material.module.t",{"_index":1305,"title":{},"body":{"modules/NgMaterialModule.html":{}}}],["material/ng",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"modules/NgMaterialModule.html":{}}}],["matformfieldmodul",{"_index":1314,"title":{},"body":{"modules/NgMaterialModule.html":{}}}],["matgridlistmodul",{"_index":1315,"title":{},"body":{"modules/NgMaterialModule.html":{}}}],["math.abs(x",{"_index":281,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"injectables/Erc20Service.html":{},"interfaces/Order.html":{}}}],["math.floor(differ",{"_index":1068,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["math.floor(number(this.makeramount",{"_index":883,"title":{},"body":{"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{}}}],["math.floor(number(this.takeramount[order.id",{"_index":324,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["math.pow(10",{"_index":284,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"injectables/Erc20Service.html":{},"interfaces/Order.html":{}}}],["math.round(date.now",{"_index":293,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["math.round(estimatedga",{"_index":976,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["math.round(math.random",{"_index":289,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["math.round(value*10**digit",{"_index":1373,"title":{},"body":{"pipes/RoundPipe.html":{}}}],["maticonmodul",{"_index":1316,"title":{},"body":{"modules/NgMaterialModule.html":{}}}],["matinputmodul",{"_index":1317,"title":{},"body":{"modules/NgMaterialModule.html":{}}}],["matlistmodul",{"_index":1318,"title":{},"body":{"modules/NgMaterialModule.html":{}}}],["matpaginatormodul",{"_index":1320,"title":{},"body":{"modules/NgMaterialModule.html":{}}}],["matprogressspinnermodul",{"_index":1319,"title":{},"body":{"modules/NgMaterialModule.html":{}}}],["matselectmodul",{"_index":1321,"title":{},"body":{"modules/NgMaterialModule.html":{}}}],["matsidenavmodul",{"_index":1322,"title":{},"body":{"modules/NgMaterialModule.html":{}}}],["matsnackbarmodul",{"_index":1323,"title":{},"body":{"modules/NgMaterialModule.html":{}}}],["mattabledatasourc",{"_index":1483,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["mattablemodul",{"_index":1324,"title":{},"body":{"modules/NgMaterialModule.html":{}}}],["mattabsmodul",{"_index":1325,"title":{},"body":{"modules/NgMaterialModule.html":{}}}],["mattoolbarmodul",{"_index":1326,"title":{},"body":{"modules/NgMaterialModule.html":{}}}],["mattooltipmodul",{"_index":1327,"title":{},"body":{"modules/NgMaterialModule.html":{}}}],["md",{"_index":583,"title":{},"body":{"injectables/ColumnSpaceObserverService.html":{}}}],["media",{"_index":570,"title":{},"body":{"injectables/ColumnSpaceObserverService.html":{}}}],["media.asobserv",{"_index":577,"title":{},"body":{"injectables/ColumnSpaceObserverService.html":{}}}],["mediachang",{"_index":575,"title":{},"body":{"injectables/ColumnSpaceObserverService.html":{}}}],["messag",{"_index":96,"title":{"interfaces/Message.html":{}},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"interfaces/LoggedInUser.html":{},"components/MainframeComponent.html":{},"interfaces/Message.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{},"index.html":{}}}],["message(us",{"_index":1470,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["messagehistori",{"_index":1089,"title":{},"body":{"interfaces/LoggedInUser.html":{},"interfaces/Message.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{}}}],["messageservic",{"_index":1097,"title":{},"body":{"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["messagesystemcompon",{"_index":95,"title":{"components/MessageSystemComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["messaging.servic",{"_index":576,"title":{},"body":{"injectables/ColumnSpaceObserverService.html":{}}}],["messagingsenderid",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["messagingservic",{"_index":414,"title":{},"body":{"modules/AppModule.html":{},"injectables/ColumnSpaceObserverService.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"directives/AutofocusDirective.html":{},"pipes/CallbackPipe.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"pipes/RoundPipe.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"miscellaneous/variables.html":{}}}],["metamask",{"_index":59,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"injectables/ConnectWeb3Service.html":{},"components/MainframeComponent.html":{},"interfaces/Window.html":{}}}],["method",{"_index":25,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AutofocusDirective.html":{},"pipes/CallbackPipe.html":{},"injectables/ConnectWeb3Service.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"injectables/Erc20Service.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"injectables/OrderRequestsService.html":{},"pipes/RoundPipe.html":{},"injectables/RouterWebsocketActivatedService.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"miscellaneous/variables.html":{}}}],["min",{"_index":385,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["minut",{"_index":372,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["miscellan",{"_index":1580,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modifi",{"_index":586,"title":{},"body":{"injectables/ColumnSpaceObserverService.html":{}}}],["modul",{"_index":398,"title":{"modules/AppModule.html":{},"modules/NgMaterialModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/NgMaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":909,"title":{},"body":{"components/DialogSendOfflineComponent.html":{}}}],["msg.messag",{"_index":1265,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["msg.timestamp",{"_index":1262,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["msg.user",{"_index":1261,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["myaccount",{"_index":508,"title":{},"body":{"modules/AppModule.html":{}}}],["myaccountcompon",{"_index":98,"title":{"components/MyAccountComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["name",{"_index":35,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"directives/AutofocusDirective.html":{},"pipes/CallbackPipe.html":{},"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectWeb3Service.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"injectables/Erc20Service.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"components/InitialPageComponent.html":{},"interfaces/LoggedInUser.html":{},"components/MainframeComponent.html":{},"interfaces/Message.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"injectables/OrderRequestsService.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"pipes/RoundPipe.html":{},"injectables/RouterWebsocketActivatedService.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"miscellaneous/variables.html":{}}}],["name(contract",{"_index":932,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["name.tolocalelowercas",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["namelow",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["need",{"_index":1200,"title":{},"body":{"components/MainframeComponent.html":{}}}],["negoti",{"_index":1202,"title":{},"body":{"components/MainframeComponent.html":{}}}],["network",{"_index":648,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["new",{"_index":188,"title":{},"body":{"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"injectables/ConnectWeb3Service.html":{},"injectables/Erc20Service.html":{},"interfaces/Order.html":{},"interfaces/Window.html":{},"coverage.html":{}}}],["newalia",{"_index":1270,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["newtitl",{"_index":1123,"title":{},"body":{"components/MainframeComponent.html":{}}}],["newtoken",{"_index":1590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next",{"_index":904,"title":{},"body":{"components/DialogSendOfflineComponent.html":{}}}],["ng",{"_index":434,"title":{},"body":{"modules/AppModule.html":{}}}],["ngafterviewinit",{"_index":547,"title":{},"body":{"directives/AutofocusDirective.html":{}}}],["ngmaterialmodul",{"_index":411,"title":{"modules/NgMaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgMaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["ngmodul",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"modules/NgMaterialModule.html":{}}}],["ngonchang",{"_index":990,"title":{},"body":{"directives/FocusDirective.html":{}}}],["ngondestroy",{"_index":26,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"interfaces/Order.html":{}}}],["ngoninit",{"_index":27,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/Order.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["ngzone",{"_index":1219,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["node",{"_index":676,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["nonc",{"_index":133,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["nonpay",{"_index":165,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["note",{"_index":906,"title":{},"body":{"components/DialogSendOfflineComponent.html":{}}}],["null",{"_index":645,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"injectables/ConnectionService.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{},"injectables/TokenService.html":{},"interfaces/Window.html":{}}}],["num",{"_index":143,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["number",{"_index":132,"title":{},"body":{"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"injectables/ColumnSpaceObserverService.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"interfaces/LoggedInUser.html":{},"components/MainframeComponent.html":{},"interfaces/Message.html":{},"interfaces/Order.html":{},"injectables/OrderRequestsService.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"pipes/RoundPipe.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"injectables/TokenService.html":{},"components/WhosOnlineComponent.html":{}}}],["number(this.makeramount",{"_index":1011,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["number(this.takeramount[order.id",{"_index":320,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["number(x",{"_index":874,"title":{},"body":{"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{}}}],["numunreadansw",{"_index":1098,"title":{},"body":{"components/MainframeComponent.html":{}}}],["numunreadmessag",{"_index":1099,"title":{},"body":{"components/MainframeComponent.html":{}}}],["numwhosonlin",{"_index":1100,"title":{},"body":{"components/MainframeComponent.html":{}}}],["obj",{"_index":241,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["object",{"_index":1431,"title":{},"body":{"injectables/UserOnlineService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(obj).length",{"_index":340,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["observablemedia",{"_index":568,"title":{},"body":{"injectables/ColumnSpaceObserverService.html":{}}}],["observer.servic",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"components/MainframeComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["observer.service.t",{"_index":565,"title":{},"body":{"injectables/ColumnSpaceObserverService.html":{},"coverage.html":{}}}],["observer.service.ts:29",{"_index":574,"title":{},"body":{"injectables/ColumnSpaceObserverService.html":{}}}],["observer.service.ts:9",{"_index":569,"title":{},"body":{"injectables/ColumnSpaceObserverService.html":{}}}],["offer",{"_index":349,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{}}}],["offlin",{"_index":892,"title":{},"body":{"components/DialogSendOfflineComponent.html":{}}}],["offline'},{'nam",{"_index":83,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["offline.compon",{"_index":494,"title":{},"body":{"modules/AppModule.html":{}}}],["offline.component.html",{"_index":894,"title":{},"body":{"components/DialogSendOfflineComponent.html":{}}}],["offline.component.scss",{"_index":893,"title":{},"body":{"components/DialogSendOfflineComponent.html":{}}}],["offline.component.t",{"_index":891,"title":{},"body":{"components/DialogSendOfflineComponent.html":{},"coverage.html":{}}}],["offline.component.ts:10",{"_index":895,"title":{},"body":{"components/DialogSendOfflineComponent.html":{}}}],["offline.component.ts:13",{"_index":901,"title":{},"body":{"components/DialogSendOfflineComponent.html":{}}}],["offline.component.ts:14",{"_index":900,"title":{},"body":{"components/DialogSendOfflineComponent.html":{}}}],["offline.component.ts:16",{"_index":896,"title":{},"body":{"components/DialogSendOfflineComponent.html":{}}}],["offline.component.ts:19",{"_index":899,"title":{},"body":{"components/DialogSendOfflineComponent.html":{}}}],["offline.component.ts:23",{"_index":898,"title":{},"body":{"components/DialogSendOfflineComponent.html":{}}}],["offline.component.ts:27",{"_index":897,"title":{},"body":{"components/DialogSendOfflineComponent.html":{}}}],["offline/dialog",{"_index":493,"title":{},"body":{"modules/AppModule.html":{},"components/DialogSendOfflineComponent.html":{},"coverage.html":{}}}],["ok",{"_index":680,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["on",{"_index":655,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["onchang",{"_index":988,"title":{},"body":{"directives/FocusDirective.html":{}}}],["onclosecancel",{"_index":726,"title":{},"body":{"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{}}}],["oncloseconfirm",{"_index":727,"title":{},"body":{"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{}}}],["oncloseconfirm(uuid",{"_index":853,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["ondestroy",{"_index":11,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"interfaces/Order.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/Order.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["onlin",{"_index":106,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["online.compon",{"_index":468,"title":{},"body":{"modules/AppModule.html":{}}}],["online.component.html",{"_index":1462,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["online.component.scss",{"_index":1461,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["online.component.t",{"_index":1460,"title":{},"body":{"components/WhosOnlineComponent.html":{},"coverage.html":{}}}],["online.component.ts:14",{"_index":1469,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["online.component.ts:17",{"_index":1477,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["online.component.ts:18",{"_index":1479,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["online.component.ts:22",{"_index":1482,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["online.component.ts:23",{"_index":1480,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["online.component.ts:24",{"_index":1478,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["online.component.ts:26",{"_index":1472,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["online.component.ts:30",{"_index":1471,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["online.component.ts:38",{"_index":1474,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["online.component.ts:43",{"_index":1475,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["online.component.ts:49",{"_index":1476,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["online.servic",{"_index":484,"title":{},"body":{"modules/AppModule.html":{},"components/MainframeComponent.html":{}}}],["online.service.t",{"_index":1419,"title":{},"body":{"injectables/UserOnlineService.html":{},"coverage.html":{}}}],["online.service.ts:10",{"_index":1424,"title":{},"body":{"injectables/UserOnlineService.html":{}}}],["online.service.ts:15",{"_index":1426,"title":{},"body":{"injectables/UserOnlineService.html":{}}}],["online.service.ts:29",{"_index":1428,"title":{},"body":{"injectables/UserOnlineService.html":{}}}],["online.service.ts:33",{"_index":1430,"title":{},"body":{"injectables/UserOnlineService.html":{}}}],["online.service.ts:9",{"_index":1432,"title":{},"body":{"injectables/UserOnlineService.html":{}}}],["online/who",{"_index":467,"title":{},"body":{"modules/AppModule.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{}}}],["onnoclick",{"_index":728,"title":{},"body":{"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{}}}],["open",{"_index":347,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["opendialogaddp",{"_index":1215,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["openorderid",{"_index":222,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["openrequest",{"_index":1336,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["option",{"_index":37,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"directives/AutofocusDirective.html":{},"pipes/CallbackPipe.html":{},"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectWeb3Service.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"injectables/Erc20Service.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"injectables/OrderRequestsService.html":{},"pipes/RoundPipe.html":{},"injectables/RouterWebsocketActivatedService.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["order",{"_index":217,"title":{"interfaces/Order.html":{}},"body":{"components/AnswerOrdersComponent.html":{},"modules/AppModule.html":{},"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"components/MainframeComponent.html":{},"interfaces/Order.html":{},"injectables/OrderRequestsService.html":{},"coverage.html":{},"index.html":{}}}],["order'},{'nam",{"_index":80,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["order.alia",{"_index":350,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["order.compon",{"_index":458,"title":{},"body":{"modules/AppModule.html":{},"components/MainframeComponent.html":{}}}],["order.component.html",{"_index":831,"title":{},"body":{"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{}}}],["order.component.scss",{"_index":830,"title":{},"body":{"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{}}}],["order.component.t",{"_index":829,"title":{},"body":{"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{},"coverage.html":{}}}],["order.component.ts:20",{"_index":863,"title":{},"body":{"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{}}}],["order.component.ts:21",{"_index":861,"title":{},"body":{"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{}}}],["order.component.ts:22",{"_index":1007,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["order.component.ts:23",{"_index":864,"title":{},"body":{"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{}}}],["order.component.ts:24",{"_index":860,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["order.component.ts:25",{"_index":862,"title":{},"body":{"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{}}}],["order.component.ts:26",{"_index":842,"title":{},"body":{"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{}}}],["order.component.ts:27",{"_index":1008,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["order.component.ts:28",{"_index":999,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["order.component.ts:30",{"_index":859,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["order.component.ts:31",{"_index":858,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["order.component.ts:32",{"_index":1009,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["order.component.ts:34",{"_index":865,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["order.component.ts:36",{"_index":1004,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["order.component.ts:38",{"_index":851,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["order.component.ts:39",{"_index":1003,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["order.component.ts:42",{"_index":855,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["order.component.ts:43",{"_index":1001,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["order.component.ts:46",{"_index":854,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["order.component.ts:50",{"_index":852,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["order.component.ts:51",{"_index":1002,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["order.component.ts:54",{"_index":847,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["order.component.ts:59",{"_index":1006,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["order.component.ts:62",{"_index":845,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["order.component.ts:63",{"_index":1000,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["order.component.ts:70",{"_index":849,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["order.component.ts:78",{"_index":857,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["order.component.ts:82",{"_index":850,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["order.component.ts:87",{"_index":843,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["order.component.ts:97",{"_index":1005,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["order.id",{"_index":329,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{},"interfaces/Order.html":{}}}],["order.makeraddress",{"_index":380,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{}}}],["order.makeramount",{"_index":353,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{}}}],["order.makerdecim",{"_index":354,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["order.makerprops.address",{"_index":362,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["order.makerprops.decim",{"_index":1357,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["order.makerprops.symbol",{"_index":355,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["order.makertoken",{"_index":1054,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["order.makertoken.slice(0,8",{"_index":1037,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["order.minutesleft",{"_index":384,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["order.secondsleft",{"_index":386,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["order.servic",{"_index":273,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"modules/AppModule.html":{},"components/DialogGetOrderComponent.html":{},"components/MainframeComponent.html":{},"interfaces/Order.html":{}}}],["order.service.t",{"_index":1042,"title":{},"body":{"injectables/GetOrderService.html":{},"coverage.html":{}}}],["order.service.ts:13",{"_index":1052,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["order.service.ts:15",{"_index":1051,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["order.service.ts:16",{"_index":1047,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["order.service.ts:23",{"_index":1050,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["order.service.ts:72",{"_index":1048,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["order.takeraddress",{"_index":351,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"injectables/GetOrderService.html":{},"injectables/OrderRequestsService.html":{}}}],["order.takeramount",{"_index":376,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{}}}],["order.takeramount/order.takerdecim",{"_index":389,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["order.takerbalancemakertoken/order.makerdecim",{"_index":360,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["order.takerbalancetakertoken/order.takerdecim",{"_index":359,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["order.takerdecim",{"_index":377,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["order.takerprops.address",{"_index":363,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["order.takerprops.decim",{"_index":1359,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["order.takerprops.symbol",{"_index":357,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["order.takertoken",{"_index":1055,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["order.takertoken.slice(0,8",{"_index":1040,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["order/dialog",{"_index":492,"title":{},"body":{"modules/AppModule.html":{},"components/DialogGetOrderComponent.html":{},"coverage.html":{}}}],["order/get",{"_index":457,"title":{},"body":{"modules/AppModule.html":{},"components/GetOrderComponent.html":{},"components/MainframeComponent.html":{},"coverage.html":{}}}],["order['",{"_index":319,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{},"interfaces/Order.html":{}}}],["order['alia",{"_index":1361,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["order['bothtokensvalid",{"_index":1355,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["order['clickeddeals",{"_index":341,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["order['clickedofferd",{"_index":323,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{},"injectables/OrderRequestsService.html":{}}}],["order['expir",{"_index":292,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{},"interfaces/Order.html":{}}}],["order['makeraddress",{"_index":299,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{},"interfaces/Order.html":{}}}],["order['makeramount",{"_index":300,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{},"interfaces/Order.html":{}}}],["order['makerdecim",{"_index":1356,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["order['makerprop",{"_index":1347,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["order['makertoken",{"_index":301,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{},"interfaces/Order.html":{}}}],["order['makervalid",{"_index":1351,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["order['nonc",{"_index":288,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{},"interfaces/Order.html":{}}}],["order['r",{"_index":318,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{},"interfaces/Order.html":{}}}],["order['takeraddress",{"_index":302,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{},"interfaces/Order.html":{}}}],["order['takeramount",{"_index":303,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{},"interfaces/Order.html":{}}}],["order['takerbalancemakertoken",{"_index":1363,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["order['takerbalancetakertoken",{"_index":1365,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["order['takerdecim",{"_index":1358,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["order['takerdecimals'])).tostr",{"_index":325,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["order['takerprop",{"_index":1349,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["order['takertoken",{"_index":304,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{},"interfaces/Order.html":{}}}],["order['takervalid",{"_index":1353,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["order['v",{"_index":317,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{},"interfaces/Order.html":{}}}],["orderrequest",{"_index":1330,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["orderrequestsservic",{"_index":234,"title":{"injectables/OrderRequestsService.html":{}},"body":{"components/AnswerOrdersComponent.html":{},"modules/AppModule.html":{},"components/MainframeComponent.html":{},"interfaces/Order.html":{},"injectables/OrderRequestsService.html":{},"coverage.html":{},"overview.html":{}}}],["orderrespons",{"_index":833,"title":{},"body":{"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{}}}],["orders'},{'nam",{"_index":70,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["orders.compon",{"_index":452,"title":{},"body":{"modules/AppModule.html":{},"components/MainframeComponent.html":{}}}],["orders.component.html",{"_index":219,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["orders.component.scss",{"_index":218,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["orders.component.t",{"_index":216,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{},"coverage.html":{}}}],["orders.component.ts:107",{"_index":238,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["orders.component.ts:128",{"_index":240,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["orders.component.ts:132",{"_index":245,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["orders.component.ts:30",{"_index":257,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["orders.component.ts:31",{"_index":259,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["orders.component.ts:32",{"_index":261,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["orders.component.ts:33",{"_index":263,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["orders.component.ts:34",{"_index":258,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["orders.component.ts:35",{"_index":255,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["orders.component.ts:36",{"_index":236,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["orders.component.ts:41",{"_index":256,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["orders.component.ts:42",{"_index":260,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["orders.component.ts:44",{"_index":264,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["orders.component.ts:47",{"_index":243,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["orders.component.ts:50",{"_index":242,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["orders.component.ts:54",{"_index":252,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["orders.component.ts:72",{"_index":249,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["orders.component.ts:77",{"_index":247,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["orders/answ",{"_index":215,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"modules/AppModule.html":{},"components/MainframeComponent.html":{},"interfaces/Order.html":{},"coverage.html":{}}}],["orderservic",{"_index":223,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["other",{"_index":1171,"title":{},"body":{"components/MainframeComponent.html":{}}}],["otherus",{"_index":1092,"title":{"interfaces/OtherUser.html":{}},"body":{"interfaces/LoggedInUser.html":{},"interfaces/Message.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"injectables/UserOnlineService.html":{},"coverage.html":{}}}],["otherwis",{"_index":985,"title":{},"body":{"components/ErrorComponent.html":{}}}],["out",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"components/MyAccountComponent.html":{},"overview.html":{}}}],["output",{"_index":158,"title":{},"body":{"injectables/AirswapdexService.html":{},"injectables/Erc20Service.html":{}}}],["overview",{"_index":1576,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":1541,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":120,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["pad(num",{"_index":140,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["page",{"_index":686,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"components/InitialPageComponent.html":{},"components/WhosOnlineComponent.html":{},"interfaces/Window.html":{}}}],["page'},{'nam",{"_index":92,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["page(ev",{"_index":1473,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["page.compon",{"_index":460,"title":{},"body":{"modules/AppModule.html":{},"components/MainframeComponent.html":{}}}],["page.component.html",{"_index":1081,"title":{},"body":{"components/InitialPageComponent.html":{}}}],["page.component.scss",{"_index":1080,"title":{},"body":{"components/InitialPageComponent.html":{}}}],["page.component.t",{"_index":1079,"title":{},"body":{"components/InitialPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:13",{"_index":1084,"title":{},"body":{"components/InitialPageComponent.html":{}}}],["page.component.ts:16",{"_index":1083,"title":{},"body":{"components/InitialPageComponent.html":{}}}],["page.component.ts:8",{"_index":1082,"title":{},"body":{"components/InitialPageComponent.html":{}}}],["page/initi",{"_index":459,"title":{},"body":{"modules/AppModule.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"coverage.html":{}}}],["pageindex",{"_index":1464,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["pages",{"_index":1465,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["paramet",{"_index":33,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"directives/AutofocusDirective.html":{},"pipes/CallbackPipe.html":{},"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectWeb3Service.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"injectables/Erc20Service.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"injectables/OrderRequestsService.html":{},"pipes/RoundPipe.html":{},"injectables/RouterWebsocketActivatedService.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["parsedcont",{"_index":1025,"title":{},"body":{"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{}}}],["parsedcontent['id",{"_index":1027,"title":{},"body":{"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{}}}],["parsedcontent['method",{"_index":1058,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["parsedcontent['result",{"_index":1029,"title":{},"body":{"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{}}}],["parsedmessag",{"_index":1023,"title":{},"body":{"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{}}}],["parsefloat(this.makeramount",{"_index":875,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["parseint(response.decim",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["password",{"_index":524,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":504,"title":{},"body":{"modules/AppModule.html":{}}}],["pathmatch",{"_index":512,"title":{},"body":{"modules/AppModule.html":{}}}],["payabl",{"_index":159,"title":{},"body":{"injectables/AirswapdexService.html":{},"injectables/Erc20Service.html":{}}}],["peer",{"_index":358,"title":{"interfaces/Peer.html":{}},"body":{"components/AnswerOrdersComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/GetOrderComponent.html":{},"interfaces/LoggedInUser.html":{},"components/MainframeComponent.html":{},"interfaces/Message.html":{},"components/MessageSystemComponent.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{}}}],["peer'},{'nam",{"_index":76,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["peer.alia",{"_index":1256,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["peer.compon",{"_index":490,"title":{},"body":{"modules/AppModule.html":{},"components/MessageSystemComponent.html":{}}}],["peer.component.html",{"_index":723,"title":{},"body":{"components/DialogAddPeerComponent.html":{}}}],["peer.component.scss",{"_index":722,"title":{},"body":{"components/DialogAddPeerComponent.html":{}}}],["peer.component.t",{"_index":721,"title":{},"body":{"components/DialogAddPeerComponent.html":{},"coverage.html":{}}}],["peer.component.ts:13",{"_index":731,"title":{},"body":{"components/DialogAddPeerComponent.html":{}}}],["peer.component.ts:16",{"_index":738,"title":{},"body":{"components/DialogAddPeerComponent.html":{}}}],["peer.component.ts:17",{"_index":737,"title":{},"body":{"components/DialogAddPeerComponent.html":{}}}],["peer.component.ts:19",{"_index":732,"title":{},"body":{"components/DialogAddPeerComponent.html":{}}}],["peer.component.ts:23",{"_index":735,"title":{},"body":{"components/DialogAddPeerComponent.html":{}}}],["peer.component.ts:27",{"_index":734,"title":{},"body":{"components/DialogAddPeerComponent.html":{}}}],["peer.component.ts:31",{"_index":733,"title":{},"body":{"components/DialogAddPeerComponent.html":{}}}],["peer/dialog",{"_index":489,"title":{},"body":{"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/MessageSystemComponent.html":{},"coverage.html":{}}}],["peer2peer",{"_index":1567,"title":{},"body":{"index.html":{}}}],["peeraddress",{"_index":725,"title":{},"body":{"components/DialogAddPeerComponent.html":{}}}],["peopl",{"_index":1191,"title":{},"body":{"components/MainframeComponent.html":{}}}],["person",{"_index":1192,"title":{},"body":{"components/MainframeComponent.html":{}}}],["person_add",{"_index":1257,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["pipe",{"_index":485,"title":{"pipes/CallbackPipe.html":{},"pipes/RoundPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/CallbackPipe.html":{},"pipes/RoundPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe({nam",{"_index":1372,"title":{},"body":{"pipes/RoundPipe.html":{}}}],["pipes/callback",{"_index":487,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/round",{"_index":486,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":560,"title":{},"body":{"pipes/CallbackPipe.html":{}}}],["platform",{"_index":1209,"title":{},"body":{"components/MainframeComponent.html":{}}}],["pleas",{"_index":825,"title":{},"body":{"components/DialogAddTokenComponent.html":{},"components/MyAccountComponent.html":{}}}],["point",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixedhash",{"_index":305,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["price",{"_index":1204,"title":{},"body":{"components/MainframeComponent.html":{}}}],["privat",{"_index":278,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectWeb3Service.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"injectables/Erc20Service.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"interfaces/Order.html":{},"injectables/OrderRequestsService.html":{},"injectables/RouterWebsocketActivatedService.html":{},"injectables/TokenService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"interfaces/Window.html":{}}}],["product",{"_index":1640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1566,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promis",{"_index":139,"title":{},"body":{"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"injectables/ConnectWeb3Service.html":{},"injectables/Erc20Service.html":{},"injectables/TokenService.html":{},"interfaces/Window.html":{}}}],["promise.all(promiselist",{"_index":818,"title":{},"body":{"components/DialogAddTokenComponent.html":{},"injectables/OrderRequestsService.html":{}}}],["promise.resolve(this.customtoken",{"_index":1417,"title":{},"body":{"injectables/TokenService.html":{}}}],["promiselist",{"_index":807,"title":{},"body":{"components/DialogAddTokenComponent.html":{},"injectables/OrderRequestsService.html":{}}}],["promiselist.push",{"_index":808,"title":{},"body":{"components/DialogAddTokenComponent.html":{},"injectables/OrderRequestsService.html":{}}}],["prompt",{"_index":531,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["properli",{"_index":828,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["properti",{"_index":21,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectWeb3Service.html":{},"injectables/ConnectionService.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"injectables/Erc20Service.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"interfaces/LoggedInUser.html":{},"components/MainframeComponent.html":{},"interfaces/Message.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/Order.html":{},"injectables/OrderRequestsService.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"injectables/RouterWebsocketActivatedService.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"interfaces/Window.html":{}}}],["protocol",{"_index":1571,"title":{},"body":{"index.html":{}}}],["provid",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":180,"title":{},"body":{"injectables/AirswapdexService.html":{},"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectionService.html":{},"injectables/Erc20Service.html":{},"injectables/GetOrderService.html":{},"injectables/OrderRequestsService.html":{},"injectables/RouterWebsocketActivatedService.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{}}}],["public",{"_index":22,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectWeb3Service.html":{},"injectables/ConnectionService.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"injectables/Erc20Service.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/Order.html":{},"injectables/OrderRequestsService.html":{},"injectables/RouterWebsocketActivatedService.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"interfaces/Window.html":{}}}],["public_profil",{"_index":518,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["pure",{"_index":561,"title":{},"body":{"pipes/CallbackPipe.html":{}}}],["r",{"_index":135,"title":{},"body":{"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["rc.10",{"_index":1551,"title":{},"body":{"dependencies.html":{}}}],["re",{"_index":525,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["reach",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["read",{"_index":903,"title":{},"body":{"components/DialogSendOfflineComponent.html":{},"components/MainframeComponent.html":{}}}],["reauthent",{"_index":528,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["receiv",{"_index":834,"title":{},"body":{"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{},"components/MessageSystemComponent.html":{}}}],["receiver.slice(2,6",{"_index":884,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["recent",{"_index":1296,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["reconnect",{"_index":682,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"components/ErrorComponent.html":{},"interfaces/Window.html":{}}}],["redirectto",{"_index":510,"title":{},"body":{"modules/AppModule.html":{}}}],["refresh",{"_index":1466,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["regist",{"_index":654,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["remain",{"_index":951,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["render",{"_index":989,"title":{},"body":{"directives/FocusDirective.html":{}}}],["request",{"_index":348,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["requests.servic",{"_index":271,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"modules/AppModule.html":{},"components/MainframeComponent.html":{},"interfaces/Order.html":{}}}],["requests.service.t",{"_index":1329,"title":{},"body":{"injectables/OrderRequestsService.html":{},"coverage.html":{}}}],["requests.service.ts:14",{"_index":1333,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["requests.service.ts:22",{"_index":1338,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["requests.service.ts:26",{"_index":1335,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["requir",{"_index":627,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require('uuid/v4",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('web3",{"_index":628,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requiredisplaynam",{"_index":535,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["res.json",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":419,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["respons",{"_index":379,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{}}}],["response.nam",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response.symbol",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responsemessag",{"_index":1444,"title":{},"body":{"components/VerifyUserComponent.html":{}}}],["result",{"_index":112,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AutofocusDirective.html":{},"pipes/CallbackPipe.html":{},"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectWeb3Service.html":{},"injectables/ConnectionService.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"injectables/Erc20Service.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"components/InitialPageComponent.html":{},"interfaces/LoggedInUser.html":{},"components/MainframeComponent.html":{},"interfaces/Message.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"modules/NgMaterialModule.html":{},"interfaces/Order.html":{},"injectables/OrderRequestsService.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"pipes/RoundPipe.html":{},"injectables/RouterWebsocketActivatedService.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result[0",{"_index":700,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["return",{"_index":39,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"directives/AutofocusDirective.html":{},"pipes/CallbackPipe.html":{},"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectWeb3Service.html":{},"injectables/ConnectionService.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"injectables/Erc20Service.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/Order.html":{},"injectables/OrderRequestsService.html":{},"pipes/RoundPipe.html":{},"injectables/RouterWebsocketActivatedService.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"interfaces/Window.html":{},"miscellaneous/variables.html":{}}}],["rinkebi",{"_index":183,"title":{},"body":{"injectables/AirswapdexService.html":{},"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["root",{"_index":181,"title":{},"body":{"injectables/AirswapdexService.html":{},"components/AppComponent.html":{},"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectionService.html":{},"injectables/Erc20Service.html":{},"injectables/GetOrderService.html":{},"injectables/OrderRequestsService.html":{},"injectables/RouterWebsocketActivatedService.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{}}}],["root'},{'nam",{"_index":72,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["ropsten",{"_index":692,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["round",{"_index":1368,"title":{},"body":{"pipes/RoundPipe.html":{}}}],["roundpip",{"_index":410,"title":{"pipes/RoundPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/RoundPipe.html":{},"coverage.html":{},"overview.html":{}}}],["rout",{"_index":438,"title":{},"body":{"modules/AppModule.html":{}}}],["router",{"_index":1377,"title":{},"body":{"injectables/RouterWebsocketActivatedService.html":{}}}],["routermodul",{"_index":437,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot",{"_index":542,"title":{},"body":{"modules/AppModule.html":{}}}],["routerwebsocketactivatedservic",{"_index":415,"title":{"injectables/RouterWebsocketActivatedService.html":{}},"body":{"modules/AppModule.html":{},"injectables/RouterWebsocketActivatedService.html":{},"coverage.html":{},"overview.html":{}}}],["rxj",{"_index":1560,"title":{},"body":{"dependencies.html":{}}}],["rxjs/observable/timerobserv",{"_index":47,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"injectables/GetOrderService.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"interfaces/Order.html":{}}}],["rxjs/subscript",{"_index":265,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{},"interfaces/Order.html":{}}}],["s",{"_index":136,"title":{},"body":{"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["s.length",{"_index":192,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["same",{"_index":653,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["scam",{"_index":368,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["scope",{"_index":517,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["scrollm",{"_index":1259,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["scrolltop]=\"scrollme.scrollheight",{"_index":1260,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["seal",{"_index":346,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{},"interfaces/Order.html":{}}}],["sealdeal",{"_index":228,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{}}}],["sealdeal(ord",{"_index":244,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{},"interfaces/Order.html":{}}}],["sec",{"_index":387,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["secondari",{"_index":822,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["secret",{"_index":911,"title":{},"body":{"components/DialogSendOfflineComponent.html":{}}}],["select_account",{"_index":532,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"directives/AutofocusDirective.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/Order.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["send",{"_index":82,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{}}}],["send&nbsp",{"_index":913,"title":{},"body":{"components/DialogSendOfflineComponent.html":{}}}],["sendgetord",{"_index":1045,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["sendgetorder(ord",{"_index":1049,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["sendmail",{"_index":1445,"title":{},"body":{"components/VerifyUserComponent.html":{}}}],["sendmessag",{"_index":1216,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["sendverificationmail",{"_index":1446,"title":{},"body":{"components/VerifyUserComponent.html":{}}}],["sent",{"_index":1455,"title":{},"body":{"components/VerifyUserComponent.html":{}}}],["sentord",{"_index":1043,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["servic",{"_index":266,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"modules/AppModule.html":{},"injectables/GetOrderService.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"interfaces/Order.html":{}}}],["services/airswapdex.servic",{"_index":267,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{},"interfaces/Order.html":{}}}],["services/column",{"_index":474,"title":{},"body":{"modules/AppModule.html":{},"components/MainframeComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["services/connection.servic",{"_index":268,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/MainframeComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/Order.html":{},"injectables/RouterWebsocketActivatedService.html":{}}}],["services/connectweb3.servic",{"_index":45,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"modules/AppModule.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"interfaces/Order.html":{}}}],["services/erc20.servic",{"_index":780,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["services/firebase.servic",{"_index":477,"title":{},"body":{"modules/AppModule.html":{},"components/DialogAddTokenComponent.html":{},"injectables/GetOrderService.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["services/get",{"_index":272,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"modules/AppModule.html":{},"components/DialogGetOrderComponent.html":{},"components/MainframeComponent.html":{},"interfaces/Order.html":{}}}],["services/messaging.servic",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["services/ord",{"_index":270,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"modules/AppModule.html":{},"components/MainframeComponent.html":{},"interfaces/Order.html":{}}}],["services/rout",{"_index":479,"title":{},"body":{"modules/AppModule.html":{}}}],["services/token",{"_index":276,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{},"interfaces/Order.html":{}}}],["services/token.servic",{"_index":482,"title":{},"body":{"modules/AppModule.html":{},"components/MainframeComponent.html":{}}}],["services/us",{"_index":483,"title":{},"body":{"modules/AppModule.html":{},"components/MainframeComponent.html":{}}}],["services/websocket.servic",{"_index":269,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"modules/AppModule.html":{},"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"interfaces/Order.html":{}}}],["set",{"_index":100,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ConnectWeb3Service.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"interfaces/Window.html":{}}}],["setintentscompon",{"_index":99,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["settimeout",{"_index":1457,"title":{},"body":{"components/VerifyUserComponent.html":{}}}],["settitl",{"_index":1107,"title":{},"body":{"components/MainframeComponent.html":{}}}],["settitle(newtitl",{"_index":1121,"title":{},"body":{"components/MainframeComponent.html":{}}}],["settl",{"_index":1568,"title":{},"body":{"index.html":{}}}],["setweb3(web3",{"_index":621,"title":{},"body":{"injectables/ConnectWeb3Service.html":{}}}],["showanswerbadg",{"_index":1101,"title":{},"body":{"components/MainframeComponent.html":{}}}],["showmessagebadg",{"_index":1102,"title":{},"body":{"components/MainframeComponent.html":{}}}],["showwhosonlinebadg",{"_index":1103,"title":{},"body":{"components/MainframeComponent.html":{}}}],["sign",{"_index":374,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{}}}],["sign_ord",{"_index":229,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["sign_order(ord",{"_index":246,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["signedmessage.slice(0",{"_index":309,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["signedmessage.slice(130",{"_index":315,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["signedmessage.slice(66",{"_index":312,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["signedord",{"_index":1028,"title":{},"body":{"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{}}}],["signedorder.id",{"_index":1071,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["signedorder['alia",{"_index":1074,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["signedorder['clickeddeals",{"_index":1059,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["signedorder['expir",{"_index":1066,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["signedorder['minutesleft",{"_index":1067,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["signedorder['secondsleft",{"_index":1070,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["signedorder['tim",{"_index":1061,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["signedorder['timedout",{"_index":1060,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["size",{"_index":141,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["sm",{"_index":582,"title":{},"body":{"injectables/ColumnSpaceObserverService.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AutofocusDirective.html":{},"pipes/CallbackPipe.html":{},"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectWeb3Service.html":{},"injectables/ConnectionService.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"injectables/Erc20Service.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"components/InitialPageComponent.html":{},"interfaces/LoggedInUser.html":{},"components/MainframeComponent.html":{},"interfaces/Message.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"modules/NgMaterialModule.html":{},"interfaces/Order.html":{},"injectables/OrderRequestsService.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"pipes/RoundPipe.html":{},"injectables/RouterWebsocketActivatedService.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"interfaces/Window.html":{}}}],["space",{"_index":475,"title":{},"body":{"modules/AppModule.html":{},"injectables/ColumnSpaceObserverService.html":{},"components/MainframeComponent.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{}}}],["spec\\.t",{"_index":1639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spender",{"_index":922,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["src/.../app.module.t",{"_index":1583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../connectweb3.service.t",{"_index":1588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":1585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":1582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../token",{"_index":1589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../token.service.t",{"_index":1586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tokens.t",{"_index":1581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../websocket.service.t",{"_index":1587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/account/account.component.t",{"_index":8,"title":{},"body":{"components/AccountComponent.html":{},"coverage.html":{}}}],["src/app/account/account.component.ts:12",{"_index":32,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/account/account.component.ts:15",{"_index":42,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/account/account.component.ts:18",{"_index":41,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/account/account.component.ts:23",{"_index":38,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/answ",{"_index":214,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{},"coverage.html":{}}}],["src/app/app.component.t",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":397,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":396,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:9",{"_index":395,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":421,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/dialogs/dialog",{"_index":748,"title":{},"body":{"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"coverage.html":{}}}],["src/app/directives/autofocus.directive.t",{"_index":544,"title":{},"body":{"directives/AutofocusDirective.html":{},"coverage.html":{}}}],["src/app/directives/autofocus.directive.ts:11",{"_index":552,"title":{},"body":{"directives/AutofocusDirective.html":{}}}],["src/app/directives/autofocus.directive.ts:6",{"_index":550,"title":{},"body":{"directives/AutofocusDirective.html":{}}}],["src/app/directives/focus.directive.t",{"_index":987,"title":{},"body":{"directives/FocusDirective.html":{},"coverage.html":{}}}],["src/app/directives/focus.directive.ts:12",{"_index":994,"title":{},"body":{"directives/FocusDirective.html":{}}}],["src/app/directives/focus.directive.ts:15",{"_index":993,"title":{},"body":{"directives/FocusDirective.html":{}}}],["src/app/directives/focus.directive.ts:19",{"_index":992,"title":{},"body":{"directives/FocusDirective.html":{}}}],["src/app/directives/focus.directive.ts:8",{"_index":991,"title":{},"body":{"directives/FocusDirective.html":{}}}],["src/app/error/error.component.t",{"_index":978,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["src/app/error/error.component.ts:12",{"_index":982,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/error/error.component.ts:8",{"_index":981,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/find",{"_index":1507,"title":{},"body":{"coverage.html":{}}}],["src/app/get",{"_index":998,"title":{},"body":{"components/GetOrderComponent.html":{},"coverage.html":{}}}],["src/app/initi",{"_index":1078,"title":{},"body":{"components/InitialPageComponent.html":{},"coverage.html":{}}}],["src/app/mainframe/mainframe.component.t",{"_index":1093,"title":{},"body":{"components/MainframeComponent.html":{},"coverage.html":{}}}],["src/app/mainframe/mainframe.component.ts:118",{"_index":1124,"title":{},"body":{"components/MainframeComponent.html":{}}}],["src/app/mainframe/mainframe.component.ts:122",{"_index":1125,"title":{},"body":{"components/MainframeComponent.html":{}}}],["src/app/mainframe/mainframe.component.ts:138",{"_index":1122,"title":{},"body":{"components/MainframeComponent.html":{}}}],["src/app/mainframe/mainframe.component.ts:34",{"_index":1133,"title":{},"body":{"components/MainframeComponent.html":{}}}],["src/app/mainframe/mainframe.component.ts:35",{"_index":1130,"title":{},"body":{"components/MainframeComponent.html":{}}}],["src/app/mainframe/mainframe.component.ts:37",{"_index":1132,"title":{},"body":{"components/MainframeComponent.html":{}}}],["src/app/mainframe/mainframe.component.ts:38",{"_index":1129,"title":{},"body":{"components/MainframeComponent.html":{}}}],["src/app/mainframe/mainframe.component.ts:40",{"_index":1134,"title":{},"body":{"components/MainframeComponent.html":{}}}],["src/app/mainframe/mainframe.component.ts:41",{"_index":1131,"title":{},"body":{"components/MainframeComponent.html":{}}}],["src/app/mainframe/mainframe.component.ts:43",{"_index":1114,"title":{},"body":{"components/MainframeComponent.html":{}}}],["src/app/mainframe/mainframe.component.ts:51",{"_index":1126,"title":{},"body":{"components/MainframeComponent.html":{}}}],["src/app/mainframe/mainframe.component.ts:52",{"_index":1127,"title":{},"body":{"components/MainframeComponent.html":{}}}],["src/app/mainframe/mainframe.component.ts:53",{"_index":1128,"title":{},"body":{"components/MainframeComponent.html":{}}}],["src/app/mainframe/mainframe.component.ts:56",{"_index":1135,"title":{},"body":{"components/MainframeComponent.html":{}}}],["src/app/mainframe/mainframe.component.ts:57",{"_index":1136,"title":{},"body":{"components/MainframeComponent.html":{}}}],["src/app/mainframe/mainframe.component.ts:61",{"_index":1120,"title":{},"body":{"components/MainframeComponent.html":{}}}],["src/app/mainframe/mainframe.component.ts:66",{"_index":1119,"title":{},"body":{"components/MainframeComponent.html":{}}}],["src/app/mainframe/mainframe.component.ts:72",{"_index":1116,"title":{},"body":{"components/MainframeComponent.html":{}}}],["src/app/mainframe/mainframe.component.ts:88",{"_index":1118,"title":{},"body":{"components/MainframeComponent.html":{}}}],["src/app/mainframe/mainframe.component.ts:98",{"_index":1117,"title":{},"body":{"components/MainframeComponent.html":{}}}],["src/app/messag",{"_index":720,"title":{},"body":{"components/DialogAddPeerComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/MessageSystemComponent.html":{},"coverage.html":{}}}],["src/app/mi",{"_index":1266,"title":{},"body":{"components/MyAccountComponent.html":{},"coverage.html":{}}}],["src/app/ng",{"_index":1304,"title":{},"body":{"modules/NgMaterialModule.html":{}}}],["src/app/pipes/callback.t",{"_index":554,"title":{},"body":{"pipes/CallbackPipe.html":{},"coverage.html":{}}}],["src/app/pipes/callback.ts:8",{"_index":559,"title":{},"body":{"pipes/CallbackPipe.html":{}}}],["src/app/pipes/round.t",{"_index":1367,"title":{},"body":{"pipes/RoundPipe.html":{},"coverage.html":{}}}],["src/app/pipes/round.ts:5",{"_index":1371,"title":{},"body":{"pipes/RoundPipe.html":{}}}],["src/app/services/airswapdex.service.t",{"_index":116,"title":{},"body":{"injectables/AirswapdexService.html":{},"coverage.html":{}}}],["src/app/services/airswapdex.service.ts:111",{"_index":123,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["src/app/services/airswapdex.service.ts:115",{"_index":176,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["src/app/services/airswapdex.service.ts:12",{"_index":172,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["src/app/services/airswapdex.service.ts:122",{"_index":142,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["src/app/services/airswapdex.service.ts:130",{"_index":148,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["src/app/services/airswapdex.service.ts:134",{"_index":145,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["src/app/services/airswapdex.service.ts:138",{"_index":137,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["src/app/services/airswapdex.service.ts:15",{"_index":170,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["src/app/services/column",{"_index":564,"title":{},"body":{"injectables/ColumnSpaceObserverService.html":{},"coverage.html":{}}}],["src/app/services/connection.service.t",{"_index":702,"title":{},"body":{"injectables/ConnectionService.html":{},"coverage.html":{}}}],["src/app/services/connection.service.ts:10",{"_index":711,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:16",{"_index":712,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:17",{"_index":713,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:18",{"_index":707,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:22",{"_index":715,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connectweb3.service.t",{"_index":588,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/connectweb3.service.ts:106",{"_index":609,"title":{},"body":{"injectables/ConnectWeb3Service.html":{}}}],["src/app/services/connectweb3.service.ts:123",{"_index":610,"title":{},"body":{"injectables/ConnectWeb3Service.html":{}}}],["src/app/services/connectweb3.service.ts:127",{"_index":606,"title":{},"body":{"injectables/ConnectWeb3Service.html":{}}}],["src/app/services/connectweb3.service.ts:134",{"_index":608,"title":{},"body":{"injectables/ConnectWeb3Service.html":{}}}],["src/app/services/connectweb3.service.ts:16",{"_index":611,"title":{},"body":{"injectables/ConnectWeb3Service.html":{}}}],["src/app/services/connectweb3.service.ts:17",{"_index":617,"title":{},"body":{"injectables/ConnectWeb3Service.html":{}}}],["src/app/services/connectweb3.service.ts:19",{"_index":613,"title":{},"body":{"injectables/ConnectWeb3Service.html":{}}}],["src/app/services/connectweb3.service.ts:20",{"_index":616,"title":{},"body":{"injectables/ConnectWeb3Service.html":{}}}],["src/app/services/connectweb3.service.ts:21",{"_index":612,"title":{},"body":{"injectables/ConnectWeb3Service.html":{}}}],["src/app/services/connectweb3.service.ts:23",{"_index":614,"title":{},"body":{"injectables/ConnectWeb3Service.html":{}}}],["src/app/services/connectweb3.service.ts:24",{"_index":615,"title":{},"body":{"injectables/ConnectWeb3Service.html":{}}}],["src/app/services/connectweb3.service.ts:25",{"_index":603,"title":{},"body":{"injectables/ConnectWeb3Service.html":{}}}],["src/app/services/connectweb3.service.ts:31",{"_index":620,"title":{},"body":{"injectables/ConnectWeb3Service.html":{}}}],["src/app/services/connectweb3.service.ts:38",{"_index":622,"title":{},"body":{"injectables/ConnectWeb3Service.html":{}}}],["src/app/services/connectweb3.service.ts:42",{"_index":625,"title":{},"body":{"injectables/ConnectWeb3Service.html":{}}}],["src/app/services/connectweb3.service.ts:46",{"_index":604,"title":{},"body":{"injectables/ConnectWeb3Service.html":{}}}],["src/app/services/connectweb3.service.ts:81",{"_index":605,"title":{},"body":{"injectables/ConnectWeb3Service.html":{}}}],["src/app/services/erc20.service.t",{"_index":914,"title":{},"body":{"injectables/Erc20Service.html":{},"coverage.html":{}}}],["src/app/services/erc20.service.ts:121",{"_index":920,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["src/app/services/erc20.service.ts:128",{"_index":931,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["src/app/services/erc20.service.ts:133",{"_index":936,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["src/app/services/erc20.service.ts:151",{"_index":929,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["src/app/services/erc20.service.ts:156",{"_index":927,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["src/app/services/erc20.service.ts:168",{"_index":935,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["src/app/services/erc20.service.ts:175",{"_index":933,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["src/app/services/erc20.service.ts:183",{"_index":925,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["src/app/services/erc20.service.ts:190",{"_index":923,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["src/app/services/erc20.service.ts:9",{"_index":957,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["src/app/services/firebase.service.t",{"_index":1517,"title":{},"body":{"coverage.html":{}}}],["src/app/services/get",{"_index":1041,"title":{},"body":{"injectables/GetOrderService.html":{},"coverage.html":{}}}],["src/app/services/messaging.service.t",{"_index":1519,"title":{},"body":{"coverage.html":{}}}],["src/app/services/ord",{"_index":1328,"title":{},"body":{"injectables/OrderRequestsService.html":{},"coverage.html":{}}}],["src/app/services/rout",{"_index":1375,"title":{},"body":{"injectables/RouterWebsocketActivatedService.html":{},"coverage.html":{}}}],["src/app/services/token",{"_index":1521,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/token.service.t",{"_index":1383,"title":{},"body":{"injectables/TokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/token.service.ts:102",{"_index":1400,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token.service.ts:107",{"_index":1393,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token.service.ts:16",{"_index":1404,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token.service.ts:17",{"_index":1403,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token.service.ts:19",{"_index":1392,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token.service.ts:26",{"_index":1395,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token.service.ts:45",{"_index":1399,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token.service.ts:64",{"_index":1397,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token.service.ts:91",{"_index":1402,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/tokens.t",{"_index":1523,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/us",{"_index":1418,"title":{},"body":{"injectables/UserOnlineService.html":{},"coverage.html":{}}}],["src/app/services/websocket.service.t",{"_index":1528,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/set",{"_index":1531,"title":{},"body":{"coverage.html":{}}}],["src/app/types/types.t",{"_index":1085,"title":{},"body":{"interfaces/LoggedInUser.html":{},"interfaces/Message.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"coverage.html":{}}}],["src/app/verifi",{"_index":1440,"title":{},"body":{"components/VerifyUserComponent.html":{},"coverage.html":{}}}],["src/app/who",{"_index":1459,"title":{},"body":{"components/WhosOnlineComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":1535,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1536,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":1537,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stand",{"_index":1154,"title":{},"body":{"components/MainframeComponent.html":{}}}],["start",{"_index":1155,"title":{"index.html":{}},"body":{"components/MainframeComponent.html":{}}}],["state",{"_index":1146,"title":{},"body":{"components/MainframeComponent.html":{}}}],["statement",{"_index":1498,"title":{},"body":{"coverage.html":{}}}],["statemut",{"_index":161,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["storagebucket",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":907,"title":{},"body":{"components/DialogSendOfflineComponent.html":{}}}],["storedmessag",{"_index":1088,"title":{"interfaces/StoredMessage.html":{}},"body":{"interfaces/LoggedInUser.html":{},"interfaces/Message.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"coverage.html":{}}}],["string",{"_index":125,"title":{},"body":{"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"injectables/ConnectWeb3Service.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"injectables/Erc20Service.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"interfaces/LoggedInUser.html":{},"components/MainframeComponent.html":{},"interfaces/Message.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/Order.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{},"components/VerifyUserComponent.html":{},"interfaces/Window.html":{},"miscellaneous/variables.html":{}}}],["stringisvalidnumb",{"_index":841,"title":{},"body":{"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{}}}],["stringisvalidnumber(x",{"_index":856,"title":{},"body":{"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{}}}],["style=\"width",{"_index":1255,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["styleurl",{"_index":16,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/Order.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["subscrib",{"_index":1062,"title":{},"body":{"injectables/GetOrderService.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{}}}],["subscribe((chang",{"_index":578,"title":{},"body":{"injectables/ColumnSpaceObserverService.html":{}}}],["subscribe(messag",{"_index":1022,"title":{},"body":{"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{}}}],["subscript",{"_index":262,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{},"interfaces/Order.html":{}}}],["succeed",{"_index":1162,"title":{},"body":{"components/MainframeComponent.html":{}}}],["success",{"_index":939,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["sum_unread",{"_index":1182,"title":{},"body":{"components/MainframeComponent.html":{}}}],["support",{"_index":1572,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1573,"title":{},"body":{"modules.html":{}}}],["swapwatch",{"_index":1194,"title":{},"body":{"components/MainframeComponent.html":{}}}],["symbol",{"_index":814,"title":{},"body":{"components/DialogAddTokenComponent.html":{},"injectables/Erc20Service.html":{},"interfaces/LoggedInUser.html":{},"interfaces/Message.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"miscellaneous/variables.html":{}}}],["symbol(contract",{"_index":934,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["system",{"_index":1211,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["system'},{'nam",{"_index":97,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["system.compon",{"_index":463,"title":{},"body":{"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/MainframeComponent.html":{}}}],["system.component.html",{"_index":1213,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["system.component.scss",{"_index":1212,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["system.component.t",{"_index":1210,"title":{},"body":{"components/MessageSystemComponent.html":{},"coverage.html":{}}}],["system.component.ts:24",{"_index":1229,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["system.component.ts:26",{"_index":1221,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["system.component.ts:30",{"_index":1230,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["system.component.ts:32",{"_index":1231,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["system.component.ts:35",{"_index":1228,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["system.component.ts:37",{"_index":1224,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["system.component.ts:42",{"_index":1223,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["system.component.ts:48",{"_index":1227,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["system.component.ts:55",{"_index":1225,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["system.component.ts:70",{"_index":1226,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["system.component.ts:78",{"_index":1222,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["system/dialog",{"_index":488,"title":{},"body":{"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogSendOfflineComponent.html":{},"coverage.html":{}}}],["system/messag",{"_index":462,"title":{},"body":{"modules/AppModule.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"coverage.html":{}}}],["tabl",{"_index":1540,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1539,"title":{},"body":{"coverage.html":{}}}],["takeraddress",{"_index":128,"title":{},"body":{"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["takeramount",{"_index":129,"title":{},"body":{"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["takerhasenough",{"_index":230,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["takerhasenough(ord",{"_index":248,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["takerprop",{"_index":879,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["takertoken",{"_index":130,"title":{},"body":{"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{},"interfaces/Order.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/Order.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["text",{"_index":1233,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["then((connect",{"_index":1161,"title":{},"body":{"components/MainframeComponent.html":{}}}],["then((customtoken",{"_index":1415,"title":{},"body":{"injectables/TokenService.html":{}}}],["then((peer",{"_index":1486,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["then((signedmessag",{"_index":308,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["then(account",{"_index":651,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["then(addedtoken",{"_index":790,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["then(alia",{"_index":1073,"title":{},"body":{"injectables/GetOrderService.html":{},"injectables/OrderRequestsService.html":{}}}],["then(approvedamount",{"_index":967,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["then(bal",{"_index":965,"title":{},"body":{"injectables/Erc20Service.html":{},"injectables/OrderRequestsService.html":{}}}],["then(connect",{"_index":642,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["then(decim",{"_index":816,"title":{},"body":{"components/DialogAddTokenComponent.html":{},"injectables/Erc20Service.html":{}}}],["then(estimatedga",{"_index":974,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["then(fullord",{"_index":332,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["then(nam",{"_index":810,"title":{},"body":{"components/DialogAddTokenComponent.html":{},"injectables/Erc20Service.html":{}}}],["then(network",{"_index":646,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["then(peer",{"_index":1246,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["then(r",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["then(respons",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["then(symbol",{"_index":813,"title":{},"body":{"components/DialogAddTokenComponent.html":{},"injectables/Erc20Service.html":{}}}],["then(token",{"_index":802,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["this._web3",{"_index":633,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["this.abi",{"_index":958,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["this.acceptaliaschang",{"_index":1288,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["this.accountconnect",{"_index":638,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["this.afauth.auth.onauthstatechanged((us",{"_index":1143,"title":{},"body":{"components/MainframeComponent.html":{}}}],["this.airswapdexabi",{"_index":190,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["this.airswapdexaddress",{"_index":191,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["this.airswapdexservice.fil",{"_index":342,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{},"interfaces/Order.html":{}}}],["this.authus",{"_index":1137,"title":{},"body":{"components/MainframeComponent.html":{}}}],["this.buttonverb",{"_index":1290,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["this.checkedtoken",{"_index":794,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["this.connect",{"_index":636,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["this.connected_to",{"_index":671,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["this.connected_to_network",{"_index":691,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["this.connectedaccount",{"_index":699,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["this.connectionestablish",{"_index":664,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["this.connectioniniti",{"_index":1156,"title":{},"body":{"components/MainframeComponent.html":{}}}],["this.connectionservice.connect",{"_index":1153,"title":{},"body":{"components/MainframeComponent.html":{},"injectables/RouterWebsocketActivatedService.html":{}}}],["this.connectionservice.firebaseconnect",{"_index":1149,"title":{},"body":{"components/MainframeComponent.html":{}}}],["this.connectionservice.loggedinuser.address",{"_index":658,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["this.connectionservice.loggedinuser.alia",{"_index":1150,"title":{},"body":{"components/MainframeComponent.html":{},"components/MyAccountComponent.html":{}}}],["this.connectionservice.loggedinuser.uid",{"_index":1152,"title":{},"body":{"components/MainframeComponent.html":{}}}],["this.connectionservice.loggedinuser.wsaddress",{"_index":659,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["this.connectionservice.web3connect",{"_index":663,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["this.connectionservice.wsconnect",{"_index":660,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["this.connecttonod",{"_index":634,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["this.correctnetwork",{"_index":637,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["this.customtoken",{"_index":1416,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.customtokens.find(x",{"_index":1408,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.data.address",{"_index":867,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["this.decimals(contract",{"_index":969,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["this.desirednetwork",{"_index":649,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["this.devicesizenumb",{"_index":581,"title":{},"body":{"injectables/ColumnSpaceObserverService.html":{}}}],["this.dialog.open(dialogaddpeercompon",{"_index":1240,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["this.dialogref.clos",{"_index":868,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["this.dialogref.close('cancel",{"_index":743,"title":{},"body":{"components/DialogAddPeerComponent.html":{}}}],["this.dialogref.close(fals",{"_index":781,"title":{},"body":{"components/DialogAddTokenComponent.html":{},"components/DialogSendOfflineComponent.html":{}}}],["this.dialogref.close(this.peeraddress",{"_index":744,"title":{},"body":{"components/DialogAddPeerComponent.html":{}}}],["this.dialogref.close(tru",{"_index":782,"title":{},"body":{"components/DialogAddTokenComponent.html":{},"components/DialogSendOfflineComponent.html":{}}}],["this.dialogref.close(uuid",{"_index":869,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["this.displayedpeopl",{"_index":1491,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["this.el.nativeelement.focu",{"_index":553,"title":{},"body":{"directives/AutofocusDirective.html":{}}}],["this.element.nativeelement.focu",{"_index":997,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.erc20service.balance(order.makertoken",{"_index":1362,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["this.erc20service.balance(order.takertoken",{"_index":1364,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["this.erc20service.decimals(contract",{"_index":815,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["this.erc20service.getcontract(this.tokenaddress",{"_index":806,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["this.erc20service.name(contract",{"_index":809,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["this.erc20service.symbol(contract",{"_index":812,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["this.errormessag",{"_index":797,"title":{},"body":{"components/DialogAddTokenComponent.html":{},"components/MyAccountComponent.html":{}}}],["this.expir",{"_index":295,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["this.firebaseconnect",{"_index":719,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["this.firebaseservice.addpeerasfriend(this.messageservice.selectedpeer.uid",{"_index":1254,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["this.firebaseservice.addtoken",{"_index":785,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["this.firebaseservice.deleteus",{"_index":1293,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["this.firebaseservice.gettokenfromdatabase(this.tokenaddress",{"_index":801,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["this.firebaseservice.gettokenlistfromdatabas",{"_index":1414,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.firebaseservice.getuseraliasfromaddress(order.takeraddress",{"_index":1360,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["this.firebaseservice.getuseraliasfromaddress(signedorder.makeraddress",{"_index":1072,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["this.firebaseservice.lasttimeloadeduserlist",{"_index":1490,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["this.firebaseservice.logoffus",{"_index":1292,"title":{},"body":{"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{}}}],["this.firebaseservice.readuserlist",{"_index":1173,"title":{},"body":{"components/MainframeComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["this.firebaseservice.registerus",{"_index":1169,"title":{},"body":{"components/MainframeComponent.html":{}}}],["this.firebaseservice.updatename(this.newalia",{"_index":1291,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["this.firebaseservice.user.email",{"_index":1456,"title":{},"body":{"components/VerifyUserComponent.html":{}}}],["this.firebaseservice.user.emailverifi",{"_index":1163,"title":{},"body":{"components/MainframeComponent.html":{}}}],["this.firebaseservice.user.sendemailverif",{"_index":1451,"title":{},"body":{"components/VerifyUserComponent.html":{}}}],["this.firebaseservice.userisverifi",{"_index":1164,"title":{},"body":{"components/MainframeComponent.html":{}}}],["this.firebaseservice.whosonlinelist.slic",{"_index":1492,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["this.getaccount",{"_index":650,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["this.getcontract(tokenaddress",{"_index":961,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["this.getnetworkid",{"_index":644,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["this.getorderservice.countorderrespons",{"_index":1180,"title":{},"body":{"components/MainframeComponent.html":{}}}],["this.getorderservice.orderrespons",{"_index":343,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["this.getorderservice.orderresponses.filt",{"_index":344,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["this.isconnect",{"_index":641,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["this.isuserlisted(user.uid",{"_index":1433,"title":{},"body":{"injectables/UserOnlineService.html":{}}}],["this.lastupdateofcustomtoken",{"_index":1412,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.makeramount",{"_index":1020,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["this.makerhasenough",{"_index":876,"title":{},"body":{"components/DialogGetOrderComponent.html":{}}}],["this.makertoken",{"_index":1012,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["this.makertoken.address",{"_index":1017,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["this.makertoken.decim",{"_index":1014,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["this.messag",{"_index":1249,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["this.message.trim().length",{"_index":1250,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["this.messageservice.checkonlinestatusofpeerlist",{"_index":1239,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["this.messageservice.getpeerandadd(user.uid",{"_index":1485,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["this.messageservice.getpeerandaddbyaddress(result",{"_index":1245,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["this.messageservice.selectedp",{"_index":1237,"title":{},"body":{"components/MessageSystemComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["this.messageservice.selectedpeer.messagehistory.length",{"_index":1258,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["this.messageservice.selectedpeer.uid",{"_index":1253,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["this.messageservice.sendingmessag",{"_index":1251,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["this.messageservice.sendmessage(this.message.trim",{"_index":1252,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["this.messageservice.setmessageread",{"_index":1238,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["this.messageservice.showmesseng",{"_index":1174,"title":{},"body":{"components/MainframeComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["this.messageservice.startmesseng",{"_index":1172,"title":{},"body":{"components/MainframeComponent.html":{}}}],["this.messageservice.unreadmessag",{"_index":1176,"title":{},"body":{"components/MainframeComponent.html":{}}}],["this.messagingservice.showmesseng",{"_index":587,"title":{},"body":{"injectables/ColumnSpaceObserverService.html":{}}}],["this.newalia",{"_index":1289,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["this.numunreadansw",{"_index":1178,"title":{},"body":{"components/MainframeComponent.html":{}}}],["this.numunreadmessag",{"_index":1175,"title":{},"body":{"components/MainframeComponent.html":{}}}],["this.onclosecancel",{"_index":793,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["this.oncloseconfirm",{"_index":792,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["this.orderrequests.length",{"_index":1342,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["this.orderrequests.push(ord",{"_index":1366,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["this.orderrequestsservice.openrequest",{"_index":1179,"title":{},"body":{"components/MainframeComponent.html":{}}}],["this.orderrespons",{"_index":1031,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["this.orderresponses.filt",{"_index":1032,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["this.orderresponses.length",{"_index":1077,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["this.orderresponses.push(signedord",{"_index":1075,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["this.orderresponses.unshift(signedord",{"_index":1030,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["this.orderservice.orderrequest",{"_index":335,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["this.orderservice.orderrequests.filt",{"_index":336,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["this.pad(makeraddress.slice(2",{"_index":200,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["this.pad(makertoken.slice(2",{"_index":203,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["this.pad(r.slice(2",{"_index":210,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["this.pad(s.slice(2",{"_index":211,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["this.pad(takeraddress.slice(2",{"_index":204,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["this.pad(takertoken.slice(2",{"_index":206,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["this.pad(this.tohex(expiration).slice(2",{"_index":207,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["this.pad(this.tohex(makeramount).slice(2",{"_index":202,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["this.pad(this.tohex(nonce).slice(2",{"_index":208,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["this.pad(this.tohex(takeramount).slice(2",{"_index":205,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["this.pad(this.tohex(v).slice(2",{"_index":209,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["this.pageindex",{"_index":1487,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["this.pages",{"_index":1493,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["this.receiv",{"_index":866,"title":{},"body":{"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{}}}],["this.refresh",{"_index":1484,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["this.renderer.invokeelementmethod(this.element.nativeel",{"_index":996,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.responsemessag",{"_index":1453,"title":{},"body":{"components/VerifyUserComponent.html":{}}}],["this.router.navig",{"_index":1382,"title":{},"body":{"injectables/RouterWebsocketActivatedService.html":{}}}],["this.sendmail",{"_index":1452,"title":{},"body":{"components/VerifyUserComponent.html":{}}}],["this.sentorders[uuid",{"_index":1056,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["this.settitl",{"_index":1183,"title":{},"body":{"components/MainframeComponent.html":{}}}],["this.settitle('airswapchat",{"_index":1185,"title":{},"body":{"components/MainframeComponent.html":{}}}],["this.showanswerbadg",{"_index":1181,"title":{},"body":{"components/MainframeComponent.html":{}}}],["this.showmessagebadg",{"_index":1177,"title":{},"body":{"components/MainframeComponent.html":{}}}],["this.sign_order(ord",{"_index":331,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["this.takeramount[order.id",{"_index":287,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["this.takerhasenough(ord",{"_index":322,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["this.takertoken",{"_index":1013,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["this.takertoken.address",{"_index":1018,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["this.tim",{"_index":50,"title":{},"body":{"components/AccountComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{}}}],["this.timer.subscrib",{"_index":53,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.timer.unsubscrib",{"_index":55,"title":{},"body":{"components/AccountComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{}}}],["this.titleservice.settitl",{"_index":1186,"title":{},"body":{"components/MainframeComponent.html":{}}}],["this.tofixed(1e21",{"_index":971,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["this.tofixed(order['makeramount",{"_index":327,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["this.tofixed(order['takeramount",{"_index":326,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["this.tokenaddress",{"_index":786,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["this.tokenaddress.trim",{"_index":795,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["this.tokendecim",{"_index":789,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["this.tokenisvalid",{"_index":784,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["this.tokennam",{"_index":787,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["this.tokenservice.getcustomtokenlistfromdb",{"_index":1168,"title":{},"body":{"components/MainframeComponent.html":{}}}],["this.tokenservice.gettokenandwhetheritsvalid(order.makertoken",{"_index":1344,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["this.tokenservice.gettokenandwhetheritsvalid(order.takertoken",{"_index":1346,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["this.tokenservice.getvalidatedtoken",{"_index":1139,"title":{},"body":{"components/MainframeComponent.html":{}}}],["this.tokensymbol",{"_index":788,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["this.updatedisplayedpeopl",{"_index":1489,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["this.updatenumb",{"_index":1167,"title":{},"body":{"components/MainframeComponent.html":{}}}],["this.updatestatu",{"_index":1236,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["this.users[uid",{"_index":1438,"title":{},"body":{"injectables/UserOnlineService.html":{}}}],["this.users[user.address",{"_index":1437,"title":{},"body":{"injectables/UserOnlineService.html":{}}}],["this.users[user.uid",{"_index":1434,"title":{},"body":{"injectables/UserOnlineService.html":{}}}],["this.usersbyaddress[address",{"_index":1439,"title":{},"body":{"injectables/UserOnlineService.html":{}}}],["this.validatedtoken",{"_index":1411,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.wantstochangealia",{"_index":1287,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["this.web3",{"_index":669,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["this.web3.eth.getaccounts().then(result",{"_index":698,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["this.web3.eth.getbalance(account).then(result",{"_index":701,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["this.web3.eth.net.getid().then(id",{"_index":689,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["this.web3.eth.net.islisten",{"_index":697,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["this.web3.vers",{"_index":688,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["this.web3connect",{"_index":717,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["this.web3service.checkconnect",{"_index":54,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.web3service.connectedaccount",{"_index":57,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"injectables/Erc20Service.html":{},"interfaces/Order.html":{}}}],["this.web3service.connectedaccount.tolowercas",{"_index":1019,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["this.web3service.desirednetwork",{"_index":60,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.web3service.getbalance(address",{"_index":960,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["this.web3service.web3.eth.accounts.hashmessage(hashv",{"_index":306,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["this.web3service.web3.eth.contract",{"_index":189,"title":{},"body":{"injectables/AirswapdexService.html":{},"injectables/Erc20Service.html":{}}}],["this.web3service.web3.eth.sendtransact",{"_index":212,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["this.web3service.web3.eth.sign(prefixedhash",{"_index":307,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["this.web3service.web3.utils.hextonumber('0x",{"_index":314,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["this.web3service.web3.utils.isaddress(result",{"_index":1244,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["this.web3service.web3.utils.isaddress(this.receiv",{"_index":1010,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["this.web3service.web3.utils.isaddress(this.tokenaddress",{"_index":796,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["this.web3service.web3.utils.soliditysha3",{"_index":298,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["this.websocketsubscript",{"_index":279,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{},"interfaces/Order.html":{}}}],["this.websocketsubscription.unsubscrib",{"_index":280,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{},"interfaces/Order.html":{}}}],["this.websocketsubscriptions[uuid",{"_index":1057,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["this.websocketsubscriptions[uuid].unsubscrib",{"_index":1076,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["this.wsconnect",{"_index":718,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["this.wsservice.getord",{"_index":1015,"title":{},"body":{"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{}}}],["this.wsservice.initsocket",{"_index":1159,"title":{},"body":{"components/MainframeComponent.html":{}}}],["this.wsservice.sendorder(order['takeraddress",{"_index":333,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["this.wsservice.websocketsubject",{"_index":1021,"title":{},"body":{"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{}}}],["time",{"_index":905,"title":{},"body":{"components/DialogSendOfflineComponent.html":{}}}],["timer",{"_index":23,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"interfaces/Order.html":{}}}],["timerobserv",{"_index":46,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"injectables/GetOrderService.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"interfaces/Order.html":{}}}],["timerobservable.create(0",{"_index":51,"title":{},"body":{"components/AccountComponent.html":{},"injectables/GetOrderService.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{}}}],["timestamp",{"_index":1087,"title":{},"body":{"interfaces/LoggedInUser.html":{},"interfaces/Message.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{}}}],["titl",{"_index":1113,"title":{},"body":{"components/MainframeComponent.html":{}}}],["titleservic",{"_index":1112,"title":{},"body":{"components/MainframeComponent.html":{}}}],["to",{"_index":539,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["tochecksum",{"_index":121,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["tochecksum(address",{"_index":144,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["tofix",{"_index":231,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"injectables/Erc20Service.html":{}}}],["tofixed(x",{"_index":251,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"injectables/Erc20Service.html":{},"interfaces/Order.html":{}}}],["togglemesseng",{"_index":1108,"title":{},"body":{"components/MainframeComponent.html":{}}}],["tohex",{"_index":122,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["tohex(num",{"_index":147,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["token",{"_index":179,"title":{"interfaces/Token.html":{}},"body":{"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"injectables/Erc20Service.html":{},"components/GetOrderComponent.html":{},"interfaces/LoggedInUser.html":{},"components/MainframeComponent.html":{},"interfaces/Message.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"injectables/TokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["token'},{'nam",{"_index":78,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["token.address.slice(0,8",{"_index":1034,"title":{},"body":{"components/GetOrderComponent.html":{}}}],["token.compon",{"_index":500,"title":{},"body":{"modules/AppModule.html":{}}}],["token.component.html",{"_index":751,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["token.component.scss",{"_index":750,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["token.component.t",{"_index":749,"title":{},"body":{"components/DialogAddTokenComponent.html":{},"coverage.html":{}}}],["token.component.ts:18",{"_index":775,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["token.component.ts:19",{"_index":778,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["token.component.ts:20",{"_index":779,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["token.component.ts:21",{"_index":776,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["token.component.ts:23",{"_index":772,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["token.component.ts:24",{"_index":777,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["token.component.ts:25",{"_index":763,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["token.component.ts:28",{"_index":774,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["token.component.ts:29",{"_index":773,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["token.component.ts:35",{"_index":768,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["token.component.ts:38",{"_index":771,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["token.component.ts:42",{"_index":770,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["token.component.ts:46",{"_index":769,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["token.component.ts:50",{"_index":767,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["token.component.ts:58",{"_index":764,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["token.component.ts:73",{"_index":765,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["token.nam",{"_index":1033,"title":{},"body":{"components/GetOrderComponent.html":{},"miscellaneous/variables.html":{}}}],["token.servic",{"_index":1339,"title":{},"body":{"injectables/OrderRequestsService.html":{}}}],["token/dialog",{"_index":499,"title":{},"body":{"modules/AppModule.html":{},"components/DialogAddTokenComponent.html":{},"coverage.html":{}}}],["tokenaddress",{"_index":754,"title":{},"body":{"components/DialogAddTokenComponent.html":{},"injectables/Erc20Service.html":{}}}],["tokendecim",{"_index":755,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["tokenindb",{"_index":803,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["tokenisvalid",{"_index":756,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["tokenlist",{"_index":835,"title":{},"body":{"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{}}}],["tokennam",{"_index":757,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["tokenservic",{"_index":416,"title":{"injectables/TokenService.html":{}},"body":{"modules/AppModule.html":{},"components/MainframeComponent.html":{},"injectables/OrderRequestsService.html":{},"injectables/TokenService.html":{},"coverage.html":{},"overview.html":{}}}],["tokensymbol",{"_index":758,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["top",{"_index":1570,"title":{},"body":{"index.html":{}}}],["totalsuppli",{"_index":940,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["touch",{"_index":826,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["trade",{"_index":352,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{},"components/MainframeComponent.html":{}}}],["transact",{"_index":388,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["transfer",{"_index":946,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["transferfrom",{"_index":943,"title":{},"body":{"injectables/Erc20Service.html":{}}}],["transform",{"_index":556,"title":{},"body":{"pipes/CallbackPipe.html":{},"pipes/RoundPipe.html":{}}}],["transform(item",{"_index":557,"title":{},"body":{"pipes/CallbackPipe.html":{}}}],["transform(valu",{"_index":1369,"title":{},"body":{"pipes/RoundPipe.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["tri",{"_index":984,"title":{},"body":{"components/ErrorComponent.html":{}}}],["trigger",{"_index":1144,"title":{},"body":{"components/MainframeComponent.html":{}}}],["true",{"_index":160,"title":{},"body":{"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"modules/AppModule.html":{},"components/DialogAddTokenComponent.html":{},"injectables/Erc20Service.html":{},"components/MainframeComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/Order.html":{},"injectables/RouterWebsocketActivatedService.html":{},"injectables/TokenService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":36,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"directives/AutofocusDirective.html":{},"pipes/CallbackPipe.html":{},"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectWeb3Service.html":{},"injectables/ConnectionService.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"injectables/Erc20Service.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"interfaces/LoggedInUser.html":{},"components/MainframeComponent.html":{},"interfaces/Message.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/Order.html":{},"injectables/OrderRequestsService.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"pipes/RoundPipe.html":{},"injectables/RouterWebsocketActivatedService.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":678,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["types/typ",{"_index":716,"title":{},"body":{"injectables/ConnectionService.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{},"components/MessageSystemComponent.html":{},"injectables/OrderRequestsService.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{}}}],["uid",{"_index":710,"title":{},"body":{"injectables/ConnectionService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/Message.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"injectables/UserOnlineService.html":{}}}],["uint256",{"_index":155,"title":{},"body":{"injectables/AirswapdexService.html":{},"injectables/Erc20Service.html":{}}}],["uint8",{"_index":156,"title":{},"body":{"injectables/AirswapdexService.html":{},"injectables/Erc20Service.html":{}}}],["uncheck",{"_index":824,"title":{},"body":{"components/DialogAddTokenComponent.html":{}}}],["undefin",{"_index":632,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"components/GetOrderComponent.html":{},"injectables/UserOnlineService.html":{},"interfaces/Window.html":{},"miscellaneous/variables.html":{}}}],["unencrypt",{"_index":908,"title":{},"body":{"components/DialogSendOfflineComponent.html":{}}}],["unknown",{"_index":696,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["unread",{"_index":1165,"title":{},"body":{"components/MainframeComponent.html":{}}}],["unreceiv",{"_index":1170,"title":{},"body":{"components/MainframeComponent.html":{}}}],["unvalid",{"_index":366,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["updatedisplayedpeopl",{"_index":1467,"title":{},"body":{"components/WhosOnlineComponent.html":{}}}],["updatenumb",{"_index":1109,"title":{},"body":{"components/MainframeComponent.html":{}}}],["updatestatu",{"_index":1217,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["upon",{"_index":1206,"title":{},"body":{"components/MainframeComponent.html":{}}}],["us",{"_index":684,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["user",{"_index":1086,"title":{},"body":{"interfaces/LoggedInUser.html":{},"components/MainframeComponent.html":{},"interfaces/Message.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{},"injectables/UserOnlineService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["user'},{'nam",{"_index":103,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["user.address",{"_index":1436,"title":{},"body":{"injectables/UserOnlineService.html":{},"components/WhosOnlineComponent.html":{}}}],["user.alia",{"_index":1435,"title":{},"body":{"injectables/UserOnlineService.html":{},"components/WhosOnlineComponent.html":{}}}],["user.compon",{"_index":502,"title":{},"body":{"modules/AppModule.html":{}}}],["user.component.html",{"_index":1443,"title":{},"body":{"components/VerifyUserComponent.html":{}}}],["user.component.scss",{"_index":1442,"title":{},"body":{"components/VerifyUserComponent.html":{}}}],["user.component.t",{"_index":1441,"title":{},"body":{"components/VerifyUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:11",{"_index":1450,"title":{},"body":{"components/VerifyUserComponent.html":{}}}],["user.component.ts:12",{"_index":1447,"title":{},"body":{"components/VerifyUserComponent.html":{}}}],["user.component.ts:17",{"_index":1448,"title":{},"body":{"components/VerifyUserComponent.html":{}}}],["user.component.ts:20",{"_index":1449,"title":{},"body":{"components/VerifyUserComponent.html":{}}}],["user.displaynam",{"_index":1151,"title":{},"body":{"components/MainframeComponent.html":{}}}],["user.uid",{"_index":1148,"title":{},"body":{"components/MainframeComponent.html":{},"injectables/UserOnlineService.html":{}}}],["user/verifi",{"_index":501,"title":{},"body":{"modules/AppModule.html":{},"components/VerifyUserComponent.html":{},"coverage.html":{}}}],["user_friend",{"_index":521,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["user_lik",{"_index":520,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["useronlineservic",{"_index":417,"title":{"injectables/UserOnlineService.html":{}},"body":{"modules/AppModule.html":{},"components/MainframeComponent.html":{},"injectables/UserOnlineService.html":{},"coverage.html":{},"overview.html":{}}}],["usersbyaddress",{"_index":1420,"title":{},"body":{"injectables/UserOnlineService.html":{}}}],["uuid",{"_index":328,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"interfaces/Order.html":{}}}],["uuidv4",{"_index":1530,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["v",{"_index":134,"title":{},"body":{"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"interfaces/Order.html":{}}}],["valid",{"_index":799,"title":{},"body":{"components/DialogAddTokenComponent.html":{},"components/MainframeComponent.html":{},"injectables/TokenService.html":{}}}],["validated.t",{"_index":1522,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validatedtoken",{"_index":1386,"title":{},"body":{"injectables/TokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validatedtokens.find(x",{"_index":1406,"title":{},"body":{"injectables/TokenService.html":{}}}],["validtoken",{"_index":804,"title":{},"body":{"components/DialogAddTokenComponent.html":{},"injectables/TokenService.html":{}}}],["valu",{"_index":150,"title":{},"body":{"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"injectables/ColumnSpaceObserverService.html":{},"injectables/ConnectWeb3Service.html":{},"injectables/ConnectionService.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"injectables/Erc20Service.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"injectables/OrderRequestsService.html":{},"pipes/RoundPipe.html":{},"injectables/TokenService.html":{},"injectables/UserOnlineService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":65,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"injectables/ConnectWeb3Service.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"interfaces/Window.html":{}}}],["variabl",{"_index":1502,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["verif",{"_index":1458,"title":{},"body":{"components/VerifyUserComponent.html":{}}}],["verifi",{"_index":102,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["verifyusercompon",{"_index":101,"title":{"components/VerifyUserComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["version",{"_index":687,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"injectables/Erc20Service.html":{},"interfaces/Window.html":{}}}],["via",{"_index":640,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["view",{"_index":163,"title":{},"body":{"injectables/AirswapdexService.html":{}}}],["visibl",{"_index":1199,"title":{},"body":{"components/MainframeComponent.html":{}}}],["void",{"_index":40,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"directives/AutofocusDirective.html":{},"pipes/CallbackPipe.html":{},"injectables/ConnectWeb3Service.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/Order.html":{},"injectables/OrderRequestsService.html":{},"injectables/UserOnlineService.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"interfaces/Window.html":{}}}],["vysktarxazkx7rq9gwjtfim",{"_index":1643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wallet",{"_index":361,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["want",{"_index":370,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/MyAccountComponent.html":{}}}],["wantstochangealia",{"_index":1271,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["warn",{"_index":364,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["web3",{"_index":618,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["web3('http://localhost:8545",{"_index":674,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["web3(this.web3.currentprovid",{"_index":683,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["web3(web3",{"_index":635,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["web3(window.web3.currentprovid",{"_index":670,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["web3connect",{"_index":705,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["web3servic",{"_index":24,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AirswapdexService.html":{},"components/AnswerOrdersComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"injectables/Erc20Service.html":{},"components/GetOrderComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"interfaces/Order.html":{},"injectables/OrderRequestsService.html":{}}}],["websocket",{"_index":480,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConnectWeb3Service.html":{},"components/ErrorComponent.html":{},"components/MainframeComponent.html":{},"injectables/RouterWebsocketActivatedService.html":{},"interfaces/Window.html":{},"coverage.html":{}}}],["websocket.servic",{"_index":1053,"title":{},"body":{"injectables/GetOrderService.html":{}}}],["websocketservic",{"_index":235,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"modules/AppModule.html":{},"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"interfaces/Order.html":{},"coverage.html":{},"overview.html":{}}}],["websocketsubscript",{"_index":224,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"interfaces/Order.html":{}}}],["whether",{"_index":652,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["who",{"_index":105,"title":{},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{}}}],["whosonlin",{"_index":507,"title":{},"body":{"modules/AppModule.html":{}}}],["whosonlinecompon",{"_index":104,"title":{"components/WhosOnlineComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AnswerOrdersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddPeerComponent.html":{},"components/DialogAddTokenComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/DialogSendOfflineComponent.html":{},"components/ErrorComponent.html":{},"components/GetOrderComponent.html":{},"components/InitialPageComponent.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"components/MyAccountComponent.html":{},"components/VerifyUserComponent.html":{},"components/WhosOnlineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["width",{"_index":1241,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["window",{"_index":630,"title":{"interfaces/Window.html":{}},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{},"coverage.html":{}}}],["window.web3",{"_index":631,"title":{},"body":{"injectables/ConnectWeb3Service.html":{},"interfaces/Window.html":{}}}],["write",{"_index":910,"title":{},"body":{"components/DialogSendOfflineComponent.html":{}}}],["wsaddress",{"_index":709,"title":{},"body":{"injectables/ConnectionService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/Message.html":{},"interfaces/OtherUser.html":{},"interfaces/Peer.html":{},"interfaces/StoredMessage.html":{},"interfaces/Token.html":{}}}],["wsconnect",{"_index":706,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["wsservic",{"_index":225,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/DialogGetOrderComponent.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"components/MainframeComponent.html":{},"components/MessageSystemComponent.html":{},"interfaces/Order.html":{}}}],["wsservice.infomessag",{"_index":1207,"title":{},"body":{"components/MainframeComponent.html":{}}}],["x",{"_index":253,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/DialogGetOrderComponent.html":{},"injectables/Erc20Service.html":{},"components/GetOrderComponent.html":{},"interfaces/Order.html":{}}}],["x.address",{"_index":1407,"title":{},"body":{"injectables/TokenService.html":{}}}],["x.id",{"_index":337,"title":{},"body":{"components/AnswerOrdersComponent.html":{},"components/GetOrderComponent.html":{},"injectables/GetOrderService.html":{},"interfaces/Order.html":{}}}],["x.name",{"_index":1409,"title":{},"body":{"injectables/TokenService.html":{}}}],["xs",{"_index":580,"title":{},"body":{"injectables/ColumnSpaceObserverService.html":{}}}],["you'd",{"_index":745,"title":{},"body":{"components/DialogAddPeerComponent.html":{}}}],["you\\'d",{"_index":747,"title":{},"body":{"components/DialogAddPeerComponent.html":{}}}],["your",{"_index":356,"title":{},"body":{"components/AnswerOrdersComponent.html":{}}}],["yourself",{"_index":1198,"title":{},"body":{"components/MainframeComponent.html":{}}}],["zone",{"_index":1218,"title":{},"body":{"components/MessageSystemComponent.html":{}}}],["zone.j",{"_index":1563,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":418,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["zrx",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccountComponent.html":{"url":"components/AccountComponent.html","title":"component - AccountComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccountComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/account/account.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-account\n            \n\n            \n                styleUrls\n                account.component.css\n            \n\n\n\n            \n                templateUrl\n                ./account.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                timer\n                            \n                            \n                                    Public\n                                web3service\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(web3service: ConnectWeb3Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/account/account.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        web3service\n                                                  \n                                                        \n                                                                    ConnectWeb3Service\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/account/account.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/account/account.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timer:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account/account.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            web3service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        web3service:     ConnectWeb3Service\n\n                    \n                \n                    \n                        \n                            Type :     ConnectWeb3Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account/account.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ConnectWeb3Service } from '../services/connectWeb3.service';\nimport { TimerObservable } from 'rxjs/observable/TimerObservable';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit, OnDestroy {\n\n  public timer: any;\n\n  constructor(\n    public web3service: ConnectWeb3Service,\n  ) { }\n\n  ngOnInit() {\n    this.timer = TimerObservable.create(0, 3000);\n    this.timer.subscribe( () => this.web3service.checkConnection());\n  }\n\n  ngOnDestroy() {\n    if (this.timer) {\n      this.timer.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  check Account: {{this.web3service.connectedAccount}}\n\n\n  Login with Metamask \n  \n    to {{this.web3service.desiredNetwork}}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  check Account: {{this.web3service.connectedAccount}}  Login with Metamask       to {{this.web3service.desiredNetwork}}  '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AnswerOrdersComponent', 'selector': 'app-answer-orders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddPeerComponent', 'selector': 'app-dialog-add-peer'},{'name': 'DialogAddTokenComponent', 'selector': 'app-dialog-add-token'},{'name': 'DialogGetOrderComponent', 'selector': 'app-dialog-get-order'},{'name': 'DialogSendOfflineComponent', 'selector': 'app-dialog-send-offline'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FindIntentsComponent', 'selector': 'app-find-intents'},{'name': 'GetOrderComponent', 'selector': 'app-get-order'},{'name': 'InitialPageComponent', 'selector': 'app-initial-page'},{'name': 'MainframeComponent', 'selector': 'app-mainframe'},{'name': 'MessageSystemComponent', 'selector': 'app-message-system'},{'name': 'MyAccountComponent', 'selector': 'app-my-account'},{'name': 'SetIntentsComponent', 'selector': 'app-set-intents'},{'name': 'VerifyUserComponent', 'selector': 'app-verify-user'},{'name': 'WhosOnlineComponent', 'selector': 'app-whos-online'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'},{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccountComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AirswapdexService.html":{"url":"injectables/AirswapdexService.html","title":"injectable - AirswapdexService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AirswapdexService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/airswapdex.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                airswapDexABI\n                            \n                            \n                                    Public\n                                airswapDexAddress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fill\n                            \n                            \n                                pad\n                            \n                            \n                                toChecksum\n                            \n                            \n                                toHex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(web3service: ConnectWeb3Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/airswapdex.service.ts:111\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        web3service\n                                                  \n                                                        \n                                                                    ConnectWeb3Service\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fill\n                            \n                            \n                        \n                    \n                \n                \n                    \nfill(makerAddress: string, makerAmount: string, makerToken: string, takerAddress: string, takerAmount: string, takerToken: string, expiration: number, nonce: number, v: string, r: string, s: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/airswapdex.service.ts:138\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        makerAddress\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        makerAmount\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        makerToken\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        takerAddress\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        takerAmount\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        takerToken\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        expiration\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nonce\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        v\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        r\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        s\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pad\n                            \n                            \n                        \n                    \n                \n                \n                    \npad(num: , size: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/airswapdex.service.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        num\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        size\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toChecksum\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoChecksum(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/airswapdex.service.ts:134\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toHex\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoHex(num: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/airswapdex.service.ts:130\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        num\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            airswapDexABI\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        airswapDexABI:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      'name': 'fill',\n      'type': 'function',\n      'constant': false,\n      'inputs': [\n        {'name': 'makerAddress', 'type': 'address'},\n        {'name': 'makerAmount', 'type': 'uint256'},\n        {'name': 'makerToken', 'type': 'address'},\n        {'name': 'takerAddress', 'type': 'address'},\n        {'name': 'takerAmount', 'type': 'uint256'},\n        {'name': 'takerToken', 'type': 'address'},\n        {'name': 'expiration', 'type': 'uint256'},\n        {'name': 'nonce', 'type': 'uint256'},\n        {'name': 'v', 'type': 'uint8'},\n        {'name': 'r', 'type': 'bytes32'},\n        {'name': 's', 'type': 'bytes32'}\n      ],\n      'outputs': [],\n      'payable': true,\n      'stateMutability': 'payable',\n    }, {\n      'name': 'fills',\n      'type': 'function',\n      'constant': true,\n      'inputs': [\n        {'name': '', 'type': 'bytes32'}\n      ],\n      'outputs': [\n        {'name': '', 'type': 'bool'}\n      ],\n      'payable': false,\n      'stateMutability': 'view',\n    }, {\n      'name': 'cancel',\n      'type': 'function',\n      'constant': false,\n      'inputs': [\n        {'name': 'makerAddress', 'type': 'address'},\n        {'name': 'makerAmount', 'type': 'uint256'},\n        {'name': 'makerToken', 'type': 'address'},\n        {'name': 'takerAddress', 'type': 'address'},\n        {'name': 'takerAmount', 'type': 'uint256'},\n        {'name': 'takerToken', 'type': 'address'},\n        {'name': 'expiration', 'type': 'uint256'},\n        {'name': 'nonce', 'type': 'uint256'},\n        {'name': 'v', 'type': 'uint8'},\n        {'name': 'r', 'type': 'bytes32'},\n        {'name': 's', 'type': 'bytes32'}\n      ],\n      'outputs': [],\n      'payable': false,\n      'stateMutability': 'nonpayable',\n    }, {\n      'name': 'Filled',\n      'type': 'event',\n      'anonymous': false,\n      'inputs': [\n        {'indexed': true, 'name': 'makerAddress', 'type': 'address'},\n        {'indexed': false, 'name': 'makerAmount', 'type': 'uint256'},\n        {'indexed': true, 'name': 'makerToken', 'type': 'address'},\n        {'indexed': false, 'name': 'takerAddress', 'type': 'address'},\n        {'indexed': false, 'name': 'takerAmount', 'type': 'uint256'},\n        {'indexed': true, 'name': 'takerToken', 'type': 'address'},\n        {'indexed': false, 'name': 'expiration', 'type': 'uint256'},\n        {'indexed': false, 'name': 'nonce', 'type': 'uint256'}\n      ],\n    }, {\n      'name': 'Canceled',\n      'type': 'event',\n      'anonymous': false,\n      'inputs': [\n        {'indexed': true, 'name': 'makerAddress', 'type': 'address'},\n        {'indexed': false, 'name': 'makerAmount', 'type': 'uint256'},\n        {'indexed': true, 'name': 'makerToken', 'type': 'address'},\n        {'indexed': false, 'name': 'takerAddress', 'type': 'address'},\n        {'indexed': false, 'name': 'takerAmount', 'type': 'uint256'},\n        {'indexed': true, 'name': 'takerToken', 'type': 'address'},\n        {'indexed': false, 'name': 'expiration', 'type': 'uint256'},\n        {'indexed': false, 'name': 'nonce', 'type': 'uint256'}\n      ],\n    }, {\n      'name': 'Failed',\n      'type': 'event',\n      'anonymous': false,\n      'inputs': [\n        {'indexed': false, 'name': 'code', 'type': 'uint256'},\n        {'indexed': true, 'name': 'makerAddress', 'type': 'address'},\n        {'indexed': false, 'name': 'makerAmount', 'type': 'uint256'},\n        {'indexed': true, 'name': 'makerToken', 'type': 'address'},\n        {'indexed': false, 'name': 'takerAddress', 'type': 'address'},\n        {'indexed': false, 'name': 'takerAmount', 'type': 'uint256'},\n        {'indexed': true, 'name': 'takerToken', 'type': 'address'},\n        {'indexed': false, 'name': 'expiration', 'type': 'uint256'},\n        {'indexed': false, 'name': 'nonce', 'type': 'uint256'}\n      ],\n    }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/airswapdex.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            airswapDexAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        airswapDexAddress:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '0x08a1d43a218adaf6273f323a1f5a43d930f3d69e'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/airswapdex.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        airswapDexContract\n                    \n                \n\n                \n                    \n                        getairswapDexContract()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/airswapdex.service.ts:115\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { ConnectWeb3Service } from './connectWeb3.service';\nimport { EtherAddress } from './tokens';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AirswapdexService {\n\n  // public airswapDexAddress = '0x2C40c44343214a0C81Ea8eEe6f5Ae75138062A0A'; // rinkeby\n  public airswapDexAddress = '0x08a1d43a218adaf6273f323a1f5a43d930f3d69e'; // rinkeby\n\n  // public airswapDex: string = '0x8fd3121013A07C57f0D69646E86E7a4880b467b7'; // mainnet\n  public airswapDexABI = [\n    {\n      'name': 'fill',\n      'type': 'function',\n      'constant': false,\n      'inputs': [\n        {'name': 'makerAddress', 'type': 'address'},\n        {'name': 'makerAmount', 'type': 'uint256'},\n        {'name': 'makerToken', 'type': 'address'},\n        {'name': 'takerAddress', 'type': 'address'},\n        {'name': 'takerAmount', 'type': 'uint256'},\n        {'name': 'takerToken', 'type': 'address'},\n        {'name': 'expiration', 'type': 'uint256'},\n        {'name': 'nonce', 'type': 'uint256'},\n        {'name': 'v', 'type': 'uint8'},\n        {'name': 'r', 'type': 'bytes32'},\n        {'name': 's', 'type': 'bytes32'}\n      ],\n      'outputs': [],\n      'payable': true,\n      'stateMutability': 'payable',\n    }, {\n      'name': 'fills',\n      'type': 'function',\n      'constant': true,\n      'inputs': [\n        {'name': '', 'type': 'bytes32'}\n      ],\n      'outputs': [\n        {'name': '', 'type': 'bool'}\n      ],\n      'payable': false,\n      'stateMutability': 'view',\n    }, {\n      'name': 'cancel',\n      'type': 'function',\n      'constant': false,\n      'inputs': [\n        {'name': 'makerAddress', 'type': 'address'},\n        {'name': 'makerAmount', 'type': 'uint256'},\n        {'name': 'makerToken', 'type': 'address'},\n        {'name': 'takerAddress', 'type': 'address'},\n        {'name': 'takerAmount', 'type': 'uint256'},\n        {'name': 'takerToken', 'type': 'address'},\n        {'name': 'expiration', 'type': 'uint256'},\n        {'name': 'nonce', 'type': 'uint256'},\n        {'name': 'v', 'type': 'uint8'},\n        {'name': 'r', 'type': 'bytes32'},\n        {'name': 's', 'type': 'bytes32'}\n      ],\n      'outputs': [],\n      'payable': false,\n      'stateMutability': 'nonpayable',\n    }, {\n      'name': 'Filled',\n      'type': 'event',\n      'anonymous': false,\n      'inputs': [\n        {'indexed': true, 'name': 'makerAddress', 'type': 'address'},\n        {'indexed': false, 'name': 'makerAmount', 'type': 'uint256'},\n        {'indexed': true, 'name': 'makerToken', 'type': 'address'},\n        {'indexed': false, 'name': 'takerAddress', 'type': 'address'},\n        {'indexed': false, 'name': 'takerAmount', 'type': 'uint256'},\n        {'indexed': true, 'name': 'takerToken', 'type': 'address'},\n        {'indexed': false, 'name': 'expiration', 'type': 'uint256'},\n        {'indexed': false, 'name': 'nonce', 'type': 'uint256'}\n      ],\n    }, {\n      'name': 'Canceled',\n      'type': 'event',\n      'anonymous': false,\n      'inputs': [\n        {'indexed': true, 'name': 'makerAddress', 'type': 'address'},\n        {'indexed': false, 'name': 'makerAmount', 'type': 'uint256'},\n        {'indexed': true, 'name': 'makerToken', 'type': 'address'},\n        {'indexed': false, 'name': 'takerAddress', 'type': 'address'},\n        {'indexed': false, 'name': 'takerAmount', 'type': 'uint256'},\n        {'indexed': true, 'name': 'takerToken', 'type': 'address'},\n        {'indexed': false, 'name': 'expiration', 'type': 'uint256'},\n        {'indexed': false, 'name': 'nonce', 'type': 'uint256'}\n      ],\n    }, {\n      'name': 'Failed',\n      'type': 'event',\n      'anonymous': false,\n      'inputs': [\n        {'indexed': false, 'name': 'code', 'type': 'uint256'},\n        {'indexed': true, 'name': 'makerAddress', 'type': 'address'},\n        {'indexed': false, 'name': 'makerAmount', 'type': 'uint256'},\n        {'indexed': true, 'name': 'makerToken', 'type': 'address'},\n        {'indexed': false, 'name': 'takerAddress', 'type': 'address'},\n        {'indexed': false, 'name': 'takerAmount', 'type': 'uint256'},\n        {'indexed': true, 'name': 'takerToken', 'type': 'address'},\n        {'indexed': false, 'name': 'expiration', 'type': 'uint256'},\n        {'indexed': false, 'name': 'nonce', 'type': 'uint256'}\n      ],\n    }];\n\n  constructor(private web3service: ConnectWeb3Service) { }\n\n  get airswapDexContract(): any {\n    return new this.web3service.web3.eth.Contract(\n      this.airswapDexABI,\n      this.airswapDexAddress\n    );\n  }\n\n  pad(num, size): string {\n    let s = num + '';\n    while (s.length  {\n    const gasPrice = 10e9;\n    const gas = 200000;\n    let dataString = '0x1d4d691d';\n    dataString = dataString + this.pad(makerAddress.slice(2), 64);\n    dataString = dataString + this.pad(this.toHex(makerAmount).slice(2), 64);\n    dataString = dataString + this.pad(makerToken.slice(2), 64);\n    dataString = dataString + this.pad(takerAddress.slice(2), 64);\n    dataString = dataString + this.pad(this.toHex(takerAmount).slice(2), 64);\n    dataString = dataString + this.pad(takerToken.slice(2), 64);\n    dataString = dataString + this.pad(this.toHex(expiration).slice(2), 64);\n    dataString = dataString + this.pad(this.toHex(nonce).slice(2), 64);\n    dataString = dataString + this.pad(this.toHex(v).slice(2), 64);\n    dataString = dataString + this.pad(r.slice(2), 64);\n    dataString = dataString + this.pad(s.slice(2), 64);\n\n    if (takerToken === EtherAddress) {\n      return this.web3service.web3.eth.sendTransaction({\n        from: this.web3service.connectedAccount,\n        to: this.airswapDexAddress,\n        value: takerAmount,\n        gas: gas,\n        gasPrice: 10e9,\n        data: dataString\n      });\n    } else {\n      return this.web3service.web3.eth.sendTransaction({\n        from: this.web3service.connectedAccount,\n        to: this.airswapDexAddress,\n        gas: gas,\n        gasPrice: 10e9,\n        data: dataString\n      });\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AnswerOrdersComponent.html":{"url":"components/AnswerOrdersComponent.html","title":"component - AnswerOrdersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AnswerOrdersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/answer-orders/answer-orders.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-answer-orders\n            \n\n            \n                styleUrls\n                answer-orders.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./answer-orders.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                expiration\n                            \n                            \n                                    Public\n                                getOrderService\n                            \n                            \n                                    Public\n                                isOpen\n                            \n                            \n                                    Public\n                                openOrderIds\n                            \n                            \n                                    Public\n                                orders\n                            \n                            \n                                    Public\n                                orderService\n                            \n                            \n                                    Public\n                                takerAmount\n                            \n                            \n                                    Public\n                                timers\n                            \n                            \n                                    Public\n                                websocketSubscription\n                            \n                            \n                                    Public\n                                wsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                answerOrder\n                            \n                            \n                                count\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sealDeal\n                            \n                            \n                                sign_order\n                            \n                            \n                                takerHasEnough\n                            \n                            \n                                toFixed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(airswapDexService: AirswapdexService, connectionService: ConnectionService, getOrderService: GetOrderService, orderService: OrderRequestsService, web3service: ConnectWeb3Service, wsService: WebsocketService)\n                    \n                \n                        \n                            \n                                Defined in src/app/answer-orders/answer-orders.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        airswapDexService\n                                                  \n                                                        \n                                                                    AirswapdexService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        connectionService\n                                                  \n                                                        \n                                                                    ConnectionService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        getOrderService\n                                                  \n                                                        \n                                                                    GetOrderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        orderService\n                                                  \n                                                        \n                                                                    OrderRequestsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        web3service\n                                                  \n                                                        \n                                                                    ConnectWeb3Service\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wsService\n                                                  \n                                                        \n                                                                    WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            answerOrder\n                            \n                            \n                        \n                    \n                \n                \n                    \nanswerOrder(order: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/answer-orders/answer-orders.component.ts:107\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        order\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            count\n                            \n                            \n                        \n                    \n                \n                \n                    \ncount(obj: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/answer-orders/answer-orders.component.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/answer-orders/answer-orders.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/answer-orders/answer-orders.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sealDeal\n                            \n                            \n                        \n                    \n                \n                \n                    \nsealDeal(order: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/answer-orders/answer-orders.component.ts:132\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        order\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sign_order\n                            \n                            \n                        \n                    \n                \n                \n                    \nsign_order(order: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/answer-orders/answer-orders.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        order\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            takerHasEnough\n                            \n                            \n                        \n                    \n                \n                \n                    \ntakerHasEnough(order: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/answer-orders/answer-orders.component.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        order\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toFixed\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoFixed(x: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/answer-orders/answer-orders.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        x\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expiration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        expiration:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                        \n                            \n                                    Defined in src/app/answer-orders/answer-orders.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getOrderService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getOrderService:     GetOrderService\n\n                    \n                \n                    \n                        \n                            Type :     GetOrderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/answer-orders/answer-orders.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isOpen:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/answer-orders/answer-orders.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            openOrderIds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        openOrderIds:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/answer-orders/answer-orders.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            orders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        orders:     Order[]\n\n                    \n                \n                    \n                        \n                            Type :     Order[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/answer-orders/answer-orders.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            orderService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        orderService:     OrderRequestsService\n\n                    \n                \n                    \n                        \n                            Type :     OrderRequestsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/answer-orders/answer-orders.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            takerAmount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        takerAmount:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/answer-orders/answer-orders.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timers:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/answer-orders/answer-orders.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            websocketSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        websocketSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/answer-orders/answer-orders.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            wsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        wsService:     WebsocketService\n\n                    \n                \n                    \n                        \n                            Type :     WebsocketService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/answer-orders/answer-orders.component.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\n// services\nimport { AirswapdexService } from '../services/airswapdex.service';\nimport { ConnectionService } from '../services/connection.service';\nimport { ConnectWeb3Service } from '../services/connectWeb3.service';\nimport { WebsocketService } from '../services/websocket.service';\nimport { OrderRequestsService } from '../services/order-requests.service';\nimport { GetOrderService } from '../services/get-order.service';\nimport { EthereumTokensSN, getTokenByAddress } from '../services/tokens';\n\nimport { TimerObservable } from 'rxjs/observable/TimerObservable';\n\ninterface Order {\n  makerAddress: string;\n  makerAmount: string;\n  makerToken: string;\n  takerToken: string;\n  takerAddress: string;\n}\n\n@Component({\n  selector: 'app-answer-orders',\n  templateUrl: './answer-orders.component.html',\n  styleUrls: ['./answer-orders.component.scss']\n})\nexport class AnswerOrdersComponent implements OnInit, OnDestroy {\n\n  public isOpen = true;\n  public orders: Order[] = [];\n  public takerAmount: any = {};\n  public websocketSubscription: Subscription;\n  public openOrderIds: any = {};\n  public expiration = 5;\n  public timers: any = {};\n\n  constructor(\n    private airswapDexService: AirswapdexService,\n    private connectionService: ConnectionService,\n    public getOrderService: GetOrderService,\n    public orderService: OrderRequestsService,\n    private web3service: ConnectWeb3Service,\n    public wsService: WebsocketService,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n    if (this.websocketSubscription) { this.websocketSubscription.unsubscribe(); }\n  }\n\n  toFixed(x) {\n    if (Math.abs(x)  20) {\n          e -= 20;\n          x /= Math.pow(10, e);\n          x += (new Array(e + 1)).join('0');\n      }\n    }\n    return x;\n  }\n\n  takerHasEnough(order: any): boolean {\n    return (this.takerAmount[order.id]  {\n    order['nonce'] = Math.round(Math.random() * 100 * Date.now()).toString();\n    order['expiration'] = Math.round(Date.now() / 1000 + this.expiration * 60).toString();\n\n    const hashV = this.web3service.web3.utils.soliditySha3(\n      order['makerAddress'],\n      order['makerAmount'],\n      order['makerToken'],\n      order['takerAddress'],\n      order['takerAmount'],\n      order['takerToken'],\n      order['expiration'],\n      order['nonce']\n    );\n    const prefixedHash =\n      this.web3service.web3.eth.accounts.hashMessage(hashV);\n\n    return this.web3service.web3.eth.sign(prefixedHash, this.web3service.connectedAccount)\n    .then((signedMessage) => {\n      let v, r, s;\n      r = signedMessage.slice(0, 66);\n      s = '0x' + signedMessage.slice(66, 130);\n      v = this.web3service.web3.utils.hexToNumber('0x' + signedMessage.slice(130, 132));\n      order['v'] = v;\n      order['r'] = r;\n      order['s'] = s;\n      return order;\n    });\n  }\n\n  answerOrder(order: any): void {\n    if (Number(this.takerAmount[order.id]) >= 0 && this.takerHasEnough(order)) {\n      order['clickedOfferDeal'] = true;\n      order['takerAmount'] = (Math.floor(Number(this.takerAmount[order.id]) * order['takerDecimals'])).toString();\n      order['takerAmount'] = this.toFixed(order['takerAmount']);\n      order['makerAmount'] = this.toFixed(order['makerAmount']);\n      const uuid = order.id;\n      // delete order.id;\n\n      this.sign_order(order)\n      .then(fullOrder => {\n        this.wsService.sendOrder(order['takerAddress'], fullOrder, uuid);\n        this.orderService.orderRequests = this.orderService.orderRequests.filter(\n          x => x.id !== uuid);\n      }).catch(error => {\n        console.log('Sign failed.');\n        order['clickedOfferDeal'] = false;\n      });\n    }\n  }\n\n  count(obj: any): number {\n    return Object.keys(obj).length;\n  }\n\n  sealDeal(order: any): void {\n    order['clickedDealSeal'] = true;\n    this.airswapDexService.fill(\n    order['makerAddress'], order['makerAmount'], order['makerToken'],\n    order['takerAddress'],  order['takerAmount'], order['takerToken'],\n    order['expiration'], order['nonce'], order['v'], order['r'], order['s'])\n    .then(() => {\n      this.getOrderService.orderResponses =\n      this.getOrderService.orderResponses.filter(\n        x => x.id !== order.id\n      );\n    }).catch(error => {\n      console.log('Deal was not sealed.');\n      order['clickedDealSeal'] = false;\n    });\n  }\n}\n\n\n\n    \n\n    \n         0'>\n   You have Open Requests For Offers \n  \n    \n      \n        {{order.alias}}\n      \n      \n        Address: {{order.takerAddress}}\n      \n      \n        Wants to trade {{order.makerAmount / order.makerDecimals}} {{order.makerProps.symbol}} of yours for his \n          {{order.takerProps.symbol}}\n      \n      \n        Peer has {{order.takerBalanceTakerToken/order.takerDecimals}} {{order.takerProps.symbol}} and \n        {{order.takerBalanceMakerToken/order.makerDecimals}} {{order.makerProps.symbol}} in the wallet.\n      \n      \n        \n          \n            {{order.makerProps.symbol}}: {{order.makerProps.address}}\n          \n         \n      \n      \n        \n          \n            {{order.takerProps.symbol}}: {{order.takerProps.address}}\n          \n         \n      \n      \n        \n            Warning: Trade contains unvalidated tokens. Don't get scammed.\n         \n       \n      \n        \n          How many {{order.takerProps.symbol}} do you want for this deal? \n        \n        \n          \n        \n      \n      \n        \n          How many minutes should the order be open for the counterparty to seal? \n        \n        \n          \n        \n        = 0 && takerHasEnough(order)\">\n          OFFER DEAL\n        \n      \n      \n        Sign in Metamask that you accept a deal of your \n        {{order.makerAmount / order.makerDecimals}}\n        {{order.makerProps.symbol}} for peers\n        {{order.takerAmount / order.takerDecimals}}\n        {{order.takerProps.symbol}}\n        \n      \n    \n  \n\n\n 0'>\n   You Can Close Deals \n  \n    \n      \n        You got an response from {{order.alias}}\n      \n      \n        Address: {{order.makerAddress}}\n      \n\n      \n          Wants to buy {{callGetTokenNameByAddress(intent.takerToken)}}\n       -->\n      \n        He signed the deal to give you \n        {{order.makerAmount / order.makerDecimals}}\n        {{order.makerProps.symbol}}\n        for {{order.takerAmount / order.takerDecimals}} \n        {{order.takerProps.symbol}}\n      \n      \n        Offer expires in {{order.minutesLeft}} min and {{order.secondsLeft}} sec\n      \n      \n        SEAL THE DEAL\n      \n      \n        Send transaction in Metamask to seal the deal to trade peers\n        {{order.makerAmount /order.makerDecimals}}\n        {{order.makerProps.symbol}} for your\n        {{order.takerAmount/order.takerDecimals}}\n        {{order.takerProps.symbol}}\n        \n      \n         \n  \n\n\n\n  There are currently no offer requests for you.\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\\'>   You have Open Requests For Offers                     {{order.alias}}                    Address: {{order.takerAddress}}                    Wants to trade {{order.makerAmount / order.makerDecimals}} {{order.makerProps.symbol}} of yours for his           {{order.takerProps.symbol}}                    Peer has {{order.takerBalanceTakerToken/order.takerDecimals}} {{order.takerProps.symbol}} and         {{order.takerBalanceMakerToken/order.makerDecimals}} {{order.makerProps.symbol}} in the wallet.                                          {{order.makerProps.symbol}}: {{order.makerProps.address}}                                                             {{order.takerProps.symbol}}: {{order.takerProps.address}}                                                   Warning: Trade contains unvalidated tokens. Don\\'t get scammed.                                        How many {{order.takerProps.symbol}} do you want for this deal?                                                                 How many minutes should the order be open for the counterparty to seal?                                           = 0 && takerHasEnough(order)\">          OFFER DEAL                            Sign in Metamask that you accept a deal of your         {{order.makerAmount / order.makerDecimals}}        {{order.makerProps.symbol}} for peers        {{order.takerAmount / order.takerDecimals}}        {{order.takerProps.symbol}}                     0\\'>   You Can Close Deals                     You got an response from {{order.alias}}                    Address: {{order.makerAddress}}                      Wants to buy {{callGetTokenNameByAddress(intent.takerToken)}}       -->              He signed the deal to give you         {{order.makerAmount / order.makerDecimals}}        {{order.makerProps.symbol}}        for {{order.takerAmount / order.takerDecimals}}         {{order.takerProps.symbol}}                    Offer expires in {{order.minutesLeft}} min and {{order.secondsLeft}} sec                    SEAL THE DEAL                    Send transaction in Metamask to seal the deal to trade peers        {{order.makerAmount /order.makerDecimals}}        {{order.makerProps.symbol}} for your        {{order.takerAmount/order.takerDecimals}}        {{order.takerProps.symbol}}                           There are currently no offer requests for you.'\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AnswerOrdersComponent', 'selector': 'app-answer-orders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddPeerComponent', 'selector': 'app-dialog-add-peer'},{'name': 'DialogAddTokenComponent', 'selector': 'app-dialog-add-token'},{'name': 'DialogGetOrderComponent', 'selector': 'app-dialog-get-order'},{'name': 'DialogSendOfflineComponent', 'selector': 'app-dialog-send-offline'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FindIntentsComponent', 'selector': 'app-find-intents'},{'name': 'GetOrderComponent', 'selector': 'app-get-order'},{'name': 'InitialPageComponent', 'selector': 'app-initial-page'},{'name': 'MainframeComponent', 'selector': 'app-mainframe'},{'name': 'MessageSystemComponent', 'selector': 'app-message-system'},{'name': 'MyAccountComponent', 'selector': 'app-my-account'},{'name': 'SetIntentsComponent', 'selector': 'app-set-intents'},{'name': 'VerifyUserComponent', 'selector': 'app-verify-user'},{'name': 'WhosOnlineComponent', 'selector': 'app-whos-online'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'},{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'AnswerOrdersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AnswerOrdersComponent', 'selector': 'app-answer-orders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddPeerComponent', 'selector': 'app-dialog-add-peer'},{'name': 'DialogAddTokenComponent', 'selector': 'app-dialog-add-token'},{'name': 'DialogGetOrderComponent', 'selector': 'app-dialog-get-order'},{'name': 'DialogSendOfflineComponent', 'selector': 'app-dialog-send-offline'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FindIntentsComponent', 'selector': 'app-find-intents'},{'name': 'GetOrderComponent', 'selector': 'app-get-order'},{'name': 'InitialPageComponent', 'selector': 'app-initial-page'},{'name': 'MainframeComponent', 'selector': 'app-mainframe'},{'name': 'MessageSystemComponent', 'selector': 'app-message-system'},{'name': 'MyAccountComponent', 'selector': 'app-my-account'},{'name': 'SetIntentsComponent', 'selector': 'app-set-intents'},{'name': 'VerifyUserComponent', 'selector': 'app-verify-user'},{'name': 'WhosOnlineComponent', 'selector': 'app-whos-online'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'},{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccountComponent\n\nAccountComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountComponent->AppModule\n\n\n\n\n\nAnswerOrdersComponent\n\nAnswerOrdersComponent\n\nAppModule -->\n\nAnswerOrdersComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAutofocusDirective\n\nAutofocusDirective\n\nAppModule -->\n\nAutofocusDirective->AppModule\n\n\n\n\n\nCallbackPipe\n\nCallbackPipe\n\nAppModule -->\n\nCallbackPipe->AppModule\n\n\n\n\n\nDialogAddPeerComponent\n\nDialogAddPeerComponent\n\nAppModule -->\n\nDialogAddPeerComponent->AppModule\n\n\n\n\n\nDialogAddTokenComponent\n\nDialogAddTokenComponent\n\nAppModule -->\n\nDialogAddTokenComponent->AppModule\n\n\n\n\n\nDialogGetOrderComponent\n\nDialogGetOrderComponent\n\nAppModule -->\n\nDialogGetOrderComponent->AppModule\n\n\n\n\n\nDialogSendOfflineComponent\n\nDialogSendOfflineComponent\n\nAppModule -->\n\nDialogSendOfflineComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nFindIntentsComponent\n\nFindIntentsComponent\n\nAppModule -->\n\nFindIntentsComponent->AppModule\n\n\n\n\n\nFocusDirective\n\nFocusDirective\n\nAppModule -->\n\nFocusDirective->AppModule\n\n\n\n\n\nGetOrderComponent\n\nGetOrderComponent\n\nAppModule -->\n\nGetOrderComponent->AppModule\n\n\n\n\n\nInitialPageComponent\n\nInitialPageComponent\n\nAppModule -->\n\nInitialPageComponent->AppModule\n\n\n\n\n\nMainframeComponent\n\nMainframeComponent\n\nAppModule -->\n\nMainframeComponent->AppModule\n\n\n\n\n\nMessageSystemComponent\n\nMessageSystemComponent\n\nAppModule -->\n\nMessageSystemComponent->AppModule\n\n\n\n\n\nMyAccountComponent\n\nMyAccountComponent\n\nAppModule -->\n\nMyAccountComponent->AppModule\n\n\n\n\n\nRoundPipe\n\nRoundPipe\n\nAppModule -->\n\nRoundPipe->AppModule\n\n\n\n\n\nSetIntentsComponent\n\nSetIntentsComponent\n\nAppModule -->\n\nSetIntentsComponent->AppModule\n\n\n\n\n\nVerifyUserComponent\n\nVerifyUserComponent\n\nAppModule -->\n\nVerifyUserComponent->AppModule\n\n\n\n\n\nWhosOnlineComponent\n\nWhosOnlineComponent\n\nAppModule -->\n\nWhosOnlineComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nNgMaterialModule\n\nNgMaterialModule\n\nAppModule -->\n\nNgMaterialModule->AppModule\n\n\n\n\n\nColumnSpaceObserverService\n\nColumnSpaceObserverService\n\nAppModule -->\n\nColumnSpaceObserverService->AppModule\n\n\n\n\n\nConnectWeb3Service\n\nConnectWeb3Service\n\nAppModule -->\n\nConnectWeb3Service->AppModule\n\n\n\n\n\nFirebaseService\n\nFirebaseService\n\nAppModule -->\n\nFirebaseService->AppModule\n\n\n\n\n\nGetOrderService\n\nGetOrderService\n\nAppModule -->\n\nGetOrderService->AppModule\n\n\n\n\n\nMessagingService\n\nMessagingService\n\nAppModule -->\n\nMessagingService->AppModule\n\n\n\n\n\nOrderRequestsService\n\nOrderRequestsService\n\nAppModule -->\n\nOrderRequestsService->AppModule\n\n\n\n\n\nRouterWebsocketActivatedService\n\nRouterWebsocketActivatedService\n\nAppModule -->\n\nRouterWebsocketActivatedService->AppModule\n\n\n\n\n\nTokenService\n\nTokenService\n\nAppModule -->\n\nTokenService->AppModule\n\n\n\n\n\nUserOnlineService\n\nUserOnlineService\n\nAppModule -->\n\nUserOnlineService->AppModule\n\n\n\n\n\nWebsocketService\n\nWebsocketService\n\nAppModule -->\n\nWebsocketService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AccountComponent\n                            \n                            \n                                AnswerOrdersComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                AutofocusDirective\n                            \n                            \n                                CallbackPipe\n                            \n                            \n                                DialogAddPeerComponent\n                            \n                            \n                                DialogAddTokenComponent\n                            \n                            \n                                DialogGetOrderComponent\n                            \n                            \n                                DialogSendOfflineComponent\n                            \n                            \n                                ErrorComponent\n                            \n                            \n                                FindIntentsComponent\n                            \n                            \n                                FocusDirective\n                            \n                            \n                                GetOrderComponent\n                            \n                            \n                                InitialPageComponent\n                            \n                            \n                                MainframeComponent\n                            \n                            \n                                MessageSystemComponent\n                            \n                            \n                                MyAccountComponent\n                            \n                            \n                                RoundPipe\n                            \n                            \n                                SetIntentsComponent\n                            \n                            \n                                VerifyUserComponent\n                            \n                            \n                                WhosOnlineComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                DialogAddPeerComponent\n                            \n                            \n                                DialogAddTokenComponent\n                            \n                            \n                                DialogGetOrderComponent\n                            \n                            \n                                DialogSendOfflineComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ColumnSpaceObserverService\n                            \n                            \n                                     ConnectWeb3Service\n                            \n                            \n                                     FirebaseService\n                            \n                            \n                                     GetOrderService\n                            \n                            \n                                     MessagingService\n                            \n                            \n                                     OrderRequestsService\n                            \n                            \n                                     RouterWebsocketActivatedService\n                            \n                            \n                                     TokenService\n                            \n                            \n                                     UserOnlineService\n                            \n                            \n                                     WebsocketService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    NgMaterialModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        // modules\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgMaterialModule } from './ng-material/ng-material.module';\nimport { RouterModule, Routes, CanActivate } from '@angular/router';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport {\n  AuthMethods,\n  AuthProvider,\n  AuthProviderWithCustomConfig,\n  CredentialHelper,\n  FirebaseUIAuthConfig,\n  FirebaseUIModule\n} from 'firebaseui-angular';\n\n// app components\nimport { AccountComponent } from './account/account.component';\nimport { AnswerOrdersComponent } from './answer-orders/answer-orders.component';\nimport { AppComponent } from './app.component';\nimport { ErrorComponent } from './error/error.component';\nimport { FindIntentsComponent } from './find-intents/find-intents.component';\nimport { GetOrderComponent } from './get-order/get-order.component';\nimport { InitialPageComponent } from './initial-page/initial-page.component';\nimport { MainframeComponent } from './mainframe/mainframe.component';\nimport { MessageSystemComponent } from './message-system/message-system.component';\nimport { MyAccountComponent } from './my-account/my-account.component';\nimport { SetIntentsComponent } from './set-intents/set-intents.component';\nimport { WhosOnlineComponent } from './whos-online/whos-online.component';\n\n// services\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { ConnectWeb3Service } from './services/connectWeb3.service';\nimport { ColumnSpaceObserverService } from './services/column-space-observer.service';\nimport { FirebaseService } from './services/firebase.service';\nimport { GetOrderService } from './services/get-order.service';\nimport { MessagingService } from './services/messaging.service';\nimport { OrderRequestsService } from './services/order-requests.service';\nimport { RouterWebsocketActivatedService } from './services/router-websocket-activated.service';\nimport { TokenService } from './services/token.service';\nimport { UserOnlineService } from './services/user-online.service';\nimport { WebsocketService } from './services/websocket.service';\n\n// pipes\nimport { RoundPipe } from './pipes/round';\nimport { CallbackPipe } from './pipes/callback';\n\n// dialogs\nimport { DialogAddPeerComponent } from './message-system/dialog-add-peer/dialog-add-peer.component';\nimport { DialogGetOrderComponent } from './dialogs/dialog-get-order/dialog-get-order.component';\nimport { DialogSendOfflineComponent } from './message-system/dialog-send-offline/dialog-send-offline.component';\n\nimport { environment } from '../environments/environment';\n\n// directives\nimport { AutofocusDirective } from './directives/autofocus.directive';\nimport { FocusDirective } from './directives/focus.directive';\nimport { DialogAddTokenComponent } from './dialogs/dialog-add-token/dialog-add-token.component';\nimport { VerifyUserComponent } from './verify-user/verify-user.component';\n\n\nconst appRoutes: Routes = [\n  { path: '', component: FindIntentsComponent },\n  { path: 'intents', component: SetIntentsComponent, canActivate: [RouterWebsocketActivatedService] },\n  { path: 'findPeers', component: FindIntentsComponent, canActivate: [RouterWebsocketActivatedService] },\n  { path: 'message', component: MessageSystemComponent, canActivate: [RouterWebsocketActivatedService] },\n  { path: 'order', component: GetOrderComponent, canActivate: [RouterWebsocketActivatedService] },\n  { path: 'whosOnline', component: WhosOnlineComponent, canActivate: [RouterWebsocketActivatedService] },\n  { path: 'answer', component: AnswerOrdersComponent, canActivate: [RouterWebsocketActivatedService] },\n  { path: 'myAccount', component: MyAccountComponent, canActivate: [RouterWebsocketActivatedService] },\n  { path: 'error', component: ErrorComponent},\n  { path: '**', redirectTo: '' }\n];\n// { path: '', redirectTo: '/connect',  pathMatch: 'full' },\n\n\nconst facebookCustomConfig: AuthProviderWithCustomConfig = {\n  provider: AuthProvider.Facebook,\n  customConfig: {\n    scopes: [\n      'public_profile',\n      'email',\n      'user_likes',\n      'user_friends'\n    ],\n    customParameters: {\n      // Forces password re-entry.\n      auth_type: 'reauthenticate'\n    }\n  }\n};\n\nconst googleCustomConfig: AuthProviderWithCustomConfig = {\n  provider: AuthProvider.Google,\n  customConfig: {\n    customParameters: {\n      prompt: 'select_account'\n    }\n  }\n};\n\n\nconst emailCustomConfig: AuthProviderWithCustomConfig = {\n  provider: AuthProvider.Password,\n  customConfig: {\n    requireDisplayName: true\n  }\n};\n\nconst firebaseUiAuthConfig: FirebaseUIAuthConfig = {\n  providers: [\n    // googleCustomConfig,\n    emailCustomConfig,\n    // AuthProvider.Github,\n    // AuthProvider.Twitter,\n  ],\n  method: AuthMethods.Popup,\n  tos: '',\n  credentialHelper: CredentialHelper.OneTap,\n};\n\n@NgModule({\n  declarations: [\n    AccountComponent,\n    AppComponent,\n    CallbackPipe,\n    MainframeComponent,\n    SetIntentsComponent,\n    FindIntentsComponent,\n    GetOrderComponent,\n    AnswerOrdersComponent,\n    MessageSystemComponent,\n    RoundPipe,\n    InitialPageComponent,\n    DialogAddPeerComponent,\n    WhosOnlineComponent,\n    AutofocusDirective,\n    FocusDirective,\n    DialogGetOrderComponent,\n    DialogSendOfflineComponent,\n    ErrorComponent,\n    DialogAddTokenComponent,\n    MyAccountComponent,\n    VerifyUserComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    FlexLayoutModule,\n    NgMaterialModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: false } // \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AutofocusDirective.html":{"url":"directives/AutofocusDirective.html","title":"directive - AutofocusDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  AutofocusDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/autofocus.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [appAutofocus]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/autofocus.directive.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/directives/autofocus.directive.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, AfterViewInit, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appAutofocus]'\n})\nexport class AutofocusDirective implements AfterViewInit {\n\n  constructor(private el: ElementRef) {\n  }\n\n  ngAfterViewInit() {\n    this.el.nativeElement.focus();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/CallbackPipe.html":{"url":"pipes/CallbackPipe.html","title":"pipe - CallbackPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  CallbackPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/callback.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        callback\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(items: any[], callback: (item: any) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/callback.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { PipeTransform, Pipe } from '@angular/core';\n\n@Pipe({\n    name: 'callback',\n    pure: false\n})\nexport class CallbackPipe implements PipeTransform {\n    transform(items: any[], callback: (item: any) => boolean): any {\n        if (!items || !callback) {\n            return items;\n        }\n        return items.filter(item => callback(item));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ColumnSpaceObserverService.html":{"url":"injectables/ColumnSpaceObserverService.html","title":"injectable - ColumnSpaceObserverService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ColumnSpaceObserverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/column-space-observer.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deviceSizeNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(media: ObservableMedia, messagingService: MessagingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/column-space-observer.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        media\n                                                  \n                                                        \n                                                                    ObservableMedia\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        messagingService\n                                                  \n                                                        \n                                                                    MessagingService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deviceSizeNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deviceSizeNumber:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/column-space-observer.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        columnNum\n                    \n                \n\n                \n                    \n                        getcolumnNum()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/column-space-observer.service.ts:29\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MediaChange, ObservableMedia } from '@angular/flex-layout';\nimport { MessagingService } from './messaging.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ColumnSpaceObserverService {\n\n  public deviceSizeNumber = 1;\n\n  constructor(\n    private media: ObservableMedia,\n    private messagingService: MessagingService\n  ) {\n    media.asObservable()\n    .subscribe((change: MediaChange) => {\n      if (change.mqAlias === 'xs') {\n        this.deviceSizeNumber = 1;\n      } else if (change.mqAlias === 'sm') {\n        this.deviceSizeNumber = 1;\n      } else if (change.mqAlias === 'md') {\n        this.deviceSizeNumber = 2;\n      } else {\n        this.deviceSizeNumber = 3;\n      }\n    });\n  }\n\n  get columnNum(): number {\n    let modifier = 0;\n    if (this.messagingService.showMessenger && this.deviceSizeNumber > 1) {\n      modifier = -1;\n    }\n    return this.deviceSizeNumber + modifier;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConnectWeb3Service.html":{"url":"injectables/ConnectWeb3Service.html","title":"injectable - ConnectWeb3Service","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ConnectWeb3Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/connectWeb3.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _web3\n                            \n                            \n                                    Public\n                                accountConnected\n                            \n                            \n                                    Public\n                                connected\n                            \n                            \n                                    Public\n                                connected_to\n                            \n                            \n                                    Public\n                                connected_to_network\n                            \n                            \n                                    Public\n                                connectedAccount\n                            \n                            \n                                    Public\n                                correctNetwork\n                            \n                            \n                                    Public\n                                desiredNetwork\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkConnection\n                            \n                            \n                                connectToNode\n                            \n                            \n                                getAccount\n                            \n                            \n                                getBalance\n                            \n                            \n                                getNetworkId\n                            \n                            \n                                isConnected\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connectionService: ConnectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/connectWeb3.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connectionService\n                                                  \n                                                        \n                                                                    ConnectionService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkConnection\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckConnection()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/connectWeb3.service.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectToNode\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnectToNode()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/connectWeb3.service.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAccount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/connectWeb3.service.ts:127\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBalance\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBalance(account: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/connectWeb3.service.ts:134\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        account\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNetworkId\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNetworkId()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/connectWeb3.service.ts:106\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isConnected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisConnected()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/connectWeb3.service.ts:123\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _web3\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _web3:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/connectWeb3.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            accountConnected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        accountConnected:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/connectWeb3.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        connected:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/connectWeb3.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connected_to\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        connected_to:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/connectWeb3.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connected_to_network\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        connected_to_network:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/connectWeb3.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connectedAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        connectedAccount:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/connectWeb3.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            correctNetwork\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        correctNetwork:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/connectWeb3.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            desiredNetwork\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        desiredNetwork:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Rinkeby'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/connectWeb3.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        web3\n                    \n                \n\n                \n                    \n                        getweb3()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/connectWeb3.service.ts:31\n                                \n                            \n\n                \n                    \n                        setweb3(web3: any)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/connectWeb3.service.ts:38\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            web3\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        connectionEstablished\n                    \n                \n\n                \n                    \n                        getconnectionEstablished()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/connectWeb3.service.ts:42\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { ConnectionService } from './connection.service';\n\ndeclare var require: any;\nconst Web3 = require('web3');\n\ndeclare global {\n  interface Window { web3: any; }\n}\nwindow.web3 = window.web3 || undefined;\n\n@Injectable()\nexport class ConnectWeb3Service {\n\n  private _web3: any;\n  public desiredNetwork = 'Rinkeby';\n\n  public connected = false;\n  public correctNetwork = false;\n  public accountConnected = false;\n\n  public connected_to: string;\n  public connected_to_network: string;\n  public connectedAccount: string;\n  constructor(\n    private connectionService: ConnectionService,\n  ) { }\n\n\n  get web3(): any {\n    if (!this._web3) {\n      this.connectToNode();\n    }\n    return this._web3;\n  }\n\n  set web3(web3: any) {\n    this._web3 = web3;\n  }\n\n  get connectionEstablished(): boolean {\n    return (this.connected && this.correctNetwork && this.accountConnected);\n  }\n\n  checkConnection(): void {\n    // check if connection to web3 is available via web3\n    this.isConnected()\n    .then(connected => {\n      this.connected = connected;\n      if (connected) { // generally a connection available?\n        return this.getNetworkId();\n      } else {\n        return null;\n      }\n    })\n    .then(network => {\n      // is it connected to the correct network?\n      this.correctNetwork = (network === this.desiredNetwork);\n      return this.getAccount();\n    }).then(account => {\n      // is an account connected?\n      this.accountConnected = account !== undefined;\n\n      // check whether web3 account is the same as the websocket registered one\n      if (this.accountConnected) {\n        const accountLC = account.toLowerCase();\n        this.connectionService.loggedInUser.address = accountLC;\n\n        if (this.connectionService.loggedInUser.wsAddress\n        && accountLC !== this.connectionService.loggedInUser.wsAddress) {\n          this.connectionService.wsConnected = false;\n        }\n      }\n\n      // log whether connection to web3 is established\n      this.connectionService.web3Connected = this.connectionEstablished;\n    }).catch((error) => {console.log('Error while checking connection.'); });\n  }\n\n  connectToNode(): void {\n    const connectMetamask: () => void = () => {\n      console.log('Connecting to Metamask.');\n      this.web3 = new Web3(window.web3.currentProvider);\n      this.connected_to = 'Metamask';\n    };\n    const connectLocalNode: () => void = () => {\n      console.log('Connecting to localhost:8545');\n      this.web3 = new Web3('http://localhost:8545');\n      this.connected_to = 'local node';\n    };\n\n    console.log('Initializing Web3.');\n    if (typeof this._web3 !== 'undefined') { // if already defined -> ok.\n      console.log('Is already initialized. Reconnecting to current provider.');\n      this.web3 = new Web3(this.web3.currentProvider);\n    } else if (typeof window.web3 !== 'undefined') { // use injected web3 provider from browser\n      connectMetamask();\n    } else {\n      connectLocalNode();\n    }\n    this.getNetworkId();\n    console.log('This page is using web3 version:', this.web3.version);\n  }\n\n  getNetworkId(): Promise {\n    return this.web3.eth.net.getId().then(id => {\n      if (id === 1) {\n        this.connected_to_network = 'Mainnet';\n      } else if (id === 3) {\n        this.connected_to_network = 'Ropsten';\n      } else if (id === 4) {\n        this.connected_to_network = 'Rinkeby';\n      } else if (id === 42) {\n        this.connected_to_network = 'Kovan';\n      } else {\n        this.connected_to_network = 'Unknown';\n      }\n      return this.connected_to_network;\n      });\n  }\n\n  isConnected(): Promise {\n    return this.web3.eth.net.isListening();\n  }\n\n  getAccount(): Promise {\n    return this.web3.eth.getAccounts().then(result => {\n      this.connectedAccount = result[0];\n      return this.connectedAccount;\n    });\n  }\n\n  getBalance(account: string): Promise {\n    return this.web3.eth.getBalance(account).then(result => {\n      return result;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConnectionService.html":{"url":"injectables/ConnectionService.html","title":"injectable - ConnectionService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ConnectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/connection.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                firebaseConnected\n                            \n                            \n                                    Public\n                                loggedInUser\n                            \n                            \n                                    Public\n                                web3Connected\n                            \n                            \n                                    Public\n                                wsConnected\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/connection.service.ts:18\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firebaseConnected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firebaseConnected:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/connection.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loggedInUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loggedInUser:     LoggedInUser\n\n                    \n                \n                    \n                        \n                            Type :     LoggedInUser\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    alias: null,\n    address: null,\n    wsAddress: null,\n    uid: null\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/connection.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            web3Connected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        web3Connected:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/connection.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            wsConnected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        wsConnected:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/connection.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        connected\n                    \n                \n\n                \n                    \n                        getconnected()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/connection.service.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { LoggedInUser } from '../types/types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConnectionService {\n\n  public loggedInUser: LoggedInUser = {\n    alias: null,\n    address: null,\n    wsAddress: null,\n    uid: null\n  };\n  public web3Connected = false;\n  public wsConnected = false;\n  public firebaseConnected = false;\n\n  constructor() { }\n\n  get connected(): boolean {\n    return this.web3Connected && this.wsConnected && this.firebaseConnected;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogAddPeerComponent.html":{"url":"components/DialogAddPeerComponent.html","title":"component - DialogAddPeerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DialogAddPeerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/message-system/dialog-add-peer/dialog-add-peer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-add-peer\n            \n\n            \n                styleUrls\n                dialog-add-peer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dialog-add-peer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                peerAddress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onCloseCancel\n                            \n                            \n                                onCloseConfirm\n                            \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/message-system/dialog-add-peer/dialog-add-peer.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/message-system/dialog-add-peer/dialog-add-peer.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onCloseCancel\n                            \n                            \n                        \n                    \n                \n                \n                    \nonCloseCancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/message-system/dialog-add-peer/dialog-add-peer.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onCloseConfirm\n                            \n                            \n                        \n                    \n                \n                \n                    \nonCloseConfirm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/message-system/dialog-add-peer/dialog-add-peer.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onNoClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonNoClick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/message-system/dialog-add-peer/dialog-add-peer.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/message-system/dialog-add-peer/dialog-add-peer.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/message-system/dialog-add-peer/dialog-add-peer.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            peerAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        peerAddress:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/message-system/dialog-add-peer/dialog-add-peer.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport { MessageSystemComponent } from '../message-system.component';\n\n@Component({\n  selector: 'app-dialog-add-peer',\n  templateUrl: './dialog-add-peer.component.html',\n  styleUrls: ['./dialog-add-peer.component.scss']\n})\nexport class DialogAddPeerComponent implements OnInit {\n\n  public peerAddress = '';\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close('Cancel');\n  }\n\n  onCloseConfirm() {\n    this.dialogRef.close(this.peerAddress);\n  }\n\n  onCloseCancel() {\n    this.dialogRef.close('Cancel');\n  }\n\n}\n\n    \n\n    \n        \n    Add Peer\n    \n      Add of a peer you'd like to connect with\n      \n      \n      {{data}} -->\n      \n        \n      \n    \n    \n      CANCEL\n      ADD&nbsp;\n    \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Add Peer          Add of a peer you\\'d like to connect with                  {{data}} -->                                  CANCEL      ADD       '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AnswerOrdersComponent', 'selector': 'app-answer-orders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddPeerComponent', 'selector': 'app-dialog-add-peer'},{'name': 'DialogAddTokenComponent', 'selector': 'app-dialog-add-token'},{'name': 'DialogGetOrderComponent', 'selector': 'app-dialog-get-order'},{'name': 'DialogSendOfflineComponent', 'selector': 'app-dialog-send-offline'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FindIntentsComponent', 'selector': 'app-find-intents'},{'name': 'GetOrderComponent', 'selector': 'app-get-order'},{'name': 'InitialPageComponent', 'selector': 'app-initial-page'},{'name': 'MainframeComponent', 'selector': 'app-mainframe'},{'name': 'MessageSystemComponent', 'selector': 'app-message-system'},{'name': 'MyAccountComponent', 'selector': 'app-my-account'},{'name': 'SetIntentsComponent', 'selector': 'app-set-intents'},{'name': 'VerifyUserComponent', 'selector': 'app-verify-user'},{'name': 'WhosOnlineComponent', 'selector': 'app-whos-online'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'},{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'DialogAddPeerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogAddTokenComponent.html":{"url":"components/DialogAddTokenComponent.html","title":"component - DialogAddTokenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DialogAddTokenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/dialog-add-token/dialog-add-token.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-add-token\n            \n\n            \n                styleUrls\n                dialog-add-token.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dialog-add-token.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkedToken\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                errorMessage\n                            \n                            \n                                    Public\n                                tokenAddress\n                            \n                            \n                                    Public\n                                tokenDecimals\n                            \n                            \n                                    Public\n                                tokenIsValid\n                            \n                            \n                                    Public\n                                tokenName\n                            \n                            \n                                    Public\n                                tokenSymbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToken\n                            \n                            \n                                checkToken\n                            \n                            \n                                getToken\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCloseCancel\n                            \n                            \n                                onCloseConfirm\n                            \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any, erc20Service: Erc20Service, firebaseService: FirebaseService, web3Service: ConnectWeb3Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/dialog-add-token/dialog-add-token.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        erc20Service\n                                                  \n                                                        \n                                                                    Erc20Service\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                    FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        web3Service\n                                                  \n                                                        \n                                                                    ConnectWeb3Service\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addToken\n                            \n                            \n                        \n                    \n                \n                \n                    \naddToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-token/dialog-add-token.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkToken\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-token/dialog-add-token.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToken(token: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-token/dialog-add-token.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-token/dialog-add-token.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onCloseCancel\n                            \n                            \n                        \n                    \n                \n                \n                    \nonCloseCancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-token/dialog-add-token.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onCloseConfirm\n                            \n                            \n                        \n                    \n                \n                \n                    \nonCloseConfirm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-token/dialog-add-token.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onNoClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonNoClick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-token/dialog-add-token.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            checkedToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        checkedToken:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-token/dialog-add-token.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-token/dialog-add-token.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-token/dialog-add-token.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-token/dialog-add-token.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tokenAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tokenAddress:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-token/dialog-add-token.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tokenDecimals\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tokenDecimals:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-token/dialog-add-token.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tokenIsValid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tokenIsValid:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-token/dialog-add-token.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tokenName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tokenName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-token/dialog-add-token.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tokenSymbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tokenSymbol:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-token/dialog-add-token.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport { ConnectWeb3Service } from '../../services/connectWeb3.service';\nimport { Erc20Service } from '../../services/erc20.service';\nimport { FirebaseService } from '../../services/firebase.service';\n\nimport { getTokenByAddress } from '../../services/tokens';\n\nimport { Token } from '../../types/types';\n\n@Component({\n  selector: 'app-dialog-add-token',\n  templateUrl: './dialog-add-token.component.html',\n  styleUrls: ['./dialog-add-token.component.scss']\n})\nexport class DialogAddTokenComponent implements OnInit {\n  public tokenAddress: string;\n  public tokenName: string;\n  public tokenSymbol: string;\n  public tokenDecimals: number;\n\n  public checkedToken = false;\n  public tokenIsValid = false;\n  public errorMessage: string;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private erc20Service: Erc20Service,\n    private firebaseService: FirebaseService,\n    private web3Service: ConnectWeb3Service,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close(false);\n  }\n\n  onCloseConfirm() {\n    this.dialogRef.close(true);\n  }\n\n  onCloseCancel() {\n    this.dialogRef.close(false);\n  }\n\n  getToken(token: string): number {\n    if (getTokenByAddress(token)) {\n      return getTokenByAddress(token);\n    } else {\n      return null;\n    }\n  }\n\n  addToken(): void {\n    if (this.tokenIsValid) {\n      this.firebaseService.addToken(\n        this.tokenAddress, this.tokenName,\n        this.tokenSymbol, this.tokenDecimals\n      ).then(addedToken => {\n        if (addedToken) {\n          this.onCloseConfirm();\n        } else {\n          this.onCloseCancel();\n        }\n      });\n    }\n  }\n\n  checkToken(): void {\n    this.checkedToken = false;\n    this.tokenName = null;\n    this.tokenSymbol = null;\n    this.tokenDecimals = null;\n    if (this.tokenAddress) {\n      this.tokenAddress = this.tokenAddress.trim();\n    }\n\n    if (!this.web3Service.web3.utils.isAddress(this.tokenAddress)) {\n      this.errorMessage = 'Enter a valid contract address';\n    } else {\n      this.firebaseService.getTokenFromDatabase(this.tokenAddress)\n      .then(token => {\n        let tokenInDB = false;\n        let validToken = true;\n        if (token) {\n          tokenInDB = true;\n          this.errorMessage = 'Token is already in database.';\n        }\n\n        const contract = this.erc20Service.getContract(this.tokenAddress);\n        const promiseList = [];\n\n        promiseList.push(\n          this.erc20Service.name(contract)\n          .then(name => this.tokenName = name)\n          .catch(() => validToken = false)\n        );\n        promiseList.push(\n          this.erc20Service.symbol(contract)\n          .then(symbol => this.tokenSymbol = symbol)\n          .catch(() => validToken = false)\n        );\n        promiseList.push(\n            this.erc20Service.decimals(contract)\n          .then(decimals => this.tokenDecimals = decimals)\n          .catch(() => validToken = false)\n        );\n        Promise.all(promiseList)\n        .then(() => {\n          this.checkedToken = true;\n          this.tokenIsValid = !tokenInDB\n                              && validToken\n                              && this.tokenName\n                              && this.tokenSymbol\n                              && this.tokenDecimals >= 0;\n          if (this.tokenIsValid) {\n            this.errorMessage = '';\n          } else if (!validToken) {\n            this.errorMessage = 'Token is not ERC20 compatible.';\n          }\n        });\n      });\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    Add A Custom Token\n  \n  \n    This will add the token in a secondary list of unchecked tokens. Please get in touch with us to have the token added properly.\n  \n  \n    \n      \n    \n\n    \n      \n        \n      \n      \n        \n      \n      \n        \n      \n    \n  \n  \n    {{errorMessage}}\n  \n  \n    CHECK TOKEN\n  \n  \n  \n    ADD TOKEN\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Add A Custom Token        This will add the token in a secondary list of unchecked tokens. Please get in touch with us to have the token added properly.                                                                                              {{errorMessage}}        CHECK TOKEN          ADD TOKEN  '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AnswerOrdersComponent', 'selector': 'app-answer-orders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddPeerComponent', 'selector': 'app-dialog-add-peer'},{'name': 'DialogAddTokenComponent', 'selector': 'app-dialog-add-token'},{'name': 'DialogGetOrderComponent', 'selector': 'app-dialog-get-order'},{'name': 'DialogSendOfflineComponent', 'selector': 'app-dialog-send-offline'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FindIntentsComponent', 'selector': 'app-find-intents'},{'name': 'GetOrderComponent', 'selector': 'app-get-order'},{'name': 'InitialPageComponent', 'selector': 'app-initial-page'},{'name': 'MainframeComponent', 'selector': 'app-mainframe'},{'name': 'MessageSystemComponent', 'selector': 'app-message-system'},{'name': 'MyAccountComponent', 'selector': 'app-my-account'},{'name': 'SetIntentsComponent', 'selector': 'app-set-intents'},{'name': 'VerifyUserComponent', 'selector': 'app-verify-user'},{'name': 'WhosOnlineComponent', 'selector': 'app-whos-online'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'},{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'DialogAddTokenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogGetOrderComponent.html":{"url":"components/DialogGetOrderComponent.html","title":"component - DialogGetOrderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DialogGetOrderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/dialog-get-order/dialog-get-order.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-get-order\n            \n\n            \n                styleUrls\n                dialog-get-order.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dialog-get-order.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                foundIntents\n                            \n                            \n                                    Public\n                                makerAmount\n                            \n                            \n                                    Public\n                                orderResponses\n                            \n                            \n                                    Public\n                                receiver\n                            \n                            \n                                    Public\n                                tokenList\n                            \n                            \n                                    Public\n                                websocketSubscription\n                            \n                            \n                                    Public\n                                wsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOrder\n                            \n                            \n                                getTokenDecimals\n                            \n                            \n                                getTokenName\n                            \n                            \n                                getTokenSymbol\n                            \n                            \n                                makerHasEnough\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCloseCancel\n                            \n                            \n                                onCloseConfirm\n                            \n                            \n                                onNoClick\n                            \n                            \n                                stringIsValidNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any, getOrderService: GetOrderService, web3service: ConnectWeb3Service, wsService: WebsocketService, airswapDexService: AirswapdexService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/dialog-get-order/dialog-get-order.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        getOrderService\n                                                  \n                                                        \n                                                                    GetOrderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        web3service\n                                                  \n                                                        \n                                                                    ConnectWeb3Service\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wsService\n                                                  \n                                                        \n                                                                    WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        airswapDexService\n                                                  \n                                                        \n                                                                    AirswapdexService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrder\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrder()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dialogs/dialog-get-order/dialog-get-order.component.ts:87\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTokenDecimals\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTokenDecimals(token: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dialogs/dialog-get-order/dialog-get-order.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTokenName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTokenName(token: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dialogs/dialog-get-order/dialog-get-order.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTokenSymbol\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTokenSymbol(token: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dialogs/dialog-get-order/dialog-get-order.component.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            makerHasEnough\n                            \n                            \n                        \n                    \n                \n                \n                    \nmakerHasEnough()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dialogs/dialog-get-order/dialog-get-order.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dialogs/dialog-get-order/dialog-get-order.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onCloseCancel\n                            \n                            \n                        \n                    \n                \n                \n                    \nonCloseCancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dialogs/dialog-get-order/dialog-get-order.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onCloseConfirm\n                            \n                            \n                        \n                    \n                \n                \n                    \nonCloseConfirm(uuid: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dialogs/dialog-get-order/dialog-get-order.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uuid\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onNoClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonNoClick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dialogs/dialog-get-order/dialog-get-order.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stringIsValidNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \nstringIsValidNumber(x: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dialogs/dialog-get-order/dialog-get-order.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        x\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-get-order/dialog-get-order.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-get-order/dialog-get-order.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            foundIntents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        foundIntents:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-get-order/dialog-get-order.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            makerAmount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        makerAmount:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-get-order/dialog-get-order.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            orderResponses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        orderResponses:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-get-order/dialog-get-order.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            receiver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        receiver:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-get-order/dialog-get-order.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tokenList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tokenList:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : EthereumTokensSN\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-get-order/dialog-get-order.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            websocketSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        websocketSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-get-order/dialog-get-order.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            wsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        wsService:     WebsocketService\n\n                    \n                \n                    \n                        \n                            Type :     WebsocketService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-get-order/dialog-get-order.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { ConnectWeb3Service } from '../../services/connectWeb3.service';\nimport { GetOrderService } from '../../services/get-order.service';\nimport { WebsocketService } from '../../services/websocket.service';\nimport { AirswapdexService } from '../../services/airswapdex.service';\n\nimport { EthereumTokensSN, getTokenByAddress } from '../../services/tokens';\n\nimport { Token } from '../../types/types';\n\n@Component({\n  selector: 'app-dialog-get-order',\n  templateUrl: './dialog-get-order.component.html',\n  styleUrls: ['./dialog-get-order.component.scss']\n})\nexport class DialogGetOrderComponent implements OnInit {\n  public receiver: string;\n  public makerAmount: string;\n\n  public tokenList: any[] = EthereumTokensSN;\n  public foundIntents: any[] = [];\n  public orderResponses: any[] = [];\n  public websocketSubscription: Subscription;\n\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private getOrderService: GetOrderService,\n    private web3service: ConnectWeb3Service,\n    public wsService: WebsocketService,\n    private airswapDexService: AirswapdexService\n  ) { }\n\n  ngOnInit() {\n    this.receiver = this.data.address;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onCloseConfirm(uuid: string) {\n    this.dialogRef.close(uuid);\n  }\n\n  onCloseCancel() {\n    this.dialogRef.close();\n  }\n\n  getTokenName(token: string): number {\n    if (getTokenByAddress(token)) {\n      return getTokenByAddress(token).name;\n    } else {\n      return null;\n    }\n  }\n\n  getTokenDecimals(token: string): number {\n    if (getTokenByAddress(token)) {\n      return 10 ** (getTokenByAddress(token).decimals);\n    } else {\n      return null;\n    }\n  }\n\n  getTokenSymbol(token: string): string {\n    if (getTokenByAddress(token)) {\n      return getTokenByAddress(token).symbol;\n    } else {\n      return null;\n    }\n  }\n\n  stringIsValidNumber(x: string): boolean {\n    return Number(x) >= 0;\n  }\n\n  makerHasEnough(): boolean {\n    return (parseFloat(this.makerAmount) = 0 && this.makerHasEnough()) {\n\n      const makerProps = getTokenByAddress(this.data.makerToken);\n      const takerProps = getTokenByAddress(this.data.takerToken);\n\n      const makerDecimals = 10 ** makerProps.decimals;\n      const makerAmount = Math.floor(Number(this.makerAmount) * makerDecimals);\n      if (makerAmount \n    \n\n    \n        \n  \n    Get Order\n  \n  \n    \n      \n    \n  \n  \n    {{receiver.slice(2,6)}} has \n    {{data.makerBalanceMakerToken / data.makerDecimals}} {{data.makerProps.symbol}}\n  \n  \n    Give me {{data.makerProps.name}} for {{data.takerProps.name}}\n  \n    \n  \n    \n  \n    ASK FOR OFFER\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Get Order                          {{receiver.slice(2,6)}} has     {{data.makerBalanceMakerToken / data.makerDecimals}} {{data.makerProps.symbol}}        Give me {{data.makerProps.name}} for {{data.takerProps.name}}                  ASK FOR OFFER  '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AnswerOrdersComponent', 'selector': 'app-answer-orders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddPeerComponent', 'selector': 'app-dialog-add-peer'},{'name': 'DialogAddTokenComponent', 'selector': 'app-dialog-add-token'},{'name': 'DialogGetOrderComponent', 'selector': 'app-dialog-get-order'},{'name': 'DialogSendOfflineComponent', 'selector': 'app-dialog-send-offline'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FindIntentsComponent', 'selector': 'app-find-intents'},{'name': 'GetOrderComponent', 'selector': 'app-get-order'},{'name': 'InitialPageComponent', 'selector': 'app-initial-page'},{'name': 'MainframeComponent', 'selector': 'app-mainframe'},{'name': 'MessageSystemComponent', 'selector': 'app-message-system'},{'name': 'MyAccountComponent', 'selector': 'app-my-account'},{'name': 'SetIntentsComponent', 'selector': 'app-set-intents'},{'name': 'VerifyUserComponent', 'selector': 'app-verify-user'},{'name': 'WhosOnlineComponent', 'selector': 'app-whos-online'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'},{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'DialogGetOrderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogSendOfflineComponent.html":{"url":"components/DialogSendOfflineComponent.html","title":"component - DialogSendOfflineComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DialogSendOfflineComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/message-system/dialog-send-offline/dialog-send-offline.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-send-offline\n            \n\n            \n                styleUrls\n                dialog-send-offline.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dialog-send-offline.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onCloseCancel\n                            \n                            \n                                onCloseConfirm\n                            \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/message-system/dialog-send-offline/dialog-send-offline.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/message-system/dialog-send-offline/dialog-send-offline.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onCloseCancel\n                            \n                            \n                        \n                    \n                \n                \n                    \nonCloseCancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/message-system/dialog-send-offline/dialog-send-offline.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onCloseConfirm\n                            \n                            \n                        \n                    \n                \n                \n                    \nonCloseConfirm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/message-system/dialog-send-offline/dialog-send-offline.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onNoClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonNoClick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/message-system/dialog-send-offline/dialog-send-offline.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/message-system/dialog-send-offline/dialog-send-offline.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/message-system/dialog-send-offline/dialog-send-offline.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n\n@Component({\n  selector: 'app-dialog-send-offline',\n  templateUrl: './dialog-send-offline.component.html',\n  styleUrls: ['./dialog-send-offline.component.scss']\n})\nexport class DialogSendOfflineComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close(false);\n  }\n\n  onCloseConfirm() {\n    this.dialogRef.close(true);\n  }\n\n  onCloseCancel() {\n    this.dialogRef.close(false);\n  }\n\n\n}\n\n    \n\n    \n        \n  Peer is offline\n  \n    Do you want to send following message to the database? \n     \n  \n    {{data}}\n     \n  \n    The peer will be able to read it the next time he logs in. Note: The message is stored unencrypted at the moment. Don't write any secret information.\n    \n    \n  \n  \n    CANCEL\n    SEND&nbsp;\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Peer is offline      Do you want to send following message to the database?            {{data}}           The peer will be able to read it the next time he logs in. Note: The message is stored unencrypted at the moment. Don\\'t write any secret information.                CANCEL    SEND   '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AnswerOrdersComponent', 'selector': 'app-answer-orders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddPeerComponent', 'selector': 'app-dialog-add-peer'},{'name': 'DialogAddTokenComponent', 'selector': 'app-dialog-add-token'},{'name': 'DialogGetOrderComponent', 'selector': 'app-dialog-get-order'},{'name': 'DialogSendOfflineComponent', 'selector': 'app-dialog-send-offline'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FindIntentsComponent', 'selector': 'app-find-intents'},{'name': 'GetOrderComponent', 'selector': 'app-get-order'},{'name': 'InitialPageComponent', 'selector': 'app-initial-page'},{'name': 'MainframeComponent', 'selector': 'app-mainframe'},{'name': 'MessageSystemComponent', 'selector': 'app-message-system'},{'name': 'MyAccountComponent', 'selector': 'app-my-account'},{'name': 'SetIntentsComponent', 'selector': 'app-set-intents'},{'name': 'VerifyUserComponent', 'selector': 'app-verify-user'},{'name': 'WhosOnlineComponent', 'selector': 'app-whos-online'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'},{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'DialogSendOfflineComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Erc20Service.html":{"url":"injectables/Erc20Service.html","title":"injectable - Erc20Service","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  Erc20Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/erc20.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ABI\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                approve\n                            \n                            \n                                approvedAmount\n                            \n                            \n                                balance\n                            \n                            \n                                decimals\n                            \n                            \n                                getContract\n                            \n                            \n                                name\n                            \n                            \n                                symbol\n                            \n                            \n                                toFixed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(web3service: ConnectWeb3Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/erc20.service.ts:121\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        web3service\n                                                  \n                                                        \n                                                                    ConnectWeb3Service\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            approve\n                            \n                            \n                        \n                    \n                \n                \n                    \napprove(contract: any, spender: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/erc20.service.ts:190\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        contract\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        spender\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            approvedAmount\n                            \n                            \n                        \n                    \n                \n                \n                    \napprovedAmount(contract: any, spender: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/erc20.service.ts:183\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        contract\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        spender\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            balance\n                            \n                            \n                        \n                    \n                \n                \n                    \nbalance(tokenAddress: any, address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/erc20.service.ts:156\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tokenAddress\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            decimals\n                            \n                            \n                        \n                    \n                \n                \n                    \ndecimals(contract: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/erc20.service.ts:151\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        contract\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getContract\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetContract(address: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/erc20.service.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \nname(contract: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/erc20.service.ts:175\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        contract\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \nsymbol(contract: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/erc20.service.ts:168\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        contract\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toFixed\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoFixed(x: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/erc20.service.ts:133\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        x\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ABI\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ABI:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      'constant': true,\n      'inputs': [],\n      'name': 'name',\n      'outputs': [ { 'name': '', 'type': 'string'}],\n      'payable': false,\n      'type': 'function'\n    }, {\n      'constant': false,\n      'inputs': [{ 'name': '_spender', 'type': 'address'}, { 'name': '_value', 'type': 'uint256'}],\n      'name': 'approve',\n      'outputs': [{ 'name': 'success', 'type': 'bool'}],\n      'payable': false,\n      'type': 'function'\n    }, {\n      'constant': true,\n      'inputs': [],\n      'name': 'totalSupply',\n      'outputs': [{ 'name': '', 'type': 'uint256'}],\n      'payable': false,\n      'type': 'function'\n    }, {\n      'constant': false,\n      'inputs': [{ 'name': '_from', 'type': 'address'}, { 'name': '_to', 'type': 'address'}, { 'name': '_value', 'type': 'uint256'}],\n      'name': 'transferFrom',\n      'outputs': [{ 'name': 'success', 'type': 'bool'}],\n      'payable': false,\n      'type': 'function'\n    }, {\n      'constant': true,\n      'inputs': [],\n      'name': 'decimals',\n      'outputs': [{ 'name': '', 'type': 'uint8'}],\n      'payable': false,\n      'type': 'function'\n    }, {\n      'constant': true,\n      'inputs': [],\n      'name': 'version',\n      'outputs': [{ 'name': '', 'type': 'string'}],\n      'payable': false,\n      'type': 'function'\n    }, {\n      'constant': true,\n      'inputs': [{ 'name': '_owner', 'type': 'address'}],\n      'name': 'balanceOf',\n      'outputs': [{ 'name': 'balance', 'type': 'uint256'}],\n      'payable': false,\n      'type': 'function'\n    }, {\n      'constant': true,\n      'inputs': [],\n      'name': 'symbol',\n      'outputs': [{ 'name': '', 'type': 'string'}],\n      'payable': false,\n      'type': 'function'\n    }, {\n      'constant': false,\n      'inputs': [{ 'name': '_to', 'type': 'address'}, { 'name': '_value', 'type': 'uint256'}],\n      'name': 'transfer',\n      'outputs': [{ 'name': 'success', 'type': 'bool'}],\n      'payable': false,\n      'type': 'function'\n    }, {\n      'constant': false,\n      'inputs': [\n        { 'name': '_spender', 'type': 'address'},\n        { 'name': '_value', 'type': 'uint256'},\n        { 'name': '_extraData', 'type': 'bytes'}\n      ],\n      'name': 'approveAndCall',\n      'outputs': [{ 'name': 'success', 'type': 'bool'}],\n      'payable': false,\n      'type': 'function'\n    }, {\n      'constant': true,\n      'inputs': [{ 'name': '_owner', 'type': 'address'}, { 'name': '_spender', 'type': 'address'}],\n      'name': 'allowance',\n      'outputs': [{ 'name': 'remaining', 'type': 'uint256'}],\n      'payable': false,\n      'type': 'function'\n    }, {\n      'inputs': [\n        { 'name': '_initialAmount', 'type': 'uint256'},\n        { 'name': '_tokenName', 'type': 'string'},\n        { 'name': '_decimalUnits', 'type': 'uint8'},\n        { 'name': '_tokenSymbol', 'type': 'string'}\n      ],\n      'type': 'constructor'\n    }, {\n      'payable': false,\n      'type': 'fallback'\n    }, {\n        'anonymous': false,\n        'inputs': [\n          { 'indexed': true, 'name': '_from', 'type': 'address'},\n          { 'indexed': true, 'name': '_to', 'type': 'address'},\n          { 'indexed': false, 'name': '_value', 'type': 'uint256'}\n        ],\n        'name': 'Transfer',\n        'type': 'event'\n      }, {\n        'anonymous': false,\n        'inputs': [\n          { 'indexed': true, 'name': '_owner', 'type': 'address'},\n          { 'indexed': true, 'name': '_spender', 'type': 'address'},\n          { 'indexed': false, 'name': '_value', 'type': 'uint256'}\n        ],\n        'name': 'Approval',\n        'type': 'event'\n    },\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/erc20.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ConnectWeb3Service } from './connectWeb3.service';\nimport { EtherAddress } from './tokens';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Erc20Service {\n  public ABI = [\n    {\n      'constant': true,\n      'inputs': [],\n      'name': 'name',\n      'outputs': [ { 'name': '', 'type': 'string'}],\n      'payable': false,\n      'type': 'function'\n    }, {\n      'constant': false,\n      'inputs': [{ 'name': '_spender', 'type': 'address'}, { 'name': '_value', 'type': 'uint256'}],\n      'name': 'approve',\n      'outputs': [{ 'name': 'success', 'type': 'bool'}],\n      'payable': false,\n      'type': 'function'\n    }, {\n      'constant': true,\n      'inputs': [],\n      'name': 'totalSupply',\n      'outputs': [{ 'name': '', 'type': 'uint256'}],\n      'payable': false,\n      'type': 'function'\n    }, {\n      'constant': false,\n      'inputs': [{ 'name': '_from', 'type': 'address'}, { 'name': '_to', 'type': 'address'}, { 'name': '_value', 'type': 'uint256'}],\n      'name': 'transferFrom',\n      'outputs': [{ 'name': 'success', 'type': 'bool'}],\n      'payable': false,\n      'type': 'function'\n    }, {\n      'constant': true,\n      'inputs': [],\n      'name': 'decimals',\n      'outputs': [{ 'name': '', 'type': 'uint8'}],\n      'payable': false,\n      'type': 'function'\n    }, {\n      'constant': true,\n      'inputs': [],\n      'name': 'version',\n      'outputs': [{ 'name': '', 'type': 'string'}],\n      'payable': false,\n      'type': 'function'\n    }, {\n      'constant': true,\n      'inputs': [{ 'name': '_owner', 'type': 'address'}],\n      'name': 'balanceOf',\n      'outputs': [{ 'name': 'balance', 'type': 'uint256'}],\n      'payable': false,\n      'type': 'function'\n    }, {\n      'constant': true,\n      'inputs': [],\n      'name': 'symbol',\n      'outputs': [{ 'name': '', 'type': 'string'}],\n      'payable': false,\n      'type': 'function'\n    }, {\n      'constant': false,\n      'inputs': [{ 'name': '_to', 'type': 'address'}, { 'name': '_value', 'type': 'uint256'}],\n      'name': 'transfer',\n      'outputs': [{ 'name': 'success', 'type': 'bool'}],\n      'payable': false,\n      'type': 'function'\n    }, {\n      'constant': false,\n      'inputs': [\n        { 'name': '_spender', 'type': 'address'},\n        { 'name': '_value', 'type': 'uint256'},\n        { 'name': '_extraData', 'type': 'bytes'}\n      ],\n      'name': 'approveAndCall',\n      'outputs': [{ 'name': 'success', 'type': 'bool'}],\n      'payable': false,\n      'type': 'function'\n    }, {\n      'constant': true,\n      'inputs': [{ 'name': '_owner', 'type': 'address'}, { 'name': '_spender', 'type': 'address'}],\n      'name': 'allowance',\n      'outputs': [{ 'name': 'remaining', 'type': 'uint256'}],\n      'payable': false,\n      'type': 'function'\n    }, {\n      'inputs': [\n        { 'name': '_initialAmount', 'type': 'uint256'},\n        { 'name': '_tokenName', 'type': 'string'},\n        { 'name': '_decimalUnits', 'type': 'uint8'},\n        { 'name': '_tokenSymbol', 'type': 'string'}\n      ],\n      'type': 'constructor'\n    }, {\n      'payable': false,\n      'type': 'fallback'\n    }, {\n        'anonymous': false,\n        'inputs': [\n          { 'indexed': true, 'name': '_from', 'type': 'address'},\n          { 'indexed': true, 'name': '_to', 'type': 'address'},\n          { 'indexed': false, 'name': '_value', 'type': 'uint256'}\n        ],\n        'name': 'Transfer',\n        'type': 'event'\n      }, {\n        'anonymous': false,\n        'inputs': [\n          { 'indexed': true, 'name': '_owner', 'type': 'address'},\n          { 'indexed': true, 'name': '_spender', 'type': 'address'},\n          { 'indexed': false, 'name': '_value', 'type': 'uint256'}\n        ],\n        'name': 'Approval',\n        'type': 'event'\n    },\n  ];\n\n\n  constructor(\n    private web3service: ConnectWeb3Service,\n  ) { }\n\n  getContract(address): any {\n    return new this.web3service.web3.eth.Contract(\n      this.ABI, address);\n  }\n\n  toFixed(x) {\n    if (Math.abs(x)  20) {\n          e -= 20;\n          x /= Math.pow(10, e);\n          x += (new Array(e + 1)).join('0');\n      }\n    }\n    return x;\n  }\n\n  decimals(contract: any): Promise {\n    return contract.methods.decimals().call()\n    .then(decimals => decimals);\n  }\n\n  balance(tokenAddress: any, address: string): Promise {\n    if (tokenAddress === EtherAddress) {\n      return this.web3service.getBalance(address);\n    } else {\n      const contract = this.getContract(tokenAddress);\n      return contract.methods\n      .balanceOf(address)\n      .call()\n      .then(balance => balance);\n    }\n  }\n\n  symbol(contract: any): Promise {\n    return contract.methods\n    .symbol()\n    .call()\n    .then(symbol => symbol);\n  }\n\n  name(contract: any): Promise {\n    return contract.methods\n    .name()\n    .call()\n    .then(name => name);\n  }\n\n\n  approvedAmount(contract: any, spender): Promise {\n    return contract.methods\n    .allowance(this.web3service.connectedAccount, spender)\n    .call()\n    .then(approvedAmount => approvedAmount);\n  }\n\n  approve(contract: any, spender: string): Promise {\n    let approveMethod;\n\n    return this.decimals(contract)\n    .then(decimals => {\n      const largeApproval = this.toFixed(1e21 * 10 ** decimals);\n      approveMethod = contract.methods\n      .approve(spender, largeApproval);\n      return approveMethod.estimateGas({from: this.web3service.connectedAccount});\n    }).then(estimatedGas => {\n      return approveMethod.send({\n        from: this.web3service.connectedAccount,\n        gas: Math.round(estimatedGas * 1.1),\n        gasPrice: 10e9\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/error/error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error\n            \n\n            \n                styleUrls\n                error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/error/error.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/error/error.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  Error. Lost connection to the Websocket. Try to reconnect. Otherwise contact me.\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Error. Lost connection to the Websocket. Try to reconnect. Otherwise contact me.'\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AnswerOrdersComponent', 'selector': 'app-answer-orders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddPeerComponent', 'selector': 'app-dialog-add-peer'},{'name': 'DialogAddTokenComponent', 'selector': 'app-dialog-add-token'},{'name': 'DialogGetOrderComponent', 'selector': 'app-dialog-get-order'},{'name': 'DialogSendOfflineComponent', 'selector': 'app-dialog-send-offline'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FindIntentsComponent', 'selector': 'app-find-intents'},{'name': 'GetOrderComponent', 'selector': 'app-get-order'},{'name': 'InitialPageComponent', 'selector': 'app-initial-page'},{'name': 'MainframeComponent', 'selector': 'app-mainframe'},{'name': 'MessageSystemComponent', 'selector': 'app-message-system'},{'name': 'MyAccountComponent', 'selector': 'app-my-account'},{'name': 'SetIntentsComponent', 'selector': 'app-set-intents'},{'name': 'VerifyUserComponent', 'selector': 'app-verify-user'},{'name': 'WhosOnlineComponent', 'selector': 'app-whos-online'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'},{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FocusDirective.html":{"url":"directives/FocusDirective.html","title":"directive - FocusDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  FocusDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/focus.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnChanges\n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [focus]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, renderer: Renderer)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/focus.directive.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        focus\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/focus.directive.ts:8\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/directives/focus.directive.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/directives/focus.directive.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            renderer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        renderer:     Renderer\n\n                    \n                \n                    \n                        \n                            Type :     Renderer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/directives/focus.directive.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {Directive, ElementRef, Inject, Input, OnChanges, OnInit, Renderer} from '@angular/core';\n\n@Directive({\n  selector: '[focus]'\n})\n\nexport class FocusDirective implements OnChanges, OnInit {\n  @Input() focus: boolean;\n\n  constructor(\n    @Inject(ElementRef) private element: ElementRef, \n    public renderer: Renderer\n  ) {}\n\n  ngOnInit() {\n    this.renderer.invokeElementMethod(this.element.nativeElement,   'focus', []);\n  }\n\n  public ngOnChanges() {\n    this.element.nativeElement.focus();\n  }\n\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GetOrderComponent.html":{"url":"components/GetOrderComponent.html","title":"component - GetOrderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GetOrderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/get-order/get-order.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-get-order\n            \n\n            \n                styleUrls\n                get-order.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./get-order.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                foundIntents\n                            \n                            \n                                    Public\n                                makerAmount\n                            \n                            \n                                    Public\n                                makerToken\n                            \n                            \n                                    Public\n                                orderResponses\n                            \n                            \n                                    Public\n                                receiver\n                            \n                            \n                                    Public\n                                takerToken\n                            \n                            \n                                    Public\n                                tokenList\n                            \n                            \n                                    Public\n                                websocketSubscription\n                            \n                            \n                                    Public\n                                wsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOrder\n                            \n                            \n                                getTokenDecimals\n                            \n                            \n                                getTokenSymbol\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sealDeal\n                            \n                            \n                                stringIsValidNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(web3service: ConnectWeb3Service, wsService: WebsocketService, airswapDexService: AirswapdexService)\n                    \n                \n                        \n                            \n                                Defined in src/app/get-order/get-order.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        web3service\n                                                  \n                                                        \n                                                                    ConnectWeb3Service\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wsService\n                                                  \n                                                        \n                                                                    WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        airswapDexService\n                                                  \n                                                        \n                                                                    AirswapdexService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrder\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrder()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/get-order/get-order.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTokenDecimals\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTokenDecimals(token: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/get-order/get-order.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTokenSymbol\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTokenSymbol(token: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/get-order/get-order.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/get-order/get-order.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/get-order/get-order.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sealDeal\n                            \n                            \n                        \n                    \n                \n                \n                    \nsealDeal(order: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/get-order/get-order.component.ts:97\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        order\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stringIsValidNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \nstringIsValidNumber(x: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/get-order/get-order.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        x\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            foundIntents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        foundIntents:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-order/get-order.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            makerAmount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        makerAmount:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-order/get-order.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            makerToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        makerToken:     Token\n\n                    \n                \n                    \n                        \n                            Type :     Token\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-order/get-order.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            orderResponses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        orderResponses:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-order/get-order.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            receiver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        receiver:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-order/get-order.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            takerToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        takerToken:     Token\n\n                    \n                \n                    \n                        \n                            Type :     Token\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-order/get-order.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tokenList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tokenList:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : EthereumTokensSN\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-order/get-order.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            websocketSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        websocketSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-order/get-order.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            wsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        wsService:     WebsocketService\n\n                    \n                \n                    \n                        \n                            Type :     WebsocketService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-order/get-order.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { ConnectWeb3Service } from '../services/connectWeb3.service';\nimport { WebsocketService } from '../services/websocket.service';\nimport { AirswapdexService } from '../services/airswapdex.service';\n\nimport { EthereumTokensSN, getTokenByAddress } from '../services/tokens';\n\nimport { Token } from '../types/types';\n\n\n@Component({\n  selector: 'app-get-order',\n  templateUrl: './get-order.component.html',\n  styleUrls: ['./get-order.component.scss']\n})\nexport class GetOrderComponent implements OnInit, OnDestroy {\n\n  public receiver: string;\n  public makerAmount: string;\n  public makerToken: Token;\n  public takerToken: Token;\n\n  public tokenList: any[] = EthereumTokensSN;\n  public foundIntents: any[] = [];\n  public orderResponses: any[] = [];\n  public websocketSubscription: Subscription;\n\n  constructor(\n    private web3service: ConnectWeb3Service,\n    public wsService: WebsocketService,\n    private airswapDexService: AirswapdexService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n    if (this.websocketSubscription) { this.websocketSubscription.unsubscribe(); }\n  }\n\n  getTokenDecimals(token: string): number {\n    if (getTokenByAddress(token)) {\n      return 10 ** (getTokenByAddress(token).decimals);\n    } else {\n      return null;\n    }\n  }\n\n  getTokenSymbol(token: string): string {\n    if (getTokenByAddress(token)) {\n      return getTokenByAddress(token).symbol;\n    } else {\n      return null;\n    }\n  }\n\n  stringIsValidNumber(x: string): boolean {\n    return Number(x) >= 0;\n  }\n\n  getOrder(): void {\n    if (this.web3service.web3.utils.isAddress(this.receiver)\n    && Number(this.makerAmount) >= 0\n    && this.makerToken && this.takerToken) {\n\n      const makerDecimal = 10 ** this.makerToken.decimals;\n\n      const uuid = this.wsService.getOrder(\n        this.receiver,\n        (Math.floor(Number(this.makerAmount) * makerDecimal)).toString(),\n        this.makerToken.address,\n        this.takerToken.address,\n        this.web3service.connectedAccount.toLowerCase()\n      );\n\n      this.makerToken = undefined;\n      this.takerToken = undefined;\n      this.makerAmount = undefined;\n\n      this.websocketSubscription = this.wsService.websocketSubject\n      .subscribe(message => {\n        const parsedMessage = JSON.parse(message);\n        const parsedContent = JSON.parse(parsedMessage['message']);\n        const id = parsedContent['id'];\n\n        if (id === uuid) {\n          const signedOrder = parsedContent['result'];\n          this.orderResponses.unshift(signedOrder);\n          this.websocketSubscription.unsubscribe();\n        }\n      });\n    }\n  }\n\n  sealDeal(order: any): void {\n    this.orderResponses = this.orderResponses.filter(\n      x => x.id !== order.id);\n\n    this.airswapDexService.fill(\n      order['makerAddress'], order['makerAmount'], order['makerToken'],\n      order['takerAddress'],  order['takerAmount'], order['takerToken'],\n      order['expiration'], order['nonce'], order['v'], order['r'], order['s']);\n  }\n}\n\n    \n\n    \n        \n  \n    Ask a Peer for a Signed Offer for a Trade\n  \n  \n    \n      \n    \n  \n  \n    \n      \n        \n          {{token.name}} ({{token.address.slice(0,8)}}...)\n        \n      \n    \n    \n      \n        \n          {{token.name}} ({{token.address.slice(0,8)}}...)\n        \n      \n    \n    \n      \n    \n    \n  \n    ASK FOR OFFER\n  \n\n   0'>\n    \n      \n        \n          You got an response from {{order.makerAddress}}\n        \n        \n            Wants to buy {{callGetTokenNameByAddress(intent.takerToken)}}\n         -->\n        \n          He signed the deal to give you \n          {{order.makerAmount / getTokenDecimals(order.makerToken)}}\n          {{getTokenSymbol(order.makerToken)}} ({{order.makerToken.slice(0,8)}}) \n          for {{order.takerAmount / getTokenDecimals(order.takerToken)}} \n          {{getTokenSymbol(order.takerToken)}} ({{order.takerToken.slice(0,8)}})\n        \n        SEAL THE DEAL\n           \n    \n   \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Ask a Peer for a Signed Offer for a Trade                                                  {{token.name}} ({{token.address.slice(0,8)}}...)                                              {{token.name}} ({{token.address.slice(0,8)}}...)                                          ASK FOR OFFER     0\\'>                            You got an response from {{order.makerAddress}}                            Wants to buy {{callGetTokenNameByAddress(intent.takerToken)}}         -->                  He signed the deal to give you           {{order.makerAmount / getTokenDecimals(order.makerToken)}}          {{getTokenSymbol(order.makerToken)}} ({{order.makerToken.slice(0,8)}})           for {{order.takerAmount / getTokenDecimals(order.takerToken)}}           {{getTokenSymbol(order.takerToken)}} ({{order.takerToken.slice(0,8)}})                SEAL THE DEAL                  '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AnswerOrdersComponent', 'selector': 'app-answer-orders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddPeerComponent', 'selector': 'app-dialog-add-peer'},{'name': 'DialogAddTokenComponent', 'selector': 'app-dialog-add-token'},{'name': 'DialogGetOrderComponent', 'selector': 'app-dialog-get-order'},{'name': 'DialogSendOfflineComponent', 'selector': 'app-dialog-send-offline'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FindIntentsComponent', 'selector': 'app-find-intents'},{'name': 'GetOrderComponent', 'selector': 'app-get-order'},{'name': 'InitialPageComponent', 'selector': 'app-initial-page'},{'name': 'MainframeComponent', 'selector': 'app-mainframe'},{'name': 'MessageSystemComponent', 'selector': 'app-message-system'},{'name': 'MyAccountComponent', 'selector': 'app-my-account'},{'name': 'SetIntentsComponent', 'selector': 'app-set-intents'},{'name': 'VerifyUserComponent', 'selector': 'app-verify-user'},{'name': 'WhosOnlineComponent', 'selector': 'app-whos-online'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'},{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'GetOrderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetOrderService.html":{"url":"injectables/GetOrderService.html","title":"injectable - GetOrderService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GetOrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/get-order.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                orderResponses\n                            \n                            \n                                    Public\n                                sentOrders\n                            \n                            \n                                    Public\n                                websocketSubscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                countOrderResponses\n                            \n                            \n                                sendGetOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseService: FirebaseService, wsService: WebsocketService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/get-order.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                    FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wsService\n                                                  \n                                                        \n                                                                    WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            countOrderResponses\n                            \n                            \n                        \n                    \n                \n                \n                    \ncountOrderResponses()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/get-order.service.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendGetOrder\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendGetOrder(order: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/get-order.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        order\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            orderResponses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        orderResponses:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/get-order.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sentOrders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sentOrders:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/get-order.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            websocketSubscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        websocketSubscriptions:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/get-order.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n// services\nimport { FirebaseService } from '../services/firebase.service';\nimport { WebsocketService } from './websocket.service';\n\nimport { TimerObservable } from 'rxjs/observable/TimerObservable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetOrderService {\n  public websocketSubscriptions: any = {};\n\n  public sentOrders: any = {};\n  public orderResponses: any = [];\n\n  constructor(\n    private firebaseService: FirebaseService,\n    private wsService: WebsocketService,\n  ) { }\n\n  sendGetOrder(order: any): string {\n    const uuid = this.wsService.getOrder(\n      order.makerAddress,\n      order.makerAmount,\n      order.makerToken,\n      order.takerToken,\n      order.takerAddress\n    );\n    this.sentOrders[uuid] = order;\n\n    this.websocketSubscriptions[uuid] = this.wsService.websocketSubject\n    .subscribe(message => {\n      const parsedMessage = JSON.parse(message);\n      const parsedContent = JSON.parse(parsedMessage['message']);\n      const id = parsedContent['id'];\n\n      if (id === uuid\n        && parsedContent['method']\n        && parsedContent['method'] === 'orderResponse') {\n        const signedOrder = parsedContent['result'];\n        signedOrder['clickedDealSeal'] = false;\n\n        signedOrder['timedOut'] = false;\n        signedOrder['timer'] = TimerObservable.create(0, 1000)\n        .subscribe( () => {\n          const currentTime = Date.now() / 1000;\n          const difference = signedOrder['expiration'] - currentTime;\n          signedOrder['minutesLeft'] = Math.floor(difference / 60);\n          signedOrder['secondsLeft'] = Math.floor(difference % 60);\n\n          if (signedOrder['minutesLeft']  x.id !== signedOrder.id\n            );\n          }\n        });\n        this.firebaseService.getUserAliasFromAddress(signedOrder.makerAddress)\n        .then(alias => {\n          signedOrder['alias'] = alias;\n          this.orderResponses.push(signedOrder);\n          this.websocketSubscriptions[uuid].unsubscribe();\n        });\n      }\n    });\n    return uuid;\n  }\n\n  countOrderResponses(): number {\n    return this.orderResponses.length;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InitialPageComponent.html":{"url":"components/InitialPageComponent.html","title":"component - InitialPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InitialPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/initial-page/initial-page.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-initial-page\n            \n\n            \n                styleUrls\n                initial-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./initial-page.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/initial-page/initial-page.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/initial-page/initial-page.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/initial-page/initial-page.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'app-initial-page',\n  templateUrl: './initial-page.component.html',\n  styleUrls: ['./initial-page.component.scss']\n})\nexport class InitialPageComponent implements OnInit, OnDestroy {\n\n  constructor(\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n  }\n\n\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AnswerOrdersComponent', 'selector': 'app-answer-orders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddPeerComponent', 'selector': 'app-dialog-add-peer'},{'name': 'DialogAddTokenComponent', 'selector': 'app-dialog-add-token'},{'name': 'DialogGetOrderComponent', 'selector': 'app-dialog-get-order'},{'name': 'DialogSendOfflineComponent', 'selector': 'app-dialog-send-offline'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FindIntentsComponent', 'selector': 'app-find-intents'},{'name': 'GetOrderComponent', 'selector': 'app-get-order'},{'name': 'InitialPageComponent', 'selector': 'app-initial-page'},{'name': 'MainframeComponent', 'selector': 'app-mainframe'},{'name': 'MessageSystemComponent', 'selector': 'app-message-system'},{'name': 'MyAccountComponent', 'selector': 'app-my-account'},{'name': 'SetIntentsComponent', 'selector': 'app-set-intents'},{'name': 'VerifyUserComponent', 'selector': 'app-verify-user'},{'name': 'WhosOnlineComponent', 'selector': 'app-whos-online'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'},{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'InitialPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoggedInUser.html":{"url":"interfaces/LoggedInUser.html","title":"interface - LoggedInUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoggedInUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/types/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        alias\n                                \n                                \n                                        uid\n                                \n                                \n                                        wsAddress\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        alias\n                                    \n                                \n                                \n                                    \n                                        alias:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wsAddress\n                                    \n                                \n                                \n                                    \n                                        wsAddress:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Message {\n  user: string;\n  message: string;\n  timestamp: number;\n}\n\nexport interface StoredMessage {\n  uid: string;\n  message: string;\n  timestamp: number;\n}\n\nexport interface Peer {\n  address: string;\n  messageHistory: Message[];\n  hasUnreadMessages: boolean;\n  isOnline: boolean;\n  alias: string;\n  uid: string;\n}\n\nexport interface Token {\n  address: string;\n  name: string;\n  symbol: string;\n  decimals: number;\n}\n\nexport interface LoggedInUser {\n  address: string;\n  wsAddress: string;\n  alias: string;\n  uid: string;\n}\nexport interface OtherUser {\n  address: string;\n  alias: string;\n  uid: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainframeComponent.html":{"url":"components/MainframeComponent.html","title":"component - MainframeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainframeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/mainframe/mainframe.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-mainframe\n            \n\n            \n                styleUrls\n                mainframe.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./mainframe.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                connectionService\n                            \n                            \n                                    Public\n                                firebaseService\n                            \n                            \n                                    Public\n                                messageService\n                            \n                            \n                                    Public\n                                numUnreadAnswers\n                            \n                            \n                                    Public\n                                numUnreadMessages\n                            \n                            \n                                    Public\n                                numWhosOnline\n                            \n                            \n                                    Public\n                                showAnswerBadge\n                            \n                            \n                                    Public\n                                showMessageBadge\n                            \n                            \n                                    Public\n                                showWhosOnlineBadge\n                            \n                            \n                                    Public\n                                timer\n                            \n                            \n                                    Public\n                                web3service\n                            \n                            \n                                    Public\n                                wsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authUser\n                            \n                            \n                                connectionInitialized\n                            \n                            \n                                connectWebsocket\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setTitle\n                            \n                            \n                                toggleMessenger\n                            \n                            \n                                updateNumbers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth, columnSpaceObserver: ColumnSpaceObserverService, getOrderService: GetOrderService, orderRequestsService: OrderRequestsService, tokenService: TokenService, connectionService: ConnectionService, firebaseService: FirebaseService, messageService: MessagingService, titleService: Title, userOnlineService: UserOnlineService, web3service: ConnectWeb3Service, wsService: WebsocketService)\n                    \n                \n                        \n                            \n                                Defined in src/app/mainframe/mainframe.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        columnSpaceObserver\n                                                  \n                                                        \n                                                                    ColumnSpaceObserverService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        getOrderService\n                                                  \n                                                        \n                                                                    GetOrderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        orderRequestsService\n                                                  \n                                                        \n                                                                    OrderRequestsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                    TokenService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        connectionService\n                                                  \n                                                        \n                                                                    ConnectionService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                    FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessagingService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        userOnlineService\n                                                  \n                                                        \n                                                                    UserOnlineService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        web3service\n                                                  \n                                                        \n                                                                    ConnectWeb3Service\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wsService\n                                                  \n                                                        \n                                                                    WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nauthUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/mainframe/mainframe.component.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectionInitialized\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnectionInitialized()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/mainframe/mainframe.component.ts:98\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectWebsocket\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnectWebsocket()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/mainframe/mainframe.component.ts:88\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/mainframe/mainframe.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/mainframe/mainframe.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTitle(newTitle: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/mainframe/mainframe.component.ts:138\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newTitle\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleMessenger\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleMessenger()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/mainframe/mainframe.component.ts:118\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateNumbers\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateNumbers()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/mainframe/mainframe.component.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connectionService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        connectionService:     ConnectionService\n\n                    \n                \n                    \n                        \n                            Type :     ConnectionService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mainframe/mainframe.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firebaseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firebaseService:     FirebaseService\n\n                    \n                \n                    \n                        \n                            Type :     FirebaseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mainframe/mainframe.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            messageService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        messageService:     MessagingService\n\n                    \n                \n                    \n                        \n                            Type :     MessagingService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mainframe/mainframe.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numUnreadAnswers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numUnreadAnswers:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mainframe/mainframe.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numUnreadMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numUnreadMessages:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mainframe/mainframe.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numWhosOnline\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numWhosOnline:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mainframe/mainframe.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showAnswerBadge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showAnswerBadge:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mainframe/mainframe.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showMessageBadge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showMessageBadge:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mainframe/mainframe.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showWhosOnlineBadge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showWhosOnlineBadge:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mainframe/mainframe.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timer:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mainframe/mainframe.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            web3service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        web3service:     ConnectWeb3Service\n\n                    \n                \n                    \n                        \n                            Type :     ConnectWeb3Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mainframe/mainframe.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            wsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        wsService:     WebsocketService\n\n                    \n                \n                    \n                        \n                            Type :     WebsocketService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mainframe/mainframe.component.ts:57\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\n\n// services\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { ColumnSpaceObserverService } from '../services/column-space-observer.service';\nimport { ConnectionService } from '../services/connection.service';\nimport { ConnectWeb3Service } from '../services/connectWeb3.service';\nimport { FirebaseService } from '../services/firebase.service';\nimport { GetOrderService } from '../services/get-order.service';\nimport { MessagingService } from '../services/messaging.service';\nimport { OrderRequestsService } from '../services/order-requests.service';\nimport { TokenService } from '../services/token.service';\nimport { UserOnlineService } from '../services/user-online.service';\nimport { WebsocketService } from '../services/websocket.service';\n\n// components\nimport { AccountComponent } from '../account/account.component';\nimport { SetIntentsComponent } from '../set-intents/set-intents.component';\nimport { FindIntentsComponent } from '../find-intents/find-intents.component';\nimport { GetOrderComponent } from '../get-order/get-order.component';\nimport { AnswerOrdersComponent } from '../answer-orders/answer-orders.component';\nimport { MessageSystemComponent } from '../message-system/message-system.component';\nimport { InitialPageComponent } from '../initial-page/initial-page.component';\nimport { TimerObservable } from 'rxjs/observable/TimerObservable';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-mainframe',\n  templateUrl: './mainframe.component.html',\n  styleUrls: ['./mainframe.component.scss']\n})\nexport class MainframeComponent implements OnInit, OnDestroy {\n\n  public showMessageBadge = false;\n  public numUnreadMessages = 0;\n\n  public showAnswerBadge = false;\n  public numUnreadAnswers = 0;\n\n  public showWhosOnlineBadge = false;\n  public numWhosOnline = 0;\n\n  public timer: any;\n\n  constructor(\n    private afAuth: AngularFireAuth,\n    private columnSpaceObserver: ColumnSpaceObserverService,\n    private getOrderService: GetOrderService,\n    private orderRequestsService: OrderRequestsService,\n    private tokenService: TokenService,\n    public connectionService: ConnectionService,\n    public firebaseService: FirebaseService,\n    public messageService: MessagingService,\n    private titleService: Title,\n    private userOnlineService: UserOnlineService,\n    public web3service: ConnectWeb3Service,\n    public wsService: WebsocketService,\n  ) {}\n\n\n  ngOnInit() {\n    this.authUser(); // check for log in of user to firebase\n    this.tokenService.getValidatedTokens(); // load the validated token list\n  }\n\n  ngOnDestroy() {\n    if (this.timer) {\n      this.timer.unsubscribe();\n    }\n  }\n\n  authUser(): void {\n    // listen for auth of user\n    this.afAuth.auth.onAuthStateChanged((user) => { // triggers everytime the auth state changes\n      if (user && user.uid) { // is user logged in?\n        this.connectionService.firebaseConnected = true;\n        this.connectionService.loggedInUser.alias = user.displayName;\n        this.connectionService.loggedInUser.uid = user.uid;\n        if (this.connectionService.connected) { // all connections standing? start!\n          this.connectionInitialized();\n        }\n      } else {\n        this.connectionService.firebaseConnected = false;\n      }\n    });\n  }\n\n  connectWebsocket(): void {\n    // on button click\n    this.wsService.initSocket() // initiate handshake with websocket\n    .then((connected) => { // websocket succeeded\n      if (connected && this.connectionService.connected) { // websocket and firebase? start!\n        this.connectionInitialized();\n      }\n    });\n  }\n\n  connectionInitialized(): void {\n    if (this.connectionService.connected\n    && this.firebaseService.user.emailVerified) {\n      this.firebaseService.userIsVerified = true;\n\n      // read number of unread messages & deals\n      this.timer = TimerObservable.create(0, 2000)\n      .subscribe( () => this.updateNumbers());\n\n      this.tokenService.getCustomTokenListFromDB(); // load custom token list from firebase\n      this.firebaseService.registerUser() // set user as online\n      .then(() => {\n        // check if I have unreceived messages\n        // and start listening for messages from others\n        this.messageService.startMessenger();\n        // this.firebaseService.readUserList();\n      });\n    }\n  }\n\n  toggleMessenger(): void {\n    this.messageService.showMessenger = !this.messageService.showMessenger;\n  }\n\n  updateNumbers(): void {\n    this.numUnreadMessages = this.messageService.unreadMessages;\n    this.showMessageBadge = this.numUnreadMessages > 0;\n\n    this.numUnreadAnswers = this.orderRequestsService.openRequests\n                            + this.getOrderService.countOrderResponses();\n    this.showAnswerBadge = this.numUnreadAnswers > 0;\n\n    const sum_unread = this.numUnreadAnswers + this.numUnreadMessages;\n    if (sum_unread > 0) {\n      this.setTitle('(' + sum_unread + ') AirSwapChat');\n    } else {\n      this.setTitle('AirSwapChat');\n    }\n  }\n\n  setTitle(newTitle: string) {\n    this.titleService.setTitle( newTitle );\n  }\n}\n\n    \n\n    \n        \n  AirSwapChat\n\n\n\n  \n    \n      \n        \n          face\n          FIND PEERS\n        \n      \n\n      \n        chat\n        MESSAGE\n      \n        \n      \n        \n          create\n          INTENTS\n        \n      \n\n      \n        \n          \n            mail\n          \n          ANSWER\n        \n      \n\n      \n        \n          \n            people\n          \n          ONLINE\n        \n      \n      \n      \n        \n          \n            person\n          \n          ACCOUNT\n        \n      \n\n      \n        \n          \n            bar_chart\n          \n          SwapWatch\n        \n      \n      \n  \n\n  \n    \n      \n        \n      \n      \n          \n            \n              Peer-to-Peer Trading based on AirSwap\n            \n            \n               Make yourself visible, find peers, connect, trade\n            \n            \n              \n                No need for order books. Negotiate privately & buy/sell every ERC20 token for any ERC20 token at the price that you and your counterparty agree upon.\n              \n            \n          \n          \n          \n            {{wsService.infoMessage}}\n            \n              Click to Connect with AirSwap\n            \n          \n          \n          \n            \n          \n          \n            \n          \n      \n      \n        Login to Metamask to access the platform\n       \n    \n  \n  \n    \n  \n\n\n\n  \n     \n  \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  AirSwapChat                              face          FIND PEERS                            chat        MESSAGE                                      create          INTENTS                                                  mail                    ANSWER                                                  people                    ONLINE                                                        person                    ACCOUNT                                                  bar_chart                    SwapWatch                                                                                          Peer-to-Peer Trading based on AirSwap                                       Make yourself visible, find peers, connect, trade                                                      No need for order books. Negotiate privately & buy/sell every ERC20 token for any ERC20 token at the price that you and your counterparty agree upon.                                                                    {{wsService.infoMessage}}                          Click to Connect with AirSwap                                                                                                                    Login to Metamask to access the platform                                  '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AnswerOrdersComponent', 'selector': 'app-answer-orders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddPeerComponent', 'selector': 'app-dialog-add-peer'},{'name': 'DialogAddTokenComponent', 'selector': 'app-dialog-add-token'},{'name': 'DialogGetOrderComponent', 'selector': 'app-dialog-get-order'},{'name': 'DialogSendOfflineComponent', 'selector': 'app-dialog-send-offline'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FindIntentsComponent', 'selector': 'app-find-intents'},{'name': 'GetOrderComponent', 'selector': 'app-get-order'},{'name': 'InitialPageComponent', 'selector': 'app-initial-page'},{'name': 'MainframeComponent', 'selector': 'app-mainframe'},{'name': 'MessageSystemComponent', 'selector': 'app-message-system'},{'name': 'MyAccountComponent', 'selector': 'app-my-account'},{'name': 'SetIntentsComponent', 'selector': 'app-set-intents'},{'name': 'VerifyUserComponent', 'selector': 'app-verify-user'},{'name': 'WhosOnlineComponent', 'selector': 'app-whos-online'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'},{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainframeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/types/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                                \n                                        timestamp\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Message {\n  user: string;\n  message: string;\n  timestamp: number;\n}\n\nexport interface StoredMessage {\n  uid: string;\n  message: string;\n  timestamp: number;\n}\n\nexport interface Peer {\n  address: string;\n  messageHistory: Message[];\n  hasUnreadMessages: boolean;\n  isOnline: boolean;\n  alias: string;\n  uid: string;\n}\n\nexport interface Token {\n  address: string;\n  name: string;\n  symbol: string;\n  decimals: number;\n}\n\nexport interface LoggedInUser {\n  address: string;\n  wsAddress: string;\n  alias: string;\n  uid: string;\n}\nexport interface OtherUser {\n  address: string;\n  alias: string;\n  uid: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessageSystemComponent.html":{"url":"components/MessageSystemComponent.html","title":"component - MessageSystemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MessageSystemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/message-system/message-system.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-message-system\n            \n\n            \n                styleUrls\n                message-system.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./message-system.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                messageService\n                            \n                            \n                                    Public\n                                timer\n                            \n                            \n                                    Public\n                                wsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPeerAsFriend\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialogAddPeer\n                            \n                            \n                                sendMessage\n                            \n                            \n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(web3service: ConnectWeb3Service, messageService: MessagingService, firebaseService: FirebaseService, wsService: WebsocketService, zone: NgZone, db: AngularFireDatabase, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/message-system/message-system.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        web3service\n                                                  \n                                                        \n                                                                    ConnectWeb3Service\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessagingService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                    FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wsService\n                                                  \n                                                        \n                                                                    WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addPeerAsFriend\n                            \n                            \n                        \n                    \n                \n                \n                    \naddPeerAsFriend()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/message-system/message-system.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/message-system/message-system.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/message-system/message-system.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDialogAddPeer\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDialogAddPeer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/message-system/message-system.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendMessage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/message-system/message-system.component.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateStatus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/message-system/message-system.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialog:     MatDialog\n\n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/message-system/message-system.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/message-system/message-system.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            messageService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        messageService:     MessagingService\n\n                    \n                \n                    \n                        \n                            Type :     MessagingService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/message-system/message-system.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timer:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/message-system/message-system.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            wsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        wsService:     WebsocketService\n\n                    \n                \n                    \n                        \n                            Type :     WebsocketService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/message-system/message-system.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, NgZone, OnInit, OnDestroy } from '@angular/core';\nimport { AngularFireDatabase, AngularFireObject } from 'angularfire2/database';\n\n// services\nimport { ConnectWeb3Service } from '../services/connectWeb3.service';\nimport { FirebaseService } from '../services/firebase.service';\nimport { MessagingService } from '../services/messaging.service';\nimport { WebsocketService } from '../services/websocket.service';\n\nimport { MatDialog } from '@angular/material';\nimport { DialogAddPeerComponent } from './dialog-add-peer/dialog-add-peer.component';\n\nimport { TimerObservable } from 'rxjs/observable/TimerObservable';\n\nimport { Message, Peer } from '../types/types';\n\n@Component({\n  selector: 'app-message-system',\n  templateUrl: './message-system.component.html',\n  styleUrls: ['./message-system.component.scss']\n})\nexport class MessageSystemComponent implements OnInit, OnDestroy {\n\n  public message = ''; // text entered in message box\n\n  public timer: any;\n\n  constructor(\n    private web3service: ConnectWeb3Service,\n    public messageService: MessagingService,\n    private firebaseService: FirebaseService,\n    public wsService: WebsocketService,\n    private zone: NgZone,\n    private db: AngularFireDatabase,\n    public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.timer = TimerObservable.create(0, 5000)\n    .subscribe( () => this.updateStatus());\n  }\n\n  ngOnDestroy() {\n    if (this.timer) {\n      this.timer.unsubscribe();\n    }\n  }\n\n  updateStatus(): void {\n    if (this.messageService.selectedPeer) {\n      this.messageService.setMessageRead();\n    }\n    // this.messageService.checkOnlineStatusOfPeerList();\n  }\n\n  openDialogAddPeer() {\n    const dialogRef = this.dialog.open(DialogAddPeerComponent, {\n      width: '400px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (this.web3service.web3.utils.isAddress(result)) {\n        this.messageService.getPeerAndAddByAddress(result)\n        .then(peer => {\n          this.messageService.selectedPeer = peer;\n        });\n      } else { console.log('Entered invalid address.'); }\n    });\n  }\n\n  sendMessage(): void {\n    if (this.message && this.message.trim().length > 0\n        && !this.messageService.sendingMessage) {\n      this.messageService.sendMessage(this.message.trim());\n      this.message = '';\n    }\n  }\n\n  addPeerAsFriend(): void {\n    if (this.messageService.selectedPeer && this.messageService.selectedPeer.uid) {\n      this.firebaseService.addPeerAsFriend(this.messageService.selectedPeer.uid);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n    \n      \n         0\"\n            style=\"width: 100%;\">\n          \n            \n              {{peer.alias}}\n              \n              \n                \n            \n          \n          \n          \n          \n            person_add\n          \n          \n            add\n            \n        \n        Add Peer\n        \n          \n         -->\n      \n    \n  \n\n  \n   0 \n  && this.messageService.selectedPeer.messageHistory.length > 0\"\n  #scrollMe [scrollTop]=\"scrollMe.scrollHeight\">\n    \n      \n        \n          \n            {{msg.user}}\n          \n          \n          \n          \n            {{msg.timestamp | date: 'HH:mm'}}\n          \n        \n        \n          {{msg.message}}\n        \n      \n\n      \n        \n          \n            {{msg.user}}\n          \n          \n          \n          \n            {{msg.timestamp | date: 'HH:mm'}}\n          \n        \n        \n          {{msg.message}}\n        \n      \n    \n  \n    \n  \n    \n      \n        \n        \n          send\n        \n      \n    \n  \n\n\n\n\n\n  Send a message to a peer\n  \n    \n      Receiver\n      \n    \n\n    \n      Message\n      \n    \n    \n    Send\n  \n -->\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                         0\"            style=\"width: 100%;\">                                    {{peer.alias}}                                                                                                            person_add                                add                            Add Peer                           -->                 0   && this.messageService.selectedPeer.messageHistory.length > 0\"  #scrollMe [scrollTop]=\"scrollMe.scrollHeight\">                                        {{msg.user}}                                                    {{msg.timestamp | date: \\'HH:mm\\'}}                                    {{msg.message}}                                                  {{msg.user}}                                                    {{msg.timestamp | date: \\'HH:mm\\'}}                                    {{msg.message}}                                                              send                      Send a message to a peer            Receiver                    Message                  Send   -->'\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AnswerOrdersComponent', 'selector': 'app-answer-orders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddPeerComponent', 'selector': 'app-dialog-add-peer'},{'name': 'DialogAddTokenComponent', 'selector': 'app-dialog-add-token'},{'name': 'DialogGetOrderComponent', 'selector': 'app-dialog-get-order'},{'name': 'DialogSendOfflineComponent', 'selector': 'app-dialog-send-offline'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FindIntentsComponent', 'selector': 'app-find-intents'},{'name': 'GetOrderComponent', 'selector': 'app-get-order'},{'name': 'InitialPageComponent', 'selector': 'app-initial-page'},{'name': 'MainframeComponent', 'selector': 'app-mainframe'},{'name': 'MessageSystemComponent', 'selector': 'app-message-system'},{'name': 'MyAccountComponent', 'selector': 'app-my-account'},{'name': 'SetIntentsComponent', 'selector': 'app-set-intents'},{'name': 'VerifyUserComponent', 'selector': 'app-verify-user'},{'name': 'WhosOnlineComponent', 'selector': 'app-whos-online'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'},{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MessageSystemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyAccountComponent.html":{"url":"components/MyAccountComponent.html","title":"component - MyAccountComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MyAccountComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/my-account/my-account.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-my-account\n            \n\n            \n                styleUrls\n                my-account.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./my-account.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buttonVerb\n                            \n                            \n                                    Public\n                                connectionService\n                            \n                            \n                                    Public\n                                errorMessage\n                            \n                            \n                                    Public\n                                firebaseService\n                            \n                            \n                                    Public\n                                newAlias\n                            \n                            \n                                    Public\n                                wantsToChangeAlias\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                acceptAliasChange\n                            \n                            \n                                changeAlias\n                            \n                            \n                                deleteMe\n                            \n                            \n                                logOut\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(connectionService: ConnectionService, firebaseService: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/my-account/my-account.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connectionService\n                                                  \n                                                        \n                                                                    ConnectionService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                    FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acceptAliasChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nacceptAliasChange()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/my-account/my-account.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeAlias\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeAlias()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/my-account/my-account.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteMe\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteMe()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/my-account/my-account.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/my-account/my-account.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/my-account/my-account.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buttonVerb\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonVerb:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'CHANGE'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/my-account/my-account.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connectionService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        connectionService:     ConnectionService\n\n                    \n                \n                    \n                        \n                            Type :     ConnectionService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/my-account/my-account.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/my-account/my-account.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firebaseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firebaseService:     FirebaseService\n\n                    \n                \n                    \n                        \n                            Type :     FirebaseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/my-account/my-account.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            newAlias\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newAlias:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/my-account/my-account.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            wantsToChangeAlias\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        wantsToChangeAlias:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/my-account/my-account.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { ConnectionService } from '../services/connection.service';\nimport { FirebaseService } from '../services/firebase.service';\n\n\n@Component({\n  selector: 'app-my-account',\n  templateUrl: './my-account.component.html',\n  styleUrls: ['./my-account.component.scss']\n})\nexport class MyAccountComponent implements OnInit {\n\n  public wantsToChangeAlias = false;\n  public newAlias: string;\n  public buttonVerb = 'CHANGE';\n\n  public errorMessage = '';\n\n  constructor(\n    public connectionService: ConnectionService,\n    public firebaseService: FirebaseService,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  changeAlias(): void {\n    if (this.wantsToChangeAlias) {\n      this.acceptAliasChange();\n    } else {\n      this.newAlias = this.connectionService.loggedInUser.alias;\n      this.wantsToChangeAlias = true;\n      this.buttonVerb = 'SET';\n    }\n  }\n\n  acceptAliasChange(): void {\n    this.firebaseService.updateName(this.newAlias);\n    this.wantsToChangeAlias = false;\n    this.buttonVerb = 'CHANGE';\n\n  }\n\n  logOut(): void {\n    this.firebaseService.logOffUser();\n  }\n\n  deleteMe(): void {\n    this.firebaseService.deleteUser()\n    .catch(error => {\n      if (error.code && error.code === 'auth/requires-recent-login') {\n        this.errorMessage = 'Your last login is too long back. ' +\n          'Please logoff + login again if you want to delete your account.';\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        You are logged in as \n        \n          {{connectionService.loggedInUser.alias}}\n        \n        \n          \n            \n          \n        \n      \n      \n        Address {{connectionService.loggedInUser.address}}\n      \n      \n        {{buttonVerb}} ALIAS\n      \n      \n        LOG OUT\n      \n      \n        DELETE ME\n      \n    \n  \n  \n    {{errorMessage}}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    You are logged in as                   {{connectionService.loggedInUser.alias}}                                                                            Address {{connectionService.loggedInUser.address}}                    {{buttonVerb}} ALIAS                    LOG OUT                    DELETE ME                  {{errorMessage}}  '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AnswerOrdersComponent', 'selector': 'app-answer-orders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddPeerComponent', 'selector': 'app-dialog-add-peer'},{'name': 'DialogAddTokenComponent', 'selector': 'app-dialog-add-token'},{'name': 'DialogGetOrderComponent', 'selector': 'app-dialog-get-order'},{'name': 'DialogSendOfflineComponent', 'selector': 'app-dialog-send-offline'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FindIntentsComponent', 'selector': 'app-find-intents'},{'name': 'GetOrderComponent', 'selector': 'app-get-order'},{'name': 'InitialPageComponent', 'selector': 'app-initial-page'},{'name': 'MainframeComponent', 'selector': 'app-mainframe'},{'name': 'MessageSystemComponent', 'selector': 'app-message-system'},{'name': 'MyAccountComponent', 'selector': 'app-my-account'},{'name': 'SetIntentsComponent', 'selector': 'app-set-intents'},{'name': 'VerifyUserComponent', 'selector': 'app-verify-user'},{'name': 'WhosOnlineComponent', 'selector': 'app-whos-online'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'},{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MyAccountComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgMaterialModule.html":{"url":"modules/NgMaterialModule.html","title":"module - NgMaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  NgMaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ng-material/ng-material.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatBadgeModule, MatBottomSheetModule, MatButtonModule,\n  MatCardModule, MatCheckboxModule, MatDialogModule, MatFormFieldModule,\n  MatGridListModule, MatIconModule, MatInputModule, MatListModule, MatProgressSpinnerModule,\n  MatPaginatorModule, MatSelectModule, MatSidenavModule, MatSnackBarModule,\n  MatTableModule, MatTabsModule, MatToolbarModule, MatTooltipModule\n  } from '@angular/material';\n@NgModule({\n  imports: [\n    CommonModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatListModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n  ],\n  exports: [\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatListModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n  ],\n  declarations: [\n  ]\n})\nexport class NgMaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Order.html":{"url":"interfaces/Order.html","title":"interface - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/answer-orders/answer-orders.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        makerAddress\n                                \n                                \n                                        makerAmount\n                                \n                                \n                                        makerToken\n                                \n                                \n                                        takerAddress\n                                \n                                \n                                        takerToken\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        makerAddress\n                                    \n                                \n                                \n                                    \n                                        makerAddress:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        makerAmount\n                                    \n                                \n                                \n                                    \n                                        makerAmount:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        makerToken\n                                    \n                                \n                                \n                                    \n                                        makerToken:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        takerAddress\n                                    \n                                \n                                \n                                    \n                                        takerAddress:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        takerToken\n                                    \n                                \n                                \n                                    \n                                        takerToken:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\n// services\nimport { AirswapdexService } from '../services/airswapdex.service';\nimport { ConnectionService } from '../services/connection.service';\nimport { ConnectWeb3Service } from '../services/connectWeb3.service';\nimport { WebsocketService } from '../services/websocket.service';\nimport { OrderRequestsService } from '../services/order-requests.service';\nimport { GetOrderService } from '../services/get-order.service';\nimport { EthereumTokensSN, getTokenByAddress } from '../services/tokens';\n\nimport { TimerObservable } from 'rxjs/observable/TimerObservable';\n\ninterface Order {\n  makerAddress: string;\n  makerAmount: string;\n  makerToken: string;\n  takerToken: string;\n  takerAddress: string;\n}\n\n@Component({\n  selector: 'app-answer-orders',\n  templateUrl: './answer-orders.component.html',\n  styleUrls: ['./answer-orders.component.scss']\n})\nexport class AnswerOrdersComponent implements OnInit, OnDestroy {\n\n  public isOpen = true;\n  public orders: Order[] = [];\n  public takerAmount: any = {};\n  public websocketSubscription: Subscription;\n  public openOrderIds: any = {};\n  public expiration = 5;\n  public timers: any = {};\n\n  constructor(\n    private airswapDexService: AirswapdexService,\n    private connectionService: ConnectionService,\n    public getOrderService: GetOrderService,\n    public orderService: OrderRequestsService,\n    private web3service: ConnectWeb3Service,\n    public wsService: WebsocketService,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n    if (this.websocketSubscription) { this.websocketSubscription.unsubscribe(); }\n  }\n\n  toFixed(x) {\n    if (Math.abs(x)  20) {\n          e -= 20;\n          x /= Math.pow(10, e);\n          x += (new Array(e + 1)).join('0');\n      }\n    }\n    return x;\n  }\n\n  takerHasEnough(order: any): boolean {\n    return (this.takerAmount[order.id]  {\n    order['nonce'] = Math.round(Math.random() * 100 * Date.now()).toString();\n    order['expiration'] = Math.round(Date.now() / 1000 + this.expiration * 60).toString();\n\n    const hashV = this.web3service.web3.utils.soliditySha3(\n      order['makerAddress'],\n      order['makerAmount'],\n      order['makerToken'],\n      order['takerAddress'],\n      order['takerAmount'],\n      order['takerToken'],\n      order['expiration'],\n      order['nonce']\n    );\n    const prefixedHash =\n      this.web3service.web3.eth.accounts.hashMessage(hashV);\n\n    return this.web3service.web3.eth.sign(prefixedHash, this.web3service.connectedAccount)\n    .then((signedMessage) => {\n      let v, r, s;\n      r = signedMessage.slice(0, 66);\n      s = '0x' + signedMessage.slice(66, 130);\n      v = this.web3service.web3.utils.hexToNumber('0x' + signedMessage.slice(130, 132));\n      order['v'] = v;\n      order['r'] = r;\n      order['s'] = s;\n      return order;\n    });\n  }\n\n  answerOrder(order: any): void {\n    if (Number(this.takerAmount[order.id]) >= 0 && this.takerHasEnough(order)) {\n      order['clickedOfferDeal'] = true;\n      order['takerAmount'] = (Math.floor(Number(this.takerAmount[order.id]) * order['takerDecimals'])).toString();\n      order['takerAmount'] = this.toFixed(order['takerAmount']);\n      order['makerAmount'] = this.toFixed(order['makerAmount']);\n      const uuid = order.id;\n      // delete order.id;\n\n      this.sign_order(order)\n      .then(fullOrder => {\n        this.wsService.sendOrder(order['takerAddress'], fullOrder, uuid);\n        this.orderService.orderRequests = this.orderService.orderRequests.filter(\n          x => x.id !== uuid);\n      }).catch(error => {\n        console.log('Sign failed.');\n        order['clickedOfferDeal'] = false;\n      });\n    }\n  }\n\n  count(obj: any): number {\n    return Object.keys(obj).length;\n  }\n\n  sealDeal(order: any): void {\n    order['clickedDealSeal'] = true;\n    this.airswapDexService.fill(\n    order['makerAddress'], order['makerAmount'], order['makerToken'],\n    order['takerAddress'],  order['takerAmount'], order['takerToken'],\n    order['expiration'], order['nonce'], order['v'], order['r'], order['s'])\n    .then(() => {\n      this.getOrderService.orderResponses =\n      this.getOrderService.orderResponses.filter(\n        x => x.id !== order.id\n      );\n    }).catch(error => {\n      console.log('Deal was not sealed.');\n      order['clickedDealSeal'] = false;\n    });\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderRequestsService.html":{"url":"injectables/OrderRequestsService.html","title":"injectable - OrderRequestsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  OrderRequestsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/order-requests.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                orderRequests\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(erc20service: Erc20Service, firebaseService: FirebaseService, web3service: ConnectWeb3Service, tokenService: TokenService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/order-requests.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        erc20service\n                                                  \n                                                        \n                                                                    Erc20Service\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                    FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        web3service\n                                                  \n                                                        \n                                                                    ConnectWeb3Service\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                    TokenService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addOrder\n                            \n                            \n                        \n                    \n                \n                \n                    \naddOrder(order: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/order-requests.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        order\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            orderRequests\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        orderRequests:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/order-requests.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        openRequests\n                    \n                \n\n                \n                    \n                        getopenRequests()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/order-requests.service.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { } from '../types/types';\n\nimport { ConnectWeb3Service } from './connectWeb3.service';\nimport { TokenService, EtherAddress } from './token.service';\nimport { Erc20Service } from './erc20.service';\nimport { FirebaseService } from './firebase.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderRequestsService {\n\n  public orderRequests: any[] = [];\n  constructor(\n    private erc20service: Erc20Service,\n    private firebaseService: FirebaseService,\n    private web3service: ConnectWeb3Service,\n    private tokenService: TokenService\n  ) { }\n\n  get openRequests(): number {\n    return this.orderRequests.length;\n  }\n\n  addOrder(order: any): void {\n    order['clickedOfferDeal'] = false;\n    const helper_maker = this.tokenService.getTokenAndWhetherItsValid(order.makerToken);\n    const helper_taker = this.tokenService.getTokenAndWhetherItsValid(order.takerToken);\n    order['makerProps'] = helper_maker.token;\n    order['takerProps'] = helper_taker.token;\n    order['makerValid'] = helper_maker.isValid;\n    order['takerValid'] = helper_taker.isValid;\n    order['bothTokensValid'] = helper_maker.isValid && helper_taker.isValid;\n    order['makerDecimals'] = 10 ** order.makerProps.decimals;\n    order['takerDecimals'] = 10 ** order.takerProps.decimals;\n\n    const promiseList = [];\n\n    promiseList.push(\n      this.firebaseService.getUserAliasFromAddress(order.takerAddress)\n      .then(alias => {\n        order['alias'] = alias;\n      })\n    );\n\n    promiseList.push(\n      this.erc20service.balance(order.makerToken, order.takerAddress)\n      .then(balance => {\n        order['takerBalanceMakerToken'] = balance;\n      })\n    );\n\n    promiseList.push(\n      this.erc20service.balance(order.takerToken, order.takerAddress)\n      .then(balance => {\n        order['takerBalanceTakerToken'] = balance;\n      })\n    );\n    Promise.all(promiseList)\n    .then(() => {\n      this.orderRequests.push(order);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OtherUser.html":{"url":"interfaces/OtherUser.html","title":"interface - OtherUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OtherUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/types/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        alias\n                                \n                                \n                                        uid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        alias\n                                    \n                                \n                                \n                                    \n                                        alias:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Message {\n  user: string;\n  message: string;\n  timestamp: number;\n}\n\nexport interface StoredMessage {\n  uid: string;\n  message: string;\n  timestamp: number;\n}\n\nexport interface Peer {\n  address: string;\n  messageHistory: Message[];\n  hasUnreadMessages: boolean;\n  isOnline: boolean;\n  alias: string;\n  uid: string;\n}\n\nexport interface Token {\n  address: string;\n  name: string;\n  symbol: string;\n  decimals: number;\n}\n\nexport interface LoggedInUser {\n  address: string;\n  wsAddress: string;\n  alias: string;\n  uid: string;\n}\nexport interface OtherUser {\n  address: string;\n  alias: string;\n  uid: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Peer.html":{"url":"interfaces/Peer.html","title":"interface - Peer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Peer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/types/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        alias\n                                \n                                \n                                        hasUnreadMessages\n                                \n                                \n                                        isOnline\n                                \n                                \n                                        messageHistory\n                                \n                                \n                                        uid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        alias\n                                    \n                                \n                                \n                                    \n                                        alias:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasUnreadMessages\n                                    \n                                \n                                \n                                    \n                                        hasUnreadMessages:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isOnline\n                                    \n                                \n                                \n                                    \n                                        isOnline:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messageHistory\n                                    \n                                \n                                \n                                    \n                                        messageHistory:     Message[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Message[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Message {\n  user: string;\n  message: string;\n  timestamp: number;\n}\n\nexport interface StoredMessage {\n  uid: string;\n  message: string;\n  timestamp: number;\n}\n\nexport interface Peer {\n  address: string;\n  messageHistory: Message[];\n  hasUnreadMessages: boolean;\n  isOnline: boolean;\n  alias: string;\n  uid: string;\n}\n\nexport interface Token {\n  address: string;\n  name: string;\n  symbol: string;\n  decimals: number;\n}\n\nexport interface LoggedInUser {\n  address: string;\n  wsAddress: string;\n  alias: string;\n  uid: string;\n}\nexport interface OtherUser {\n  address: string;\n  alias: string;\n  uid: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/RoundPipe.html":{"url":"pipes/RoundPipe.html","title":"pipe - RoundPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  RoundPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/round.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        round\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: number, digits: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/round.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        digits\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {Pipe} from '@angular/core';\n\n@Pipe({name: 'round'})\nexport class RoundPipe {\n  transform(value: number, digits: number): number {\n    return Math.round(value*10**digits) / 10**digits;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RouterWebsocketActivatedService.html":{"url":"injectables/RouterWebsocketActivatedService.html","title":"injectable - RouterWebsocketActivatedService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  RouterWebsocketActivatedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/router-websocket-activated.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connectionService: ConnectionService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/router-websocket-activated.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connectionService\n                                                  \n                                                        \n                                                                    ConnectionService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/router-websocket-activated.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/router-websocket-activated.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { ConnectionService } from '../services/connection.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouterWebsocketActivatedService implements CanActivate {\n\n  constructor(\n    private connectionService: ConnectionService,\n    public router: Router,\n  ) { }\n\n  canActivate(): boolean {\n    if (!this.connectionService.connected) {\n      console.log('Rerouting.');\n      this.router.navigate(['']);\n      return false;\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StoredMessage.html":{"url":"interfaces/StoredMessage.html","title":"interface - StoredMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StoredMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/types/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                                \n                                        timestamp\n                                \n                                \n                                        uid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Message {\n  user: string;\n  message: string;\n  timestamp: number;\n}\n\nexport interface StoredMessage {\n  uid: string;\n  message: string;\n  timestamp: number;\n}\n\nexport interface Peer {\n  address: string;\n  messageHistory: Message[];\n  hasUnreadMessages: boolean;\n  isOnline: boolean;\n  alias: string;\n  uid: string;\n}\n\nexport interface Token {\n  address: string;\n  name: string;\n  symbol: string;\n  decimals: number;\n}\n\nexport interface LoggedInUser {\n  address: string;\n  wsAddress: string;\n  alias: string;\n  uid: string;\n}\nexport interface OtherUser {\n  address: string;\n  alias: string;\n  uid: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Token.html":{"url":"interfaces/Token.html","title":"interface - Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Token\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/types/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        decimals\n                                \n                                \n                                        name\n                                \n                                \n                                        symbol\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        decimals\n                                    \n                                \n                                \n                                    \n                                        decimals:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        symbol\n                                    \n                                \n                                \n                                    \n                                        symbol:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Message {\n  user: string;\n  message: string;\n  timestamp: number;\n}\n\nexport interface StoredMessage {\n  uid: string;\n  message: string;\n  timestamp: number;\n}\n\nexport interface Peer {\n  address: string;\n  messageHistory: Message[];\n  hasUnreadMessages: boolean;\n  isOnline: boolean;\n  alias: string;\n  uid: string;\n}\n\nexport interface Token {\n  address: string;\n  name: string;\n  symbol: string;\n  decimals: number;\n}\n\nexport interface LoggedInUser {\n  address: string;\n  wsAddress: string;\n  alias: string;\n  uid: string;\n}\nexport interface OtherUser {\n  address: string;\n  alias: string;\n  uid: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenService.html":{"url":"injectables/TokenService.html","title":"injectable - TokenService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/token.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                customTokens\n                            \n                            \n                                    Public\n                                lastUpdateOfCustomTokens\n                            \n                            \n                                    Public\n                                validatedTokens\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCustomTokenListFromDB\n                            \n                            \n                                getToken\n                            \n                            \n                                getTokenAndWhetherItsValid\n                            \n                            \n                                getTokenByName\n                            \n                            \n                                getValidatedTokens\n                            \n                            \n                                isValidToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseService: FirebaseService, erc20Service: Erc20Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/token.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                    FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        erc20Service\n                                                  \n                                                        \n                                                                    Erc20Service\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCustomTokenListFromDB\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCustomTokenListFromDB()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/token.service.ts:107\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToken(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/token.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Token\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTokenAndWhetherItsValid\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTokenAndWhetherItsValid(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/token.service.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTokenByName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTokenByName(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/token.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Token\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getValidatedTokens\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetValidatedTokens()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/token.service.ts:102\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Token[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isValidToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nisValidToken(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/token.service.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            customTokens\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        customTokens:     Token[]\n\n                    \n                \n                    \n                        \n                            Type :     Token[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/token.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastUpdateOfCustomTokens\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastUpdateOfCustomTokens:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/token.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            validatedTokens\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validatedTokens:     Token[]\n\n                    \n                \n                    \n                        \n                            Type :     Token[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/token.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { FirebaseService } from './firebase.service';\nimport { Erc20Service } from './erc20.service';\n\nimport { validatedTokens } from './tokens-validated';\nimport { Token } from '../types/types';\n\nexport const EtherAddress = '0x0000000000000000000000000000000000000000';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n\n  public validatedTokens: Token[];\n  public customTokens: Token[];\n\n  public lastUpdateOfCustomTokens = 0;\n\n  constructor(\n    private firebaseService: FirebaseService,\n    private erc20Service: Erc20Service,\n  ) { }\n\n  getToken(address: string): Token {\n    let validToken = validatedTokens.find(x => {\n      return x.address === address;\n    });\n\n    if (validToken) {\n      return validToken;\n    } else {\n      validToken = this.customTokens.find(x => {\n        return x.address === address;\n      });\n      if (validToken) {\n        return validToken;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  getTokenByName(name: string): Token {\n    let validToken = validatedTokens.find(x => {\n      return x.name === name;\n    });\n\n    if (validToken) {\n      return validToken;\n    } else {\n      validToken = this.customTokens.find(x => {\n        return x.name === name;\n      });\n      if (validToken) {\n        return validToken;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  getTokenAndWhetherItsValid(address: string): any {\n    let isValid: boolean;\n    let token: Token;\n\n    token = validatedTokens.find(x => {\n      return x.address === address;\n    });\n\n    if (token) {\n      isValid = true;\n    } else {\n      token = this.customTokens.find(x => {\n        return x.address === address;\n      });\n      if (token) {\n        isValid = false;\n      } else {\n        token = null;\n        isValid = false;\n      }\n    }\n    return {\n      token: token,\n      isValid: isValid\n    };\n  }\n\n  isValidToken(address: string): boolean {\n    const validToken = validatedTokens.find(x => {\n      return x.address === address;\n    });\n    if (validToken) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  getValidatedTokens(): Token[] {\n    this.validatedTokens = validatedTokens;\n    return validatedTokens;\n  }\n\n  getCustomTokenListFromDB(): Promise {\n    if (Date.now() - this.lastUpdateOfCustomTokens > 60000) {\n      this.lastUpdateOfCustomTokens = Date.now();\n      return this.firebaseService.getTokenListFromDatabase()\n      .then((customTokens) => {\n        this.customTokens = customTokens;\n        return customTokens;\n      });\n    } else {\n      return Promise.resolve(this.customTokens);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserOnlineService.html":{"url":"injectables/UserOnlineService.html","title":"injectable - UserOnlineService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  UserOnlineService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user-online.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                users\n                            \n                            \n                                    Public\n                                usersByAddress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                isUserListed\n                            \n                            \n                                isUserListedByAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user-online.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(user: OtherUser)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/user-online.service.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    OtherUser\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isUserListed\n                            \n                            \n                        \n                    \n                \n                \n                    \nisUserListed(uid: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/user-online.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uid\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isUserListedByAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \nisUserListedByAddress(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/user-online.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user-online.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            usersByAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        usersByAddress:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user-online.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { OtherUser } from '../types/types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserOnlineService {\n\n  public users = {};\n  public usersByAddress = {};\n\n  constructor() {\n  }\n\n  addUser(user: OtherUser): void {\n    if (!this.isUserListed(user.uid)) {\n      this.users[user.uid] = {\n        alias: user.alias,\n        address: user.address\n      };\n\n      this.users[user.address] = {\n        alias: user.alias,\n        uid: user.uid\n      };\n    }\n  }\n\n  isUserListed(uid: string): boolean {\n    return this.users[uid] !== undefined;\n  }\n\n  isUserListedByAddress(address: string): boolean {\n    return this.usersByAddress[address] !== undefined;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VerifyUserComponent.html":{"url":"components/VerifyUserComponent.html","title":"component - VerifyUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  VerifyUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/verify-user/verify-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-verify-user\n            \n\n            \n                styleUrls\n                verify-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./verify-user.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                responseMessage\n                            \n                            \n                                    Public\n                                sendMail\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                sendVerificationMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseService: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/verify-user/verify-user.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                    FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/verify-user/verify-user.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendVerificationMail\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendVerificationMail()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/verify-user/verify-user.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            responseMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        responseMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/verify-user/verify-user.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sendMail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sendMail:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/verify-user/verify-user.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { FirebaseService } from '../services/firebase.service';\n@Component({\n  selector: 'app-verify-user',\n  templateUrl: './verify-user.component.html',\n  styleUrls: ['./verify-user.component.scss']\n})\nexport class VerifyUserComponent implements OnInit {\n\n  public sendMail = false;\n  public responseMessage = '';\n  constructor(\n    private firebaseService: FirebaseService,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  sendVerificationMail(): void {\n    this.firebaseService.user.sendEmailVerification();\n    this.sendMail = true;\n\n    this.responseMessage = 'Follow the link that we sent to ' +\n      this.firebaseService.user.email + ' and then log in again';\n\n    setTimeout(() => {\n      this.firebaseService.logOffUser();\n    }, 5000);\n  }\n\n}\n\n    \n\n    \n        \n  \n    Verify your account\n  \n  \n    \n      SEND VERIFICATION MAIL\n    \n  \n\n\n\n  {{responseMessage}}\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Verify your account              SEND VERIFICATION MAIL        {{responseMessage}}  '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AnswerOrdersComponent', 'selector': 'app-answer-orders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddPeerComponent', 'selector': 'app-dialog-add-peer'},{'name': 'DialogAddTokenComponent', 'selector': 'app-dialog-add-token'},{'name': 'DialogGetOrderComponent', 'selector': 'app-dialog-get-order'},{'name': 'DialogSendOfflineComponent', 'selector': 'app-dialog-send-offline'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FindIntentsComponent', 'selector': 'app-find-intents'},{'name': 'GetOrderComponent', 'selector': 'app-get-order'},{'name': 'InitialPageComponent', 'selector': 'app-initial-page'},{'name': 'MainframeComponent', 'selector': 'app-mainframe'},{'name': 'MessageSystemComponent', 'selector': 'app-message-system'},{'name': 'MyAccountComponent', 'selector': 'app-my-account'},{'name': 'SetIntentsComponent', 'selector': 'app-set-intents'},{'name': 'VerifyUserComponent', 'selector': 'app-verify-user'},{'name': 'WhosOnlineComponent', 'selector': 'app-whos-online'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'},{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'VerifyUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WhosOnlineComponent.html":{"url":"components/WhosOnlineComponent.html","title":"component - WhosOnlineComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WhosOnlineComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/whos-online/whos-online.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-whos-online\n            \n\n            \n                styleUrls\n                whos-online.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./whos-online.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                columnSpaceObserver\n                            \n                            \n                                    Public\n                                displayedPeople\n                            \n                            \n                                    Public\n                                firebaseService\n                            \n                            \n                                    Public\n                                pageIndex\n                            \n                            \n                                    Public\n                                pageSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                page\n                            \n                            \n                                refresh\n                            \n                            \n                                updateDisplayedPeople\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(columnSpaceObserver: ColumnSpaceObserverService, firebaseService: FirebaseService, messageService: MessagingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/whos-online/whos-online.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        columnSpaceObserver\n                                                  \n                                                        \n                                                                    ColumnSpaceObserverService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                    FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessagingService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \nmessage(user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/whos-online/whos-online.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/whos-online/whos-online.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                            \n                        \n                    \n                \n                \n                    \npage(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/whos-online/whos-online.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refresh\n                            \n                            \n                        \n                    \n                \n                \n                    \nrefresh()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/whos-online/whos-online.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateDisplayedPeople\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateDisplayedPeople()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/whos-online/whos-online.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            columnSpaceObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        columnSpaceObserver:     ColumnSpaceObserverService\n\n                    \n                \n                    \n                        \n                            Type :     ColumnSpaceObserverService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/whos-online/whos-online.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            displayedPeople\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayedPeople:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/whos-online/whos-online.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firebaseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firebaseService:     FirebaseService\n\n                    \n                \n                    \n                        \n                            Type :     FirebaseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/whos-online/whos-online.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pageIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pageIndex:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/whos-online/whos-online.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pageSize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pageSize:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 6\n                        \n                    \n                        \n                            \n                                    Defined in src/app/whos-online/whos-online.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport {MatTableDataSource} from '@angular/material';\n\nimport { ColumnSpaceObserverService } from '../services/column-space-observer.service';\nimport { MessagingService } from '../services/messaging.service';\nimport { FirebaseService } from '../services/firebase.service';\n\n@Component({\n  selector: 'app-whos-online',\n  templateUrl: './whos-online.component.html',\n  styleUrls: ['./whos-online.component.scss']\n})\nexport class WhosOnlineComponent implements OnInit {\n\n  constructor(\n    public columnSpaceObserver: ColumnSpaceObserverService,\n    public firebaseService: FirebaseService,\n    private messageService: MessagingService,\n  ) { }\n\n  public pageSize = 6;\n  public pageIndex = 0;\n  public displayedPeople;\n\n  ngOnInit() {\n    this.refresh();\n  }\n\n  message(user: any) {\n    this.messageService.getPeerAndAdd(user.uid)\n    .then((peer) => {\n      this.messageService.selectedPeer = peer;\n      this.messageService.showMessenger = true;\n    });\n  }\n\n  page(event) {\n    this.pageIndex = event.pageIndex;\n    this.updateDisplayedPeople();\n  }\n\n  refresh(): void {\n    if (Date.now() - this.firebaseService.lastTimeLoadedUserList > 60000) {\n      this.firebaseService.readUserList();\n    }\n  }\n\n  updateDisplayedPeople() {\n    this.displayedPeople = this.firebaseService.whosOnlineList.slice(\n      this.pageIndex * this.pageSize,\n      (this.pageIndex + 1) * this.pageSize);\n  }\n}\n\n    \n\n    \n         Who is online? \n\n  \n      autorenew\n  \n\n\n    \n    \n      \n        \n          {{user.alias}}\n        \n        \n          Address {{user.address}}\n        \n        \n          MESSAGE\n        \n      \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' Who is online?         autorenew                                  {{user.alias}}                          Address {{user.address}}                          MESSAGE                    '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AnswerOrdersComponent', 'selector': 'app-answer-orders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddPeerComponent', 'selector': 'app-dialog-add-peer'},{'name': 'DialogAddTokenComponent', 'selector': 'app-dialog-add-token'},{'name': 'DialogGetOrderComponent', 'selector': 'app-dialog-get-order'},{'name': 'DialogSendOfflineComponent', 'selector': 'app-dialog-send-offline'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FindIntentsComponent', 'selector': 'app-find-intents'},{'name': 'GetOrderComponent', 'selector': 'app-get-order'},{'name': 'InitialPageComponent', 'selector': 'app-initial-page'},{'name': 'MainframeComponent', 'selector': 'app-mainframe'},{'name': 'MessageSystemComponent', 'selector': 'app-message-system'},{'name': 'MyAccountComponent', 'selector': 'app-my-account'},{'name': 'SetIntentsComponent', 'selector': 'app-set-intents'},{'name': 'VerifyUserComponent', 'selector': 'app-verify-user'},{'name': 'WhosOnlineComponent', 'selector': 'app-whos-online'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'},{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'WhosOnlineComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Window.html":{"url":"interfaces/Window.html","title":"interface - Window","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Window\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/connectWeb3.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        web3\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        web3\n                                    \n                                \n                                \n                                    \n                                        web3:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { ConnectionService } from './connection.service';\n\ndeclare var require: any;\nconst Web3 = require('web3');\n\ndeclare global {\n  interface Window { web3: any; }\n}\nwindow.web3 = window.web3 || undefined;\n\n@Injectable()\nexport class ConnectWeb3Service {\n\n  private _web3: any;\n  public desiredNetwork = 'Rinkeby';\n\n  public connected = false;\n  public correctNetwork = false;\n  public accountConnected = false;\n\n  public connected_to: string;\n  public connected_to_network: string;\n  public connectedAccount: string;\n  constructor(\n    private connectionService: ConnectionService,\n  ) { }\n\n\n  get web3(): any {\n    if (!this._web3) {\n      this.connectToNode();\n    }\n    return this._web3;\n  }\n\n  set web3(web3: any) {\n    this._web3 = web3;\n  }\n\n  get connectionEstablished(): boolean {\n    return (this.connected && this.correctNetwork && this.accountConnected);\n  }\n\n  checkConnection(): void {\n    // check if connection to web3 is available via web3\n    this.isConnected()\n    .then(connected => {\n      this.connected = connected;\n      if (connected) { // generally a connection available?\n        return this.getNetworkId();\n      } else {\n        return null;\n      }\n    })\n    .then(network => {\n      // is it connected to the correct network?\n      this.correctNetwork = (network === this.desiredNetwork);\n      return this.getAccount();\n    }).then(account => {\n      // is an account connected?\n      this.accountConnected = account !== undefined;\n\n      // check whether web3 account is the same as the websocket registered one\n      if (this.accountConnected) {\n        const accountLC = account.toLowerCase();\n        this.connectionService.loggedInUser.address = accountLC;\n\n        if (this.connectionService.loggedInUser.wsAddress\n        && accountLC !== this.connectionService.loggedInUser.wsAddress) {\n          this.connectionService.wsConnected = false;\n        }\n      }\n\n      // log whether connection to web3 is established\n      this.connectionService.web3Connected = this.connectionEstablished;\n    }).catch((error) => {console.log('Error while checking connection.'); });\n  }\n\n  connectToNode(): void {\n    const connectMetamask: () => void = () => {\n      console.log('Connecting to Metamask.');\n      this.web3 = new Web3(window.web3.currentProvider);\n      this.connected_to = 'Metamask';\n    };\n    const connectLocalNode: () => void = () => {\n      console.log('Connecting to localhost:8545');\n      this.web3 = new Web3('http://localhost:8545');\n      this.connected_to = 'local node';\n    };\n\n    console.log('Initializing Web3.');\n    if (typeof this._web3 !== 'undefined') { // if already defined -> ok.\n      console.log('Is already initialized. Reconnecting to current provider.');\n      this.web3 = new Web3(this.web3.currentProvider);\n    } else if (typeof window.web3 !== 'undefined') { // use injected web3 provider from browser\n      connectMetamask();\n    } else {\n      connectLocalNode();\n    }\n    this.getNetworkId();\n    console.log('This page is using web3 version:', this.web3.version);\n  }\n\n  getNetworkId(): Promise {\n    return this.web3.eth.net.getId().then(id => {\n      if (id === 1) {\n        this.connected_to_network = 'Mainnet';\n      } else if (id === 3) {\n        this.connected_to_network = 'Ropsten';\n      } else if (id === 4) {\n        this.connected_to_network = 'Rinkeby';\n      } else if (id === 42) {\n        this.connected_to_network = 'Kovan';\n      } else {\n        this.connected_to_network = 'Unknown';\n      }\n      return this.connected_to_network;\n      });\n  }\n\n  isConnected(): Promise {\n    return this.web3.eth.net.isListening();\n  }\n\n  getAccount(): Promise {\n    return this.web3.eth.getAccounts().then(result => {\n      this.connectedAccount = result[0];\n      return this.connectedAccount;\n    });\n  }\n\n  getBalance(account: string): Promise {\n    return this.web3.eth.getBalance(account).then(result => {\n      return result;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/account/account.component.ts\n            \n            \n                component\n            \n            \n                AccountComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/answer-orders/answer-orders.component.ts\n            \n            \n                component\n            \n            \n                AnswerOrdersComponent\n            \n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                    src/app/answer-orders/answer-orders.component.ts\n            \n            \n                interface\n            \n            \n                Order\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/app.module.ts\n            \n            \n                variable\n            \n            \n                emailCustomConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/app.module.ts\n            \n            \n                variable\n            \n            \n                facebookCustomConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/app.module.ts\n            \n            \n                variable\n            \n            \n                firebaseUiAuthConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/app.module.ts\n            \n            \n                variable\n            \n            \n                googleCustomConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/dialogs/dialog-add-token/dialog-add-token.component.ts\n            \n            \n                component\n            \n            \n                DialogAddTokenComponent\n            \n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                    src/app/dialogs/dialog-get-order/dialog-get-order.component.ts\n            \n            \n                component\n            \n            \n                DialogGetOrderComponent\n            \n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                    src/app/directives/autofocus.directive.ts\n            \n            \n                directive\n            \n            \n                AutofocusDirective\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/directives/focus.directive.ts\n            \n            \n                directive\n            \n            \n                FocusDirective\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/error/error.component.ts\n            \n            \n                component\n            \n            \n                ErrorComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/find-intents/find-intents.component.ts\n            \n            \n                component\n            \n            \n                FindIntentsComponent\n            \n            \n                2 %\n                (1/37)\n            \n        \n        \n            \n                \n                    src/app/get-order/get-order.component.ts\n            \n            \n                component\n            \n            \n                GetOrderComponent\n            \n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                    src/app/initial-page/initial-page.component.ts\n            \n            \n                component\n            \n            \n                InitialPageComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/mainframe/mainframe.component.ts\n            \n            \n                component\n            \n            \n                MainframeComponent\n            \n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                    src/app/message-system/dialog-add-peer/dialog-add-peer.component.ts\n            \n            \n                component\n            \n            \n                DialogAddPeerComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/app/message-system/dialog-send-offline/dialog-send-offline.component.ts\n            \n            \n                component\n            \n            \n                DialogSendOfflineComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/message-system/message-system.component.ts\n            \n            \n                component\n            \n            \n                MessageSystemComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    src/app/my-account/my-account.component.ts\n            \n            \n                component\n            \n            \n                MyAccountComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    src/app/pipes/callback.ts\n            \n            \n                pipe\n            \n            \n                CallbackPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/pipes/round.ts\n            \n            \n                pipe\n            \n            \n                RoundPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/airswapdex.service.ts\n            \n            \n                injectable\n            \n            \n                AirswapdexService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/services/column-space-observer.service.ts\n            \n            \n                injectable\n            \n            \n                ColumnSpaceObserverService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/services/connectWeb3.service.ts\n            \n            \n                injectable\n            \n            \n                ConnectWeb3Service\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                    src/app/services/connectWeb3.service.ts\n            \n            \n                interface\n            \n            \n                Window\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/services/connectWeb3.service.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/connectWeb3.service.ts\n            \n            \n                variable\n            \n            \n                Web3\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/connection.service.ts\n            \n            \n                injectable\n            \n            \n                ConnectionService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/services/erc20.service.ts\n            \n            \n                injectable\n            \n            \n                Erc20Service\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    src/app/services/firebase.service.ts\n            \n            \n                injectable\n            \n            \n                FirebaseService\n            \n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                    src/app/services/get-order.service.ts\n            \n            \n                injectable\n            \n            \n                GetOrderService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/services/messaging.service.ts\n            \n            \n                injectable\n            \n            \n                MessagingService\n            \n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                    src/app/services/order-requests.service.ts\n            \n            \n                injectable\n            \n            \n                OrderRequestsService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/services/router-websocket-activated.service.ts\n            \n            \n                injectable\n            \n            \n                RouterWebsocketActivatedService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/services/token.service.ts\n            \n            \n                injectable\n            \n            \n                TokenService\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    src/app/services/token.service.ts\n            \n            \n                variable\n            \n            \n                EtherAddress\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/tokens-validated.ts\n            \n            \n                variable\n            \n            \n                validatedTokens\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/tokens.ts\n            \n            \n                variable\n            \n            \n                addAndUpdateTokenLists\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/tokens.ts\n            \n            \n                variable\n            \n            \n                addToken\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/tokens.ts\n            \n            \n                variable\n            \n            \n                addTokenByAddressFromEthplorer\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/tokens.ts\n            \n            \n                variable\n            \n            \n                EtherAddress\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/tokens.ts\n            \n            \n                variable\n            \n            \n                EthereumTokens\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/tokens.ts\n            \n            \n                variable\n            \n            \n                EthereumTokensSA\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/tokens.ts\n            \n            \n                variable\n            \n            \n                EthereumTokensSN\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/tokens.ts\n            \n            \n                variable\n            \n            \n                getTokenByAddress\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/tokens.ts\n            \n            \n                variable\n            \n            \n                getTokenByName\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/user-online.service.ts\n            \n            \n                injectable\n            \n            \n                UserOnlineService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/services/websocket.service.ts\n            \n            \n                injectable\n            \n            \n                WebsocketService\n            \n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                    src/app/services/websocket.service.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/websocket.service.ts\n            \n            \n                variable\n            \n            \n                uuidv4\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/set-intents/set-intents.component.ts\n            \n            \n                component\n            \n            \n                SetIntentsComponent\n            \n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                    src/app/types/types.ts\n            \n            \n                interface\n            \n            \n                LoggedInUser\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/types/types.ts\n            \n            \n                interface\n            \n            \n                Message\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/types/types.ts\n            \n            \n                interface\n            \n            \n                OtherUser\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/types/types.ts\n            \n            \n                interface\n            \n            \n                Peer\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/types/types.ts\n            \n            \n                interface\n            \n            \n                StoredMessage\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/types/types.ts\n            \n            \n                interface\n            \n            \n                Token\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/verify-user/verify-user.component.ts\n            \n            \n                component\n            \n            \n                VerifyUserComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/whos-online/whos-online.component.ts\n            \n            \n                component\n            \n            \n                WhosOnlineComponent\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.3\n        \n            @angular/cdk : ^6.2.0\n        \n            @angular/common : ^6.0.3\n        \n            @angular/compiler : ^6.0.3\n        \n            @angular/core : ^6.0.3\n        \n            @angular/flex-layout : ^5.0.0-beta.14\n        \n            @angular/forms : ^6.0.3\n        \n            @angular/http : ^6.0.3\n        \n            @angular/material : ^6.2.0\n        \n            @angular/platform-browser : ^6.0.3\n        \n            @angular/platform-browser-dynamic : ^6.0.3\n        \n            @angular/router : ^6.0.3\n        \n            angularfire2 : ^5.0.0-rc.10\n        \n            core-js : ^2.5.7\n        \n            firebase : ^5.0.4\n        \n            firebaseui : ^3.0.0\n        \n            firebaseui-angular : ^3.0.1\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ^6.2.0\n        \n            rxjs-compat : ^6.2.0\n        \n            web3 : ^1.0.0-beta.34\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAirSwapChat\nProject for peer2peer finding, messaging and order settling on built top of the AirSwap protocol.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccountComponent\n\nAccountComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountComponent->AppModule\n\n\n\n\n\nAnswerOrdersComponent\n\nAnswerOrdersComponent\n\nAppModule -->\n\nAnswerOrdersComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAutofocusDirective\n\nAutofocusDirective\n\nAppModule -->\n\nAutofocusDirective->AppModule\n\n\n\n\n\nCallbackPipe\n\nCallbackPipe\n\nAppModule -->\n\nCallbackPipe->AppModule\n\n\n\n\n\nDialogAddPeerComponent\n\nDialogAddPeerComponent\n\nAppModule -->\n\nDialogAddPeerComponent->AppModule\n\n\n\n\n\nDialogAddTokenComponent\n\nDialogAddTokenComponent\n\nAppModule -->\n\nDialogAddTokenComponent->AppModule\n\n\n\n\n\nDialogGetOrderComponent\n\nDialogGetOrderComponent\n\nAppModule -->\n\nDialogGetOrderComponent->AppModule\n\n\n\n\n\nDialogSendOfflineComponent\n\nDialogSendOfflineComponent\n\nAppModule -->\n\nDialogSendOfflineComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nFindIntentsComponent\n\nFindIntentsComponent\n\nAppModule -->\n\nFindIntentsComponent->AppModule\n\n\n\n\n\nFocusDirective\n\nFocusDirective\n\nAppModule -->\n\nFocusDirective->AppModule\n\n\n\n\n\nGetOrderComponent\n\nGetOrderComponent\n\nAppModule -->\n\nGetOrderComponent->AppModule\n\n\n\n\n\nInitialPageComponent\n\nInitialPageComponent\n\nAppModule -->\n\nInitialPageComponent->AppModule\n\n\n\n\n\nMainframeComponent\n\nMainframeComponent\n\nAppModule -->\n\nMainframeComponent->AppModule\n\n\n\n\n\nMessageSystemComponent\n\nMessageSystemComponent\n\nAppModule -->\n\nMessageSystemComponent->AppModule\n\n\n\n\n\nMyAccountComponent\n\nMyAccountComponent\n\nAppModule -->\n\nMyAccountComponent->AppModule\n\n\n\n\n\nRoundPipe\n\nRoundPipe\n\nAppModule -->\n\nRoundPipe->AppModule\n\n\n\n\n\nSetIntentsComponent\n\nSetIntentsComponent\n\nAppModule -->\n\nSetIntentsComponent->AppModule\n\n\n\n\n\nVerifyUserComponent\n\nVerifyUserComponent\n\nAppModule -->\n\nVerifyUserComponent->AppModule\n\n\n\n\n\nWhosOnlineComponent\n\nWhosOnlineComponent\n\nAppModule -->\n\nWhosOnlineComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nNgMaterialModule\n\nNgMaterialModule\n\nAppModule -->\n\nNgMaterialModule->AppModule\n\n\n\n\n\nColumnSpaceObserverService\n\nColumnSpaceObserverService\n\nAppModule -->\n\nColumnSpaceObserverService->AppModule\n\n\n\n\n\nConnectWeb3Service\n\nConnectWeb3Service\n\nAppModule -->\n\nConnectWeb3Service->AppModule\n\n\n\n\n\nFirebaseService\n\nFirebaseService\n\nAppModule -->\n\nFirebaseService->AppModule\n\n\n\n\n\nGetOrderService\n\nGetOrderService\n\nAppModule -->\n\nGetOrderService->AppModule\n\n\n\n\n\nMessagingService\n\nMessagingService\n\nAppModule -->\n\nMessagingService->AppModule\n\n\n\n\n\nOrderRequestsService\n\nOrderRequestsService\n\nAppModule -->\n\nOrderRequestsService->AppModule\n\n\n\n\n\nRouterWebsocketActivatedService\n\nRouterWebsocketActivatedService\n\nAppModule -->\n\nRouterWebsocketActivatedService->AppModule\n\n\n\n\n\nTokenService\n\nTokenService\n\nAppModule -->\n\nTokenService->AppModule\n\n\n\n\n\nUserOnlineService\n\nUserOnlineService\n\nAppModule -->\n\nUserOnlineService->AppModule\n\n\n\n\n\nWebsocketService\n\nWebsocketService\n\nAppModule -->\n\nWebsocketService->AppModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            2 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        17 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        13 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 pipes\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addAndUpdateTokenLists   (src/.../tokens.ts)\n                        \n                        \n                            addToken   (src/.../tokens.ts)\n                        \n                        \n                            addTokenByAddressFromEthplorer   (src/.../tokens.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            emailCustomConfig   (src/.../app.module.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            EtherAddress   (src/.../tokens.ts)\n                        \n                        \n                            EtherAddress   (src/.../token.service.ts)\n                        \n                        \n                            EthereumTokens   (src/.../tokens.ts)\n                        \n                        \n                            EthereumTokensSA   (src/.../tokens.ts)\n                        \n                        \n                            EthereumTokensSN   (src/.../tokens.ts)\n                        \n                        \n                            facebookCustomConfig   (src/.../app.module.ts)\n                        \n                        \n                            firebaseUiAuthConfig   (src/.../app.module.ts)\n                        \n                        \n                            getTokenByAddress   (src/.../tokens.ts)\n                        \n                        \n                            getTokenByName   (src/.../tokens.ts)\n                        \n                        \n                            googleCustomConfig   (src/.../app.module.ts)\n                        \n                        \n                            require   (src/.../websocket.service.ts)\n                        \n                        \n                            require   (src/.../connectWeb3.service.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            uuidv4   (src/.../websocket.service.ts)\n                        \n                        \n                            validatedTokens   (src/.../tokens-validated.ts)\n                        \n                        \n                            Web3   (src/.../connectWeb3.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/tokens.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            addAndUpdateTokenLists\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        addAndUpdateTokenLists:     \n\n                    \n                \n                    \n                        \n                            Default value : (newToken) => {\n  EthereumTokens.push(newToken);\n  EthereumTokensSA.push(newToken);\n  EthereumTokensSA.sort((a, b) => {\n    const aLow = a.address.toLocaleLowerCase();\n    const bLow = b.address.toLocaleLowerCase();\n    return aLow  {\n    const aLow = a.name.toLocaleLowerCase();\n    const bLow = b.name.toLocaleLowerCase();\n\n      return aLow \n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        addToken:     \n\n                    \n                \n                    \n                        \n                            Default value : (token) => {\n  addAndUpdateTokenLists(token);\n  console.log('Added ' + token.name + ' to Token list.');\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addTokenByAddressFromEthplorer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        addTokenByAddressFromEthplorer:     \n\n                    \n                \n                    \n                        \n                            Default value : (address) => {\n  return fetch(`https://api.ethplorer.io/getTokenInfo/` + address +\n    `?apiKey=freekey`)\n  .then(res => res.json())\n  .then(response => {\n    console.log('Fetched data of ' + response.name + ' from Ethplorer.');\n    const newToken = {\n      'name': response.name,\n      'symbol': response.symbol,\n      'address': address,\n      'logo': '',\n      'decimal': parseInt(response.decimals, 10)\n    };\n    addToken(newToken);\n  });\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EtherAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        EtherAddress:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '0x0000000000000000000000000000000000000000'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EthereumTokens\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        EthereumTokens:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    'address': '0xcc1cbd4f67cceb7c001bd4adf98451237a193ff8',\n    'name': 'AirSwap',\n    'symbol': 'AST',\n    'decimals': '4',\n    'metadata': 'AirSwap'\n  },\n  {\n    'address': '0x0000000000000000000000000000000000000000',\n    'name': 'Ether',\n    'symbol': 'ETH',\n    'decimals': '18',\n  },\n  {\n    'address': '0xbaEd6c1F8Cd4A443Cc372fd15D770e3764B4B2E7'.toLowerCase(),\n    'name': '0x',\n    'symbol': 'ZRX',\n    'decimals': '18',\n  },\n  {\n    'address': '0xf2a8C910676dB689BfD8a3735126B608BDc0D454'.toLowerCase(),\n    'name': 'Kyber',\n    'symbol': 'KNC',\n    'decimals': '18',\n  },\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EthereumTokensSA\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        EthereumTokensSA:     \n\n                    \n                \n                    \n                        \n                            Default value : EthereumTokens.slice(0)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EthereumTokensSN\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        EthereumTokensSN:     \n\n                    \n                \n                    \n                        \n                            Default value : EthereumTokens.slice(0)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTokenByAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getTokenByAddress:     \n\n                    \n                \n                    \n                        \n                            Default value : (address) => {\n    let l = 0;\n    let h = EthereumTokensSA.length - 1;\n\n    const addressLow = address.toLocaleLowerCase();\n\n    while (l  0) {\n            l = m + 1;\n        } else {\n            h = m - 1;\n        }\n    }\n    // if this point is reached, the token was not found in the list\n    return undefined;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTokenByName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getTokenByName:     \n\n                    \n                \n                    \n                        \n                            Default value : (name) => {\n    let l = 0;\n    let h = EthereumTokensSN.length - 1;\n    const nameLow = name.toLocaleLowerCase();\n    while (l  0) {\n            l = m + 1;\n        } else {\n            h = m - 1;\n        }\n    }\n    return undefined;\n}\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emailCustomConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emailCustomConfig:     AuthProviderWithCustomConfig\n\n                    \n                \n                    \n                        \n                            Type :     AuthProviderWithCustomConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provider: AuthProvider.Password,\n  customConfig: {\n    requireDisplayName: true\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            facebookCustomConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        facebookCustomConfig:     AuthProviderWithCustomConfig\n\n                    \n                \n                    \n                        \n                            Type :     AuthProviderWithCustomConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provider: AuthProvider.Facebook,\n  customConfig: {\n    scopes: [\n      'public_profile',\n      'email',\n      'user_likes',\n      'user_friends'\n    ],\n    customParameters: {\n      // Forces password re-entry.\n      auth_type: 'reauthenticate'\n    }\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firebaseUiAuthConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firebaseUiAuthConfig:     FirebaseUIAuthConfig\n\n                    \n                \n                    \n                        \n                            Type :     FirebaseUIAuthConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  providers: [\n    // googleCustomConfig,\n    emailCustomConfig,\n    // AuthProvider.Github,\n    // AuthProvider.Twitter,\n  ],\n  method: AuthMethods.Popup,\n  tos: '',\n  credentialHelper: CredentialHelper.OneTap,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            googleCustomConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        googleCustomConfig:     AuthProviderWithCustomConfig\n\n                    \n                \n                    \n                        \n                            Type :     AuthProviderWithCustomConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provider: AuthProvider.Google,\n  customConfig: {\n    customParameters: {\n      prompt: 'select_account'\n    }\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyBV69Cbiib-VySktArXAzKx7rq9GwjtfiM',\n    authDomain: 'airswapchat.firebaseapp.com',\n    databaseURL: 'https://airswapchat.firebaseio.com',\n    projectId: 'airswapchat',\n    storageBucket: 'airswapchat.appspot.com',\n    messagingSenderId: '732282521654'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  firebase: {\n    apiKey: 'AIzaSyBV69Cbiib-VySktArXAzKx7rq9GwjtfiM',\n    authDomain: 'airswapchat.firebaseapp.com',\n    databaseURL: 'https://airswapchat.firebaseio.com',\n    projectId: 'airswapchat',\n    storageBucket: 'airswapchat.appspot.com',\n    messagingSenderId: '732282521654'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/services/token.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EtherAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        EtherAddress:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '0x0000000000000000000000000000000000000000'\n                        \n                    \n\n\n            \n        \n\n    src/app/services/websocket.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuidv4\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uuidv4:     \n\n                    \n                \n                    \n                        \n                            Default value : require('uuid/v4')\n                        \n                    \n\n\n            \n        \n\n    src/app/services/connectWeb3.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Web3\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Web3:     \n\n                    \n                \n                    \n                        \n                            Default value : require('web3')\n                        \n                    \n\n\n            \n        \n\n    src/app/services/tokens-validated.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            validatedTokens\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validatedTokens:     Token[]\n\n                    \n                \n                    \n                        \n                            Type :     Token[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n      'address': '0xcc1cbd4f67cceb7c001bd4adf98451237a193ff8',\n      'name': 'AirSwap',\n      'symbol': 'AST',\n      'decimals': 4,\n  },\n  {\n      'address': '0x0000000000000000000000000000000000000000',\n      'name': 'Ether',\n      'symbol': 'ETH',\n      'decimals': 18,\n  },\n  {\n      'address': '0xbaEd6c1F8Cd4A443Cc372fd15D770e3764B4B2E7'.toLowerCase(),\n      'name': '0x',\n      'symbol': 'ZRX',\n      'decimals': 18,\n  },\n  {\n      'address': '0xf2a8C910676dB689BfD8a3735126B608BDc0D454'.toLowerCase(),\n      'name': 'Kyber',\n      'symbol': 'KNC',\n      'decimals': 18,\n  },\n]\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
